
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gRPC – gRPC</title>
    <link>https://grpc.io/</link>
    <description>The gRPC blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
    <image>
      <url>https://grpc.io/img/grpc-logo.png</url>
      <title>grpc.io</title>
      <link>https://grpc.io/</link>
    </image>
    
	<atom:link href="https://grpc.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Blog: Highlights in gRPConf 2024:Customer Showcase, Developer Engagement, Birds of Feathers Discussions and more.</title>
      <link>https://grpc.io/blog/grpconf-2024-videos/</link>
      <pubDate>Mon, 25 Nov 2024 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/grpconf-2024-videos/</guid>
      <description>
        We loved hosting gRPConf 2024 this summer in Sunnyvale, California. Thank you to hundreds of developers from Netflix, Apple, Turso, Microsoft, Cisco, Coinbase, LinkedIn, Datadog, Mercari, Aspect Build, Signeen, Authzed, Reboot.dev, to name a few, who joined our special event. We were overwhelmed by the various topics and advanced use cases around the gRPC ecosystem. If you missed the opportunity to join in person, here are the video recordings that highlight the presentations during the day:
      </description>
    </item>
    
    <item>
      <title>Blog: Announcing Our New Mailing List grpc-io-announce</title>
      <link>https://grpc.io/blog/grpc-io-announce/</link>
      <pubDate>Wed, 06 Nov 2024 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/grpc-io-announce/</guid>
      <description>
        Want to stay ahead of the curve on critical gRPC announcements? We&amp;rsquo;ve got you covered!
Introducing grpc-io-announce, a new mailing list dedicated to delivering essential updates directly to your inbox. This high-signal channel cuts through the noise and focuses on what matters most, including:
 Security vulnerabilities and reliability issues: Be the first to know about security concerns and get timely updates on fixes and mitigations. Major platform support changes: Stay informed about changes in support for different platforms.
      </description>
    </item>
    
    <item>
      <title>Blog: Configuring proxyless gRPC with Kubernetes Gateway API and OpenTelemetry metrics for Cloud Service Mesh now available in preview</title>
      <link>https://grpc.io/blog/proxyless-grpc/</link>
      <pubDate>Thu, 12 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/proxyless-grpc/</guid>
      <description>
        We are excited to announce that configuring proxyless gRPC with the Kubernetes Gateway API and OpenTelemetry metrics for Cloud Service Mesh are now available as preview features. This integration allows you to leverage the powerful capabilities of the Kubernetes Gateway API to manage traffic to your gRPC services within the Cloud Service Mesh environment, along with the added benefit of gRPC OpenTelemetry metrics for enhanced observability.
  What&amp;rsquo;s new:  Kubernetes Gateway API Integration: Now you can use the Kubernetes Gateway API to define and manage traffic routing for services running in your Cloud Service Mesh.
      </description>
    </item>
    
    <item>
      <title>Blog: gRPConf 2024 Schedule</title>
      <link>https://grpc.io/blog/grpconf-2024-schedule/</link>
      <pubDate>Wed, 03 Jul 2024 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/grpconf-2024-schedule/</guid>
      <description>
        Attention gRPC community!
Mark your calendars for August 27th, 2024, as gRPConf returns to the Google Cloud Campus in Sunnyvale, California. The schedule is now live!
This is your chance to dive deep into the world of gRPC, connect with fellow developers, and stay ahead of the curve in all things gRPC.
Why Attend?  Learn: Explore the latest gRPC advancements, best practices, and real-world use cases through a series of informative talks and workshops.
      </description>
    </item>
    
    <item>
      <title>Blog: Celebrate gRPC Day</title>
      <link>https://grpc.io/blog/grpc-day-2023/</link>
      <pubDate>Tue, 12 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/grpc-day-2023/</guid>
      <description>
        The gRPC core engineering team is excited to share a new video playlist that accelerates your getting started with gRPC and helps you better understand recently introduced innovations such as gRPC Microservices Observability in GCP (for the full announcement, see blog and codelab.
The materials are for any audience, including individuals starting their gRPC journey as well as established gRPC coders, and place the core technologies of gRPC at your fingertips.
      </description>
    </item>
    
    <item>
      <title>Blog: Can gRPC replace REST and WebSockets for Web Application Communication?</title>
      <link>https://grpc.io/blog/postman-grpcweb/</link>
      <pubDate>Mon, 04 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/postman-grpcweb/</guid>
      <description>
        Welcome to this guest blog entry from our friends at Postman!  In the rapidly evolving landscape of web development, efficiency and performance often stand at the forefront of adoption of new technologies. The work being done with the gRPC-Web library marks a pivotal shift in how developers can utilize the speed and power of gRPC into client-server communication in web applications by replacing REST and some aspects of WebSockets.
      </description>
    </item>
    
    <item>
      <title>Blog: Highlights in gRPConf 2023:Customer Showcase, Developer Engagement, Birds of Feathers Discussions and more.</title>
      <link>https://grpc.io/blog/grpconf-2023-videos/</link>
      <pubDate>Fri, 27 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/grpconf-2023-videos/</guid>
      <description>
        We loved hosting gRPConf 2023 last month in Sunnyvale, California. Thank you to hundreds of developers from Apple, Cisco, Intel, LinkedIn, Netflix, Salesforce, to name a few, who joined our special event. We were overwhelmed by the various topics and advanced use cases around the gRPC ecosystem. If you missed the opportunity to join in person, here are the video recordings that highlight the presentations during the day:
 Keynote gRPC Opening Keynote Abhishek Kumar, Google Arunkumar Jayaraman, Google Keynote Looking at the Past to Understand our Future Jorge Castro, CNCF Keynote Overview of gRPC Ivy Zhuang, Software Engineer, Google How Netflix Makes gRPC Easy to Serve, Consume, and Operate Benjamin Fedorka, Netflix Deep Diving Into gRPC Security A Case Study on API Security Dana White Austin Pearigen gRPC Meets Jakarta EE Ron Sigal, Red Hat Introducing Protobuf Editions Matt Kulukundis Mike Kruskal, Google Building and Testing a gRPC API from Scratch Unleash the Potential with Postman W Ian Douglas What&amp;rsquo;s New in gRPC Security for 2023 Audit Logging and CRL Andrey Ermolov Gregory Cooke, Google Keynote What&amp;rsquo;s New in gRPC Gina Yeh, Google The Security Evolution of gRPC Services in the Mesh Amim Knabben, VMware Integrating gRPC with the Homa Transport Protocol John Ousterhout, Stanford University Load Testing gRPC Services in Node js Kenny Nguyen, gRPSeek Our Journey Connecting Millions of Containers with gRPC Antoine Tollenaere Sergey Matyukevich                          We received a wealth of feedbacks from everyone throughout the day which has helped us shape our future roadmap.
      </description>
    </item>
    
    <item>
      <title>Blog: Announcing gRPConf 2023!</title>
      <link>https://grpc.io/blog/grpconf-2023-announcement/</link>
      <pubDate>Wed, 05 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/grpconf-2023-announcement/</guid>
      <description>
        gRPConf 2023 is happening!
Register now for $50 | Submit a Talk
Join us at the Google Cloud Campus on September 20, 2023 for a full day of talks, demos, case studies, and code labs. Experts will discuss real-world implementations of gRPC, best practices for developers, and deep dives into specific topics. This is a must-attend event for anyone using gRPC in their applications today, and those considering gRPC for their enterprise microservices.
      </description>
    </item>
    
    <item>
      <title>Blog: gRPConf 2023 Schedule</title>
      <link>https://grpc.io/blog/grpconf-2023-schedule/</link>
      <pubDate>Wed, 05 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/grpconf-2023-schedule/</guid>
      <description>
        Hello gRPC Community!
We are excited to announce that the gRPConf 2023 schedule is now live. We have a schedule with 19 total sessions (5 keynote, 14 breakout) led by a strong group of experts that are using gRPC across a variety of applications and companies. Their experiences and expertise will provide huge value for all attendees whether you are already using gRPC or are still considering it. There will be something for everyone as the talks will span topics such as tooling, implementations, production use, and user stories.
      </description>
    </item>
    
    <item>
      <title>Blog: gRPC performance benchmarks on GKE</title>
      <link>https://grpc.io/blog/performance-benchmarks-gke/</link>
      <pubDate>Tue, 01 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/performance-benchmarks-gke/</guid>
      <description>
        gRPC performance benchmarks have now been transitioned to run on GKE, with similar results but much increased flexibility.
Background gRPC performance testing requires a test driver and workers (one or more clients and a server), as described in gRPC performance benchmarks. Each test may have a different configuration, or scenario, that is passed to the driver and specified as a JSON file. Previously, the driver was run by the continuous integration process, and the workers were run on long-lived GCE VMs.
      </description>
    </item>
    
    <item>
      <title>Blog: Running gRPC and Protobuf on ARM64 (on Linux)</title>
      <link>https://grpc.io/blog/grpc-on-arm64/</link>
      <pubDate>Wed, 23 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/grpc-on-arm64/</guid>
      <description>
        ARM processors have recently been gaining importance in many areas of compute, including those that were traditionally considered to be an x86_64-only domain. Thanks to the momentum around the ARM ecosystem, we can expect adoption of ARM platforms to grow significantly. The same is true for providing software that supports ARM-based platforms.
Since the main purpose of gRPC and protocol buffers is to interconnect distributed systems, their role in supporting ARM compute is especially important.
      </description>
    </item>
    
    <item>
      <title>Blog: The future of gRPC in C# belongs to grpc-dotnet</title>
      <link>https://grpc.io/blog/grpc-csharp-future/</link>
      <pubDate>Sat, 01 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/grpc-csharp-future/</guid>
      <description>
        Update 2023-10-02: The maintenance period for Grpc.Core has been extended again, until at least October 2024. See announcement for up to date info on Grpc.Core.
Update 2022-05-03: The maintenance period for Grpc.Core has been extended until May 2023. See announcement for more info on the future of Grpc.Core.
TL;DR grpc-dotnet (the Grpc.Net.Client and Grpc.AspNetCore.Server nuget packages) is now the recommended gRPC implementation for .NET/C#. The original gRPC C# implementation (the Grpc.
      </description>
    </item>
    
    <item>
      <title>Blog: Analyzing gRPC messages using Wireshark</title>
      <link>https://grpc.io/blog/wireshark/</link>
      <pubDate>Wed, 03 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/wireshark/</guid>
      <description>
        Wireshark is an open source network protocol analyzer that can be used for protocol development, network troubleshooting, and education. Wireshark lets you analyze gRPC messages that are transferred over the network, and learn about the binary format of these messages.
In this post, you&amp;rsquo;ll learn how to configure and use the Wireshark gRPC dissector and the Protocol Buffers (Protobuf) dissector, which are protocol-specific components that allow you to analyze gRPC messages with Wireshark.
      </description>
    </item>
    
    <item>
      <title>Blog: Interceptors in gRPC-Web</title>
      <link>https://grpc.io/blog/grpc-web-interceptor/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/grpc-web-interceptor/</guid>
      <description>
        We&amp;rsquo;re pleased to announce support for interceptors in gRPC-web as of release 1.1.0. While the current design is based on gRPC client interceptors available from other gRPC languages, it also includes gRPC-web specific features that should make interceptors easy to adopt and use alongside modern web frameworks.
Introduction Similar to other gRPC languages, gRPC-web supports unary and server-streaming interceptors. For each kind of interceptor, we&amp;rsquo;ve defined an interface containing a single intercept() method:
      </description>
    </item>
    
    <item>
      <title>Blog: Announcing gRPC-JS 1.0</title>
      <link>https://grpc.io/blog/grpc-js-1.0/</link>
      <pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/grpc-js-1.0/</guid>
      <description>
        We are excited to announce the release of version 1.0 of gRPC-JS (@grpc/grpc-js), a pure-TypeScript reimplementation of the original Node gRPC library, grpc.
Features gRPC-JS supports the following features, which should cover most use cases:
 Clients Automatic reconnection Servers Streaming Metadata Partial compression support: clients can decompress response messages Pick first and round robin load balancing policies Client Interceptors Connection Keepalives HTTP Connect support (proxies)  Should I use @grpc/grpc-js or grpc?
      </description>
    </item>
    
    <item>
      <title>Blog: Kotlin, meet gRPC</title>
      <link>https://grpc.io/blog/kotlin-meet-grpc/</link>
      <pubDate>Thu, 16 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/kotlin-meet-grpc/</guid>
      <description>
        As developers work to modernize applications, they need foundational tools that are simple and scalable. gRPC is a high-performance, open-source, universal RPC framework originally developed at Google that developers are adopting in tremendous numbers, helping them connect services more easily and reliably. Paired with Kotlin, the second most popular JVM-based programming language in the world, developers can build everything from mobile apps to cloud microservices. To help, we&amp;rsquo;ve open-sourced gRPC Kotlin for the JVM, allowing you to use gRPC with your Kotlin projects.
      </description>
    </item>
    
    <item>
      <title>Blog: gRPC comes to Cloud Run</title>
      <link>https://grpc.io/blog/grpc-cloud-run/</link>
      <pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/grpc-cloud-run/</guid>
      <description>
        &lt;p&gt;&lt;a href=&#34;https://cloud.google.com/run&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cloud Run&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; is a serverless platform offered by Google Cloud that lets you run
stateless server containers in a fully managed environment. Most Cloud Run apps
use HTTP JSON REST to serve requests, but since September 2019, apps can also
use unary gRPC services!&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: Improvements to gRPC&#39;s CMake Build System</title>
      <link>https://grpc.io/blog/cmake-improvements/</link>
      <pubDate>Mon, 16 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/cmake-improvements/</guid>
      <description>
        For the past few months, Kitware Inc. has been working with the gRPC team to improve gRPC’s CMake support. The goal of the effort was to modernize gRPC’s CMake build with the most current features and techniques CMake has to offer. This has improved the user experience for gRPC developers choosing to use gRPC’s CMake as a build system. During the effort the CMake build was looked at as a whole, and CMake related issues in GitHub were explored and resolved.
      </description>
    </item>
    
    <item>
      <title>Blog: .NET Core ❤ gRPC</title>
      <link>https://grpc.io/blog/grpc-on-dotnetcore/</link>
      <pubDate>Mon, 23 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/grpc-on-dotnetcore/</guid>
      <description>
        The .NET team at Microsoft has been working in close collaboration with the gRPC team since November 2018 on a new fully managed implementation of gRPC for .NET Core.
We&amp;rsquo;re pleased to announce that grpc-dotnet is now available with .NET Core 3.0 today!
How to get it? grpc-dotnet packages have just been released to NuGet.org and are already available for use in your projects. These packages also require the latest .
      </description>
    </item>
    
    <item>
      <title>Blog: Dear gRPC</title>
      <link>https://grpc.io/blog/hello-pancakes/</link>
      <pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/hello-pancakes/</guid>
      <description>
        Dear gRPC,
We messed up. We are so sorry that we missed your birthday this year. Last year we celebrated with cake and fanfare, but this year we dropped the ball. Please don&amp;rsquo;t think that we love you any less.
You&amp;rsquo;re 4 now and that&amp;rsquo;s a big milestone! You&amp;rsquo;re part of so much amazing technology at companies like Salesforce, Netflix, Spotify, Fanatics, and of course, Google. In fact just this week the biggest API Google has went production-ready with gRPC.
      </description>
    </item>
    
    <item>
      <title>Blog: The state of gRPC in the browser</title>
      <link>https://grpc.io/blog/state-of-grpc-web/</link>
      <pubDate>Tue, 08 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/state-of-grpc-web/</guid>
      <description>
        &lt;p&gt;gRPC 1.0 was released in August 2016 and has since grown to become one of the
premier technical solutions for application communications. It has been adopted
by startups, enterprise companies, and open source projects worldwide.
Its support for polyglot environments, focus on performance, type safety, and
developer productivity has transformed the way developers design their
architectures.&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: Visualizing gRPC Language Stacks</title>
      <link>https://grpc.io/blog/grpc-stacks/</link>
      <pubDate>Tue, 11 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/grpc-stacks/</guid>
      <description>
        &lt;p&gt;Here is a high level overview of the gRPC Stacks.  Each of the &lt;strong&gt;10&lt;/strong&gt; default languages supported by gRPC has multiple layers, allowing you to customize what pieces you want in your application.&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: gRPC-Web is Generally Available</title>
      <link>https://grpc.io/blog/grpc-web-ga/</link>
      <pubDate>Tue, 23 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/grpc-web-ga/</guid>
      <description>
        &lt;p&gt;We are excited to announce the GA release of
&lt;a href=&#34;https://www.npmjs.com/package/grpc-web&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gRPC-Web&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;, a JavaScript client library
that enables web apps to communicate directly with gRPC backend services,
without requiring an HTTP server to act as an intermediary. &amp;ldquo;GA&amp;rdquo; means that
gRPC-Web is now Generally Available and stable and qualified for production use.&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: A short introduction to Channelz</title>
      <link>https://grpc.io/blog/a-short-introduction-to-channelz/</link>
      <pubDate>Wed, 05 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/a-short-introduction-to-channelz/</guid>
      <description>
        &lt;p&gt;Channelz is a tool that provides comprehensive runtime info about connections at
different levels in gRPC. It is designed to help debug live programs, which may
be suffering from network, performance, configuration issues, etc. The
&lt;a href=&#34;https://github.com/grpc/proposal/blob/master/A14-channelz.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gRFC&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; provides a
detailed explanation of channelz design and is the canonical reference for all
channelz implementations across languages. The purpose of this blog is to
familiarize readers with channelz service and how to use it for debugging
issues. The context of this post is set in
&lt;a href=&#34;https://github.com/grpc/grpc-go&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gRPC-Go&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;, but the overall idea should be
applicable across languages. At the time of writing, channelz is available for
&lt;a href=&#34;https://github.com/grpc/grpc-go&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gRPC-Go&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; and
&lt;a href=&#34;https://github.com/grpc/grpc-java&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gRPC-Java&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;. Support for
&lt;a href=&#34;https://github.com/grpc/grpc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;C++&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; and wrapped languages is coming soon.&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: gRPC on HTTP/2 Engineering a Robust, High-performance Protocol</title>
      <link>https://grpc.io/blog/grpc-on-http2/</link>
      <pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/grpc-on-http2/</guid>
      <description>
        &lt;p&gt;In a &lt;a href=&#34;https://www.cncf.io/blog/2018/07/03/http-2-smarter-at-scale/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;previous article&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;, we explored how HTTP/2 dramatically increases network efficiency and enables real-time communication by providing a framework for long-lived connections. In this article, we’ll look at how gRPC builds on HTTP/2’s long-lived connections to create a performant, robust platform for inter-service communication. We will explore the relationship between gRPC and HTTP/2, how gRPC manages HTTP/2 connections, and how gRPC uses HTTP/2 to keep connections alive, healthy, and utilized.&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: gRPC &#43; JSON</title>
      <link>https://grpc.io/blog/grpc-with-json/</link>
      <pubDate>Wed, 15 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/grpc-with-json/</guid>
      <description>
        &lt;p&gt;So you&amp;rsquo;ve bought into this whole RPC thing and want to try it out, but aren&amp;rsquo;t quite sure about Protocol Buffers.  Your existing code encodes your own objects, or perhaps you have code that needs a particular encoding.  What to do?&lt;/p&gt;
&lt;p&gt;Fortunately, gRPC is encoding agnostic!  You can still get a lot of the benefits of gRPC without using Protobuf.  In this post we&amp;rsquo;ll go through how to make gRPC work with other encodings and types.  Let&amp;rsquo;s try using JSON.&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: Take the gRPC Survey!</title>
      <link>https://grpc.io/blog/take-the-grpc-survey/</link>
      <pubDate>Tue, 14 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/take-the-grpc-survey/</guid>
      <description>
        &lt;h2 id=&#34;the-grpc-project-wants-your-feedback&#34;&gt;The gRPC Project wants your feedback!&lt;/h2&gt;
&lt;p&gt;The gRPC project is looking for feedback to improve the gRPC experience. To do this, we are running a &lt;a href=&#34;http://bit.ly/gRPC18survey&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gRPC user survey&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;. We invite you to participate and provide input that will help us better plan and prioritize.&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: Gracefully clean up in gRPC JUnit tests</title>
      <link>https://grpc.io/blog/graceful-cleanup-junit-tests/</link>
      <pubDate>Tue, 26 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/graceful-cleanup-junit-tests/</guid>
      <description>
        &lt;p&gt;It is best practice to always clean up gRPC resources such as client channels, servers, and previously attached Contexts whenever they are no longer needed.&lt;/p&gt;
&lt;p&gt;This is even true for JUnit tests, because otherwise leaked resources may not only linger in your machine forever, but also interfere with subsequent tests. A not-so-bad case is that subsequent tests can&amp;rsquo;t pass because of a leaked resource from the previous test. The worst case is that some subsequent tests pass that wouldn&amp;rsquo;t have passed at all if the previously passed test had not leaked a resource.&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: gRPC Meets .NET SDK And Visual Studio: Automatic Codegen On Build</title>
      <link>https://grpc.io/blog/grpc-dotnet-build/</link>
      <pubDate>Tue, 26 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/grpc-dotnet-build/</guid>
      <description>
        &lt;p&gt;As part of Microsoft&amp;rsquo;s move towards its cross-platform .NET offering, they have
greatly simplified the project file format, and allowed a tight integration of
third-party code generators with .NET projects. We are listening, and now proud
to introduce integrated compilation of Protocol Buffer and gRPC service
&lt;code&gt;.proto&lt;/code&gt; files in .NET C# projects starting with the version 1.17 of the
Grpc.Tools NuGet package, now available from Nuget.org.&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: gRPC ❤ Kotlin</title>
      <link>https://grpc.io/blog/kotlin-gradle-projects/</link>
      <pubDate>Tue, 19 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/kotlin-gradle-projects/</guid>
      <description>
        Did you know that gRPC Java now has out of box support for Kotlin projects built with Gradle? Kotlin is a modern, statically typed language developed by JetBrains that targets the JVM and Android. It is generally easy for Kotlin programs to interoperate with existing Java libraries. To improve this experience further, we have added support to the protobuf-gradle-plugin so that the generated Java libraries are automatically picked up by Kotlin.
      </description>
    </item>
    
    <item>
      <title>Blog: So You Want to Optimize gRPC - Part 2</title>
      <link>https://grpc.io/blog/optimizing-grpc-part-2/</link>
      <pubDate>Mon, 16 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/optimizing-grpc-part-2/</guid>
      <description>
        &lt;p&gt;How fast is gRPC?  Pretty fast if you understand how modern clients and servers are built.  In
&lt;a href=&#34;https://grpc.io/blog/optimizing-grpc-part-1/&#34;&gt;part 1&lt;/a&gt;, I showed how to get an easy &lt;strong&gt;60%&lt;/strong&gt; improvement.  In this
post I show how to get a &lt;strong&gt;10000%&lt;/strong&gt; improvement.&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: So You Want to Optimize gRPC - Part 1</title>
      <link>https://grpc.io/blog/optimizing-grpc-part-1/</link>
      <pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/optimizing-grpc-part-1/</guid>
      <description>
        &lt;p&gt;A common question with gRPC is how to make it fast.  The gRPC library offers users access to high
performance RPCs, but it isn&amp;rsquo;t always clear how to achieve this.  Because this question is common
enough I thought I would try to show my thought process when tuning programs.&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: gRPC and Deadlines</title>
      <link>https://grpc.io/blog/deadlines/</link>
      <pubDate>Mon, 26 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/deadlines/</guid>
      <description>
        &lt;p&gt;&lt;strong&gt;TL;DR: Always set a deadline&lt;/strong&gt;. This post explains why we recommend being deliberate about setting deadlines, with useful code snippets to show you how.&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: gRPC-Go Engineering Practices</title>
      <link>https://grpc.io/blog/grpc-go-engineering-practices/</link>
      <pubDate>Mon, 22 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/grpc-go-engineering-practices/</guid>
      <description>
        &lt;p&gt;It&amp;rsquo;s the start of the new year, and almost the end of my first full year on the
gRPC-Go project, so I&amp;rsquo;d like to take this opportunity to provide an update on
the state of gRPC-Go development and give some visibility into how we manage the
project.  For me, personally, this is the first open source project to which
I&amp;rsquo;ve meaningfully contributed, so this year has been a learning experience for
me.  Over this year, the team has made constant improvements to our work habits
and communication.  I still see room for improvement, but I believe we are in a
considerably better place than we were a year ago.&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: The gRPC Meetup Kit</title>
      <link>https://grpc.io/blog/meetup-kit/</link>
      <pubDate>Thu, 14 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/meetup-kit/</guid>
      <description>
        If you have ever wanted to run an event around gRPC, but didn&amp;rsquo;t know where to start, or weren&amp;rsquo;t sure what content is available - we have released the gRPC Meetup Kit!
The meetup kit includes a 15 minute presentation on the basic concepts of gRPC, with accompanying slides and video for either reference or playback, as well as a 45-minute codelab that takes you through the basics of gRPC in Node.
      </description>
    </item>
    
    <item>
      <title>Blog: gRPC-Go performance Improvements</title>
      <link>https://grpc.io/blog/grpc-go-perf-improvements/</link>
      <pubDate>Tue, 22 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/grpc-go-perf-improvements/</guid>
      <description>
        &lt;p&gt;For past few months we&amp;rsquo;ve been working on improving gRPC-Go performance. This includes improving network utilization, optimizing CPU usage and memory allocations. Most of our recent effort has been focused around revamping gRPC-Go flow control. After several optimizations and new features we&amp;rsquo;ve been able to improve quite significantly, especially on high-latency networks. We expect users that are working with high-latency networks and large messages to see an order of magnitude performance gain.
Benchmark results at the end.&lt;/p&gt;
&lt;p&gt;This blog summarizes the work we have done so far (in chronological order) to improve performance and lays out our near-future plans.&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: 2017-08-17 Community Meeting Update</title>
      <link>https://grpc.io/blog/community-meeting-update/</link>
      <pubDate>Thu, 17 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/community-meeting-update/</guid>
      <description>
        &lt;p&gt;&lt;strong&gt;Next Community Meeting:&lt;/strong&gt; Thursday, August 31, 2017 11am Pacific Time (US and Canada)&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: Announcing out-of-the-box support for gRPC in the Flatbuffers serialization library</title>
      <link>https://grpc.io/blog/grpc-flatbuffers/</link>
      <pubDate>Thu, 17 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/grpc-flatbuffers/</guid>
      <description>
        &lt;p&gt;The recent release of Flatbuffers &lt;a href=&#34;https://github.com/google/flatbuffers/releases&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;version 1.7&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; introduced truly zero-copy support for gRPC out of the box.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://google.github.io/flatbuffers/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Flatbuffers&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; is a serialization library that allows you to access serialized data without first unpacking it or allocating any
additional data structures. It was originally designed for games and other resource constrained applications, but is now finding more general use, both by teams within Google and in other companies such as Netflix and Facebook.&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: gRPC Load Balancing</title>
      <link>https://grpc.io/blog/grpc-load-balancing/</link>
      <pubDate>Thu, 15 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/grpc-load-balancing/</guid>
      <description>
        &lt;p&gt;This post describes various load balancing scenarios seen when deploying gRPC. If you use &lt;a href=&#34;https://grpc.io/&#34;&gt;gRPC&lt;/a&gt; with multiple backends, this document is for you.&lt;/p&gt;
&lt;p&gt;A large scale gRPC deployment typically has a number of identical back-end instances, and a number of clients. Each server has a certain capacity. Load balancing is used for distributing the load from clients optimally across available servers.&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: gRPC in Helm</title>
      <link>https://grpc.io/blog/helm-grpc/</link>
      <pubDate>Mon, 15 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/helm-grpc/</guid>
      <description>
        &lt;p&gt;Helm is the package manager for Kubernetes. Helm provides its users with a customizable mechanism for
managing distributed applications and controlling their deployment.&lt;/p&gt;
&lt;p&gt;I have the good fortune to be a member of the phenomenal open-source Kubernetes Helm community serving as
a core contributor. My first day working with the Helm team was spent prototyping the architecture for
the next generation of Helm. By the end of that day, we had procured the preliminary RPC protocol data model
used to enable communication between Helm and its in-cluster server component, Tiller.&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: Migration to Google Cloud Platform — gRPC &amp; grpc-gateway</title>
      <link>https://grpc.io/blog/yikyak/</link>
      <pubDate>Wed, 12 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/yikyak/</guid>
      <description>
        &lt;p&gt;In our previous blog &lt;a href=&#34;https://medium.com/yik-yak-eng/migration-to-google-cloud-platform-overview-9b5e5c17c368&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;post&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; we gave an overview of our migration to Google Cloud Platform from Amazon Web Services. In this post we will drill down into the role that &lt;a href=&#34;https://grpc.io/&#34;&gt;gRPC&lt;/a&gt; and &lt;a href=&#34;https://github.com/grpc-ecosystem/grpc-gateway&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;grpc-gateway&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; played in that migration and share some lessons which we picked up along the way.&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: Building gRPC services with bazel and rules_protobuf</title>
      <link>https://grpc.io/blog/bazel-rules-protobuf/</link>
      <pubDate>Thu, 13 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/bazel-rules-protobuf/</guid>
      <description>
        &lt;p&gt;&lt;a href=&#34;https://grpc.io/&#34;&gt;gRPC&lt;/a&gt; makes it easier to build high-performance
microservices by providing generated service entrypoints in a variety
of different languages.  &lt;a href=&#34;https://bazel.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bazel&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; complements these
efforts with a capable and fast polyglot build environment.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/pubref/rules_protobuf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;rules_protobuf&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; extends
bazel and makes it easier develop gRPC services.&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: gRPC at VSCO</title>
      <link>https://grpc.io/blog/vsco/</link>
      <pubDate>Tue, 06 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/vsco/</guid>
      <description>
        &lt;p&gt;Our guest post today comes from Robert Sayre and Melinda Lu of VSCO.&lt;/p&gt;
&lt;p&gt;Founded in 2011, &lt;a href=&#34;https://vsco.co&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;VSCO&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; is a community for expression—empowering people to create, discover and connect through images and words. VSCO is in the process of migrating their stack to gRPC.&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: Why we have decided to move our APIs to gRPC</title>
      <link>https://grpc.io/blog/vendasta/</link>
      <pubDate>Mon, 29 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/vendasta/</guid>
      <description>
        Vendasta started out 8 years ago as a point solution provider of products for small business. From the beginning we partnered with media companies and agencies who have armies of salespeople and existing relationships with those businesses to sell our software. It is estimated that over 30 million small businesses exist in the United States alone, so scalability of our SaaS solution was considered one of our top concerns from the beginning and it was the reason we started with Google App Engine and Datastore.
      </description>
    </item>
    
    <item>
      <title>Blog: gRPC Project is now 1.0 and ready for production deployments</title>
      <link>https://grpc.io/blog/ga-announcement/</link>
      <pubDate>Tue, 23 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/ga-announcement/</guid>
      <description>
        Today, the gRPC project has reached a significant milestone with its 1.0 release. Languages moving to 1.0 include C++, Java, Go, Node, Ruby, Python and C# across Linux, Windows, and Mac. Objective-C and Android Java support on iOS and Android is also moving to 1.0. The 1.0 release means that the core protocol and API surface are now stable with measured performance, stress tested and developers can rely on these APIs and deploy in production, they will follow semantic versioning from here.
      </description>
    </item>
    
    <item>
      <title>Blog: Mobile Benchmarks</title>
      <link>https://grpc.io/blog/mobile-benchmarks/</link>
      <pubDate>Tue, 26 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/mobile-benchmarks/</guid>
      <description>
        &lt;p&gt;As gRPC has become a better and faster RPC framework, we&amp;rsquo;ve consistently gotten the question, &amp;ldquo;How &lt;em&gt;much&lt;/em&gt; faster is gRPC?&amp;rdquo; We already have comprehensive server-side benchmarks, but we don&amp;rsquo;t have mobile benchmarks. Benchmarking a client is a bit different than benchmarking a server. We care more about things such as latency and request size and less about things like queries per second (QPS) and number of concurrent threads. Thus we built an Android app in order to quantify these factors and provide solid numbers behind them.&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: gRPC with REST and Open APIs</title>
      <link>https://grpc.io/blog/coreos/</link>
      <pubDate>Mon, 09 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/coreos/</guid>
      <description>
        &lt;p&gt;Our guest post today comes from Brandon Phillips of &lt;a href=&#34;https://coreos.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CoreOS&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;. CoreOS builds open source projects and products for Linux Containers. Their flagship product for consensus and discovery &lt;a href=&#34;https://coreos.com/etcd/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;etcd&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; and their container engine &lt;a href=&#34;https://coreos.com/rkt/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;rkt&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; are early adopters of gRPC.&lt;/p&gt;
&lt;p&gt;One of the key reasons CoreOS chose gRPC is because it uses HTTP/2, enabling applications to present both a HTTP 1.1 REST/JSON API and an efficient gRPC interface on a single TCP port (available for Go). This provides developers with compatibility with the REST web ecosystem, while advancing a new, high-efficiency RPC protocol. With the recent release of Go 1.6, Go ships with a stable &lt;code&gt;net/http2&lt;/code&gt; package by default.&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: gRPC - now with easy installation</title>
      <link>https://grpc.io/blog/installation/</link>
      <pubDate>Mon, 04 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/installation/</guid>
      <description>
        &lt;p&gt;Today we are happy to provide an update that significantly simplifies the getting started experience for gRPC.&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: Google Cloud PubSub - with the power of gRPC!</title>
      <link>https://grpc.io/blog/pubsub/</link>
      <pubDate>Thu, 24 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/pubsub/</guid>
      <description>
        &lt;p&gt;&lt;a href=&#34;https://cloud.google.com/pubsub/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Cloud PubSub&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; is Google&amp;rsquo;s scalable real-time messaging service that lets users send and receive messages between independent applications. It&amp;rsquo;s an important part of Google Cloud Platform&amp;rsquo;s big data offering, and is used by customers worldwide to build their own robust, global services. However, until now, the only way to use the Cloud PubSub API was via JSON over HTTP. That&amp;rsquo;s all changed with the release of &lt;a href=&#34;https://cloud.google.com/blog/big-data/2016/03/announcing-grpc-alpha-for-google-cloud-pubsub&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PubSub gRPC alpha&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;. Now &lt;strong&gt;users can access PubSub via gRPC&lt;/strong&gt; and benefit from all the advantages it brings.&lt;/p&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: gRPC releases Beta, opening door for use in production environments</title>
      <link>https://grpc.io/blog/beta-release/</link>
      <pubDate>Mon, 26 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://grpc.io/blog/beta-release/</guid>
      <description>
        The gRPC team is excited to announce the immediate availability of gRPC Beta. This release marks an important point in API stability and going forward most API changes are expected to be additive in nature. This milestone opens the door for gRPC use in production environments.
We’re also taking a big step forward in improving the installation process. Over the past few weeks we’ve rolled out gRPC packages to Debian Stable/Backports.
      </description>
    </item>
    
  </channel>
</rss>
