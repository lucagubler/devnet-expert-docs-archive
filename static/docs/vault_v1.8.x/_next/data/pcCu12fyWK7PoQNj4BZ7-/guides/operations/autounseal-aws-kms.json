{"pageProps":{"currentPath":"operations/autounseal-aws-kms","frontMatter":{"layout":"guides","page_title":"Vault Auto-unseal using AWS KMS - Guides","description":"In this guide, we'll show an example of how to use Terraform to provision an\ninstance that can utilize an encryption key from AWS Key Management Services\nto unseal Vault."},"githubFileUrl":"https://github.com/hashicorp/vault/blob/main/website/content/guides/operations/autounseal-aws-kms.mdx","mdxSource":{"compiledSource":"var i=Object.defineProperty;var o=Object.prototype.hasOwnProperty;var p=Object.getOwnPropertySymbols,l=Object.prototype.propertyIsEnumerable;var r=(e,s,n)=>s in e?i(e,s,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[s]=n,a=(e,s)=>{for(var n in s||(s={}))o.call(s,n)&&r(e,n,s[n]);if(p)for(var n of p(s))l.call(s,n)&&r(e,n,s[n]);return e};var m=(e,s)=>{var n={};for(var t in e)o.call(e,t)&&s.indexOf(t)<0&&(n[t]=e[t]);if(e!=null&&p)for(var t of p(e))s.indexOf(t)<0&&l.call(e,t)&&(n[t]=e[t]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var t=n,{components:e}=t,s=m(t,[\"components\"]);return mdx(MDXLayout,a(a(a({},layoutProps),s),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h1\",a({},{className:\"g-type-display-2\"}),mdx(\"a\",a({parentName:\"h1\"},{className:\"__permalink-h\",href:\"#vault-auto-unseal-using-aws-key-management-service\",\"aria-label\":\"vault auto unseal using aws key management service permalink\"}),\"\\xBB\"),mdx(\"a\",a({parentName:\"h1\"},{className:\"__target-h\",id:\"vault-auto-unseal-using-aws-key-management-service\",\"aria-hidden\":\"\"})),\"Vault Auto-unseal using AWS Key Management Service\"),mdx(\"div\",a({},{className:\"alert alert-warning g-type-body\",role:\"alert\"}),mdx(\"p\",a({parentName:\"div\"},{className:\"g-type-long-body\"}),\"\",mdx(\"strong\",{parentName:\"p\"},\"Enterprise Only:\"),\" Vault auto-unseal feature is a part of \",mdx(\"em\",{parentName:\"p\"},\"Vault Enterprise Pro\"),\".\")),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`When a Vault server is started, it starts in a\n`,mdx(\"a\",a({parentName:\"p\"},{href:\"/docs/concepts/seal\"}),mdx(\"strong\",{parentName:\"a\"},mdx(\"em\",{parentName:\"strong\"},\"sealed\"))),` state and it does not know how to\ndecrypt data. Before any operation can be performed on the Vault, it must be\nunsealed. Unsealing is the process of constructing the master key necessary to\ndecrypt the data encryption key.`),mdx(\"p\",a({},{className:\"g-type-long-body\"}),mdx(\"img\",a({parentName:\"p\"},{src:\"/img/vault-autounseal.png\",alt:\"Unseal with Shamir's Secret Sharing\"}))),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`This guide demonstrates an example of how to use Terraform to provision an\ninstance that can utilize an encryption key from `,mdx(\"a\",a({parentName:\"p\"},{href:\"https://aws.amazon.com/kms/\"}),`AWS Key Management Services\n(KMS)`),\" to unseal Vault.\"),mdx(\"h2\",a({},{className:\"g-type-display-3\"}),mdx(\"a\",a({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#reference-material\",\"aria-label\":\"reference material permalink\"}),\"\\xBB\"),mdx(\"a\",a({parentName:\"h2\"},{className:\"__target-h\",id:\"reference-material\",\"aria-hidden\":\"\"})),\"Reference Material\"),mdx(\"ul\",null,mdx(\"li\",a({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",a({parentName:\"li\"},{href:\"/docs/configuration/seal\"}),\"Vault Auto Unseal\")),mdx(\"li\",a({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",a({parentName:\"li\"},{href:\"/docs/configuration/seal/awskms\"}),\"Configuration: \",mdx(\"inlineCode\",{parentName:\"a\"},\"awskms\"),\" Seal\"))),mdx(\"h2\",a({},{className:\"g-type-display-3\"}),mdx(\"a\",a({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#estimated-time-to-complete\",\"aria-label\":\"estimated time to complete permalink\"}),\"\\xBB\"),mdx(\"a\",a({parentName:\"h2\"},{className:\"__target-h\",id:\"estimated-time-to-complete\",\"aria-hidden\":\"\"})),\"Estimated Time to Complete\"),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"10 minutes\"),mdx(\"h2\",a({},{className:\"g-type-display-3\"}),mdx(\"a\",a({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#personas\",\"aria-label\":\"personas permalink\"}),\"\\xBB\"),mdx(\"a\",a({parentName:\"h2\"},{className:\"__target-h\",id:\"personas\",\"aria-hidden\":\"\"})),\"Personas\"),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"The steps described in this guide are typically performed by \",mdx(\"strong\",{parentName:\"p\"},\"operations\"),`\npersona.`),mdx(\"h2\",a({},{className:\"g-type-display-3\"}),mdx(\"a\",a({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#challenge\",\"aria-label\":\"challenge permalink\"}),\"\\xBB\"),mdx(\"a\",a({parentName:\"h2\"},{className:\"__target-h\",id:\"challenge\",\"aria-hidden\":\"\"})),\"Challenge\"),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`Vault unseal operation requires a quorum of existing unseal keys split by\nShamir's Secret sharing algorithm. This is done so that the \"`,mdx(\"em\",{parentName:\"p\"},`keys to the\nkingdom`),`\" won't fall into one person's hand. However, this process is manual\nand can become painful when you have many Vault clusters as there are now\nmany different key holders with many different keys.`),mdx(\"h2\",a({},{className:\"g-type-display-3\"}),mdx(\"a\",a({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#solution\",\"aria-label\":\"solution permalink\"}),\"\\xBB\"),mdx(\"a\",a({parentName:\"h2\"},{className:\"__target-h\",id:\"solution\",\"aria-hidden\":\"\"})),\"Solution\"),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`Vault Enterprise supports opt-in automatic unsealing via cloud technologies:\nAmazon KMS, Azure Key Vault or GCP Cloud KMS. This feature enables operators to\ndelegate the unsealing process to trusted cloud providers to ease operations in\nthe event of partial failure and to aid in the creation of new or ephemeral\nclusters.`),mdx(\"p\",a({},{className:\"g-type-long-body\"}),mdx(\"img\",a({parentName:\"p\"},{src:\"/img/vault-autounseal-2.png\",alt:\"Unseal with AWS KMS\"}))),mdx(\"h2\",a({},{className:\"g-type-display-3\"}),mdx(\"a\",a({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#prerequisites\",\"aria-label\":\"prerequisites permalink\"}),\"\\xBB\"),mdx(\"a\",a({parentName:\"h2\"},{className:\"__target-h\",id:\"prerequisites\",\"aria-hidden\":\"\"})),\"Prerequisites\"),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"This guide assumes the following:\"),mdx(\"ul\",null,mdx(\"li\",a({parentName:\"ul\"},{className:\"g-type-long-body\"}),\"Access to \",mdx(\"strong\",{parentName:\"li\"},\"Vault Enterprise 0.9.0 or later\")),mdx(\"li\",a({parentName:\"ul\"},{className:\"g-type-long-body\"}),\"A URL to download Vault Enterprise from (an Amazon S3 bucket will suffice)\"),mdx(\"li\",a({parentName:\"ul\"},{className:\"g-type-long-body\"}),\"AWS account for provisioning cloud resources\"),mdx(\"li\",a({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",a({parentName:\"li\"},{href:\"https://www.terraform.io/intro/getting-started/install\"}),\"Terraform installed\"),`\nand basic understanding of its usage`)),mdx(\"h3\",a({},{className:\"g-type-display-4\"}),mdx(\"a\",a({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#download-demo-assets\",\"aria-label\":\"download demo assets permalink\"}),\"\\xBB\"),mdx(\"a\",a({parentName:\"h3\"},{className:\"__target-h\",id:\"download-demo-assets\",\"aria-hidden\":\"\"})),\"Download demo assets\"),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`Clone or download the demo assets from the\n`,mdx(\"a\",a({parentName:\"p\"},{href:\"https://github.com/hashicorp/vault-guides/tree/master/operations/aws-kms-unseal/terraform-aws\"}),\"hashicorp/vault-guides\"),`\nGitHub repository to perform the steps described in this guide.`),mdx(\"h2\",a({},{className:\"g-type-display-3\"}),mdx(\"a\",a({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#steps\",\"aria-label\":\"steps permalink\"}),\"\\xBB\"),mdx(\"a\",a({parentName:\"h2\"},{className:\"__target-h\",id:\"steps\",\"aria-hidden\":\"\"})),\"Steps\"),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`This guide demonstrates how to implement and use the Auto-unseal feature using\nAWS KMS. Included is a Terraform configuration that has the following:`),mdx(\"ul\",null,mdx(\"li\",a({parentName:\"ul\"},{className:\"g-type-long-body\"}),\"Ubuntu 16.04 LTS with Vault Enterprise\"),mdx(\"li\",a({parentName:\"ul\"},{className:\"g-type-long-body\"}),\"An instance profile granting the Amazon EC2 instance to an AWS KMS key\"),mdx(\"li\",a({parentName:\"ul\"},{className:\"g-type-long-body\"}),\"Vault configured with access to an AWS KMS key\")),mdx(\"p\",a({},{className:\"g-type-long-body\"}),mdx(\"a\",a({parentName:\"p\"},{href:\"https://youtu.be/iRyqOEDFIiY\"}),mdx(\"img\",a({parentName:\"a\"},{src:\"/img/vault-autounseal-4.png\",alt:\"YouTube\"})))),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"You are going to perform the following steps:\"),mdx(\"ol\",null,mdx(\"li\",a({parentName:\"ol\"},{className:\"g-type-long-body\"}),mdx(\"a\",a({parentName:\"li\"},{href:\"#step-1-provision-the-cloud-resources\"}),\"Provision the Cloud Resources\")),mdx(\"li\",a({parentName:\"ol\"},{className:\"g-type-long-body\"}),mdx(\"a\",a({parentName:\"li\"},{href:\"#step-2-test-the-auto-unseal-feature\"}),\"Test the Auto-unseal Feature\")),mdx(\"li\",a({parentName:\"ol\"},{className:\"g-type-long-body\"}),mdx(\"a\",a({parentName:\"li\"},{href:\"#step-3-clean-up\"}),\"Clean Up\"))),mdx(\"h3\",a({},{className:\"g-type-display-4\"}),mdx(\"a\",a({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#step-1-provision-the-cloud-resources\",\"aria-label\":\"step 1 provision the cloud resources permalink\"}),\"\\xBB\"),mdx(\"a\",a({parentName:\"h3\"},{className:\"__target-h\",id:\"step-1-provision-the-cloud-resources\",\"aria-hidden\":\"\"})),\"Step 1: Provision the Cloud Resources\"),mdx(\"p\",a({},{className:\"g-type-long-body\"}),mdx(\"strong\",{parentName:\"p\"},\"Task 1:\"),` Be sure to set your working directory to where the\n`,mdx(\"a\",a({parentName:\"p\"},{href:\"#download-demo-assets\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"/operations/aws-kms-unseal/terraform-aws\")),` folder is\nlocated.`),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"The working directory should contain the provided Terraform files:\"),mdx(\"pre\",a({},{className:\"language-bash\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-bash\"}),\"~/git/vault-guides/operations/aws-kms-unseal/terraform$ tree\",`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token builtin class-name\"}),\".\"),`\n`,\"\\u251C\\u2500\\u2500 README.md\",`\n`,\"\\u251C\\u2500\\u2500 instance-profile.tf\",`\n`,\"\\u251C\\u2500\\u2500 instance.tf\",`\n`,\"\\u251C\\u2500\\u2500 main.tf\",`\n`,\"\\u251C\\u2500\\u2500 ssh-key.tf\",`\n`,\"\\u251C\\u2500\\u2500 terraform.tfvars.example\",`\n`,\"\\u251C\\u2500\\u2500 userdata.tpl\",`\n`,\"\\u2514\\u2500\\u2500 variables.tf\",`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),mdx(\"strong\",{parentName:\"p\"},\"Task 2:\"),\" Set your AWS credentials as environment variables:\"),mdx(\"pre\",a({},{className:\"language-shell-session\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token builtin class-name\"}),\"export\"),\" AWS_ACCESS_KEY_ID \",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),'\"<YOUR_AWS_ACCESS_KEY_ID>\"'))),`\n`,`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token builtin class-name\"}),\"export\"),\" AWS_SECRET_ACCESS_KEY \",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token string\"}),'\"<YOUR_AWS_SECRET_ACCESS_KEY>\"'))),`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"Create a file named \",mdx(\"strong\",{parentName:\"p\"},mdx(\"inlineCode\",{parentName:\"strong\"},\"terraform.tfvars\")),` and specify your Vault Enterprise\nbinary download URL.`),mdx(\"p\",a({},{className:\"g-type-long-body\"}),mdx(\"strong\",{parentName:\"p\"},\"Example:\")),mdx(\"pre\",a({},{className:\"language-plaintext\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-plaintext\"}),'vault_url = \"https://s3-us-west-2.amazonaws.com/hc-enterprise-binaries/vault/ent/0.10.3/vault-enterprise_0.10.3%2Bent_linux_amd64.zip\"',`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),mdx(\"strong\",{parentName:\"p\"},\"Task 3:\"),\" Perform a \",mdx(\"strong\",{parentName:\"p\"},mdx(\"inlineCode\",{parentName:\"strong\"},\"terraform init\")),` to pull down the necessary provider\nresources. Then `,mdx(\"strong\",{parentName:\"p\"},mdx(\"inlineCode\",{parentName:\"strong\"},\"terraform plan\")),` to verify your changes and the resources that\nwill be created. If all looks good, then perform a `,mdx(\"strong\",{parentName:\"p\"},mdx(\"inlineCode\",{parentName:\"strong\"},\"terraform apply\")),` to\nprovision the resources.`),mdx(\"pre\",a({},{className:\"language-shell-session\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"terraform init\")),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Initializing provider plugins...\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"...\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Terraform has been successfully initialized!\"),`\n`,`\n`,`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"terraform plan\")),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"...\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Plan: 15 to add, 0 to change, 0 to destroy.\"),`\n`,`\n`,`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"terraform apply\")),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"...\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Apply complete! Resources: 15 added, 0 changed, 0 destroyed.\"),`\n`,`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Outputs:\"),`\n`,`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"connections = Connect to Vault via SSH   ssh ubuntu@192.0.2.1 -i private.key\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Vault Enterprise web interface  http://192.0.2.1:8200/ui\"),`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),mdx(\"strong\",{parentName:\"p\"},\"NOTE:\"),` The Terraform output will display the public IP address to SSH into\nyour server as well as the Vault Enterprise web interface address.`),mdx(\"h3\",a({},{className:\"g-type-display-4\"}),mdx(\"a\",a({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#step-2-test-the-auto-unseal-feature\",\"aria-label\":\"step 2 test the auto unseal feature permalink\"}),\"\\xBB\"),mdx(\"a\",a({parentName:\"h3\"},{className:\"__target-h\",id:\"step-2-test-the-auto-unseal-feature\",\"aria-hidden\":\"\"})),\"Step 2: Test the Auto-unseal Feature\"),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"SSH into the provisioned EC2 instance.\"),mdx(\"pre\",a({},{className:\"language-shell-session\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"ssh\"),\" ubuntu@192.0.2.1 -i private.key\")),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"...\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Are you sure you want to continue connecting (yes/no)? yes\"),`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),'When you are prompted, enter \"yes\" to continue.'),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"To verify that Vault has been installed, run \",mdx(\"inlineCode\",{parentName:\"p\"},\"vault status\"),` command which should\nreturn \"`,mdx(\"em\",{parentName:\"p\"},\"server is not yet initialized\"),'\" message.'),mdx(\"pre\",a({},{className:\"language-shell-session\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token builtin class-name\"}),\"export\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token assign-left variable\"}),\"VAULT_ADDR\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"=\"),\"http://127.0.0.1:8200\")),`\n`,`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault status\")),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Error checking seal status: Error making API request.\"),`\n`,`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"URL: GET http://127.0.0.1:8200/v1/sys/seal-status\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Code: 400. Errors:\"),`\n`,`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"* server is not yet initialized\"),`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"Run the \",mdx(\"strong\",{parentName:\"p\"},mdx(\"inlineCode\",{parentName:\"strong\"},\"vault operator init\")),` command to initialize the Vault server by\nsetting its key share to be `,mdx(\"strong\",{parentName:\"p\"},mdx(\"inlineCode\",{parentName:\"strong\"},\"1\")),\" as follow:\"),mdx(\"pre\",a({},{className:\"language-shell-session\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault operator init -stored-shares\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"=\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token number\"}),\"1\"),\" -recovery-shares\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"=\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token number\"}),\"1\"),\" -recovery-threshold\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"=\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token number\"}),\"1\"),\" -key-shares\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"=\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token number\"}),\"1\"),\" -key-threshold\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"=\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token number\"}),\"1\"))),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Recovery Key 1: oOxAQfxcZitjqZfF3984De8rUckPeahQDUvmJ1A4JrQ=\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Initial Root Token: 54c4dbe3-d45b-79d9-18d0-602831a6a991\"),`\n`,`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Vault initialized successfully.\"),`\n`,`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Recovery key initialized with 1 keys and a key threshold of 1. Please\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"securely distribute the above keys.\"),`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"Stop and start the Vault server:\"),mdx(\"pre\",a({},{className:\"language-shell-session\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"sudo\"),\" systemctl stop vault\")),`\n`,`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault status\")),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Error checking seal status: Get http://127.0.0.1:8200/v1/sys/seal-status: dial tcp 127.0.0.1:8200: getsockopt: connection refused\"),`\n`,`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"sudo\"),\" systemctl start vault\")),`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"Check the Vault status to verify that it has been started and unsealed.\"),mdx(\"pre\",a({},{className:\"language-shell-session\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault status\")),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Type: shamir\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Sealed: false\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Key Shares: 1\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Key Threshold: 1\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Unseal Progress: 0\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Unseal Nonce:\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Version: 0.9.6+prem.hsm\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Cluster Name: vault-cluster-01cf6f33\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Cluster ID: fb787d8a-b882-fee8-b461-445320cde311\"),`\n`,`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"High-Availability Enabled: false\"),`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"Log into Vault using the generated initial root token:\"),mdx(\"pre\",a({},{className:\"language-shell-session\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault login 54c4dbe3-d45b-79d9-18d0-602831a6a991\")),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Successfully authenticated! You are now logged in.\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"token: 54c4dbe3-d45b-79d9-18d0-602831a6a991\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"token_duration: 0\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"token_policies: [root]\"),`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"Review the Vault configuration file (\",mdx(\"inlineCode\",{parentName:\"p\"},\"/etc/vault.d/vault.hcl\"),\").\"),mdx(\"pre\",a({},{className:\"language-shell-session\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"cat\"),\" /etc/vault.d/vault.hcl\")),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),'storage \"file\" {'),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),'  path = \"/opt/vault\"'),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"}\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),'listener \"tcp\" {'),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),'  address     = \"0.0.0.0:8200\"'),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"  tls_disable = 1\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"}\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),'seal \"awskms\" {'),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),'  kms_key_id = \"d7c1ffd9-8cce-45e7-be4a-bb38dd205966\"'),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"}\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"ui=true\"),`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"Notice the Vault configuration file defines the \",mdx(\"a\",a({parentName:\"p\"},{href:\"/docs/configuration/seal/awskms\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"awskms\"),`\nstanza`),` which sets the AWS KMS key ID to\nuse for encryption and decryption.`),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`At this point, you should be able to launch the Vault Enterprise UI by entering\nthe address provided in the `,mdx(\"inlineCode\",{parentName:\"p\"},\"terraform apply\"),\" outputs (e.g. \",mdx(\"a\",a({parentName:\"p\"},{href:\"http://192.0.2.1:8200/ui\"}),\"http://192.0.2.1:8200/ui\"),`)\nand log in with your initial root token.`),mdx(\"p\",a({},{className:\"g-type-long-body\"}),mdx(\"img\",a({parentName:\"p\"},{src:\"/img/vault-autounseal-3.png\",alt:\"Vault Enterprise UI Login\"}))),mdx(\"h3\",a({},{className:\"g-type-display-4\"}),mdx(\"a\",a({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#step-3-clean-up\",\"aria-label\":\"step 3 clean up permalink\"}),\"\\xBB\"),mdx(\"a\",a({parentName:\"h3\"},{className:\"__target-h\",id:\"step-3-clean-up\",\"aria-hidden\":\"\"})),\"Step 3: Clean Up\"),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"Once completed, execute the following commands to clean up:\"),mdx(\"pre\",a({},{className:\"language-shell-session\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"terraform destroy -force\")),`\n`,`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"rm\"),\" -rf .terraform terraform.tfstate* private.key\")),`\n`)),mdx(\"h2\",a({},{className:\"g-type-display-3\"}),mdx(\"a\",a({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#next-steps\",\"aria-label\":\"next steps permalink\"}),\"\\xBB\"),mdx(\"a\",a({parentName:\"h2\"},{className:\"__target-h\",id:\"next-steps\",\"aria-hidden\":\"\"})),\"Next steps\"),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`Once you have a Vault environment setup, the next step is to write policies.\nRead `,mdx(\"a\",a({parentName:\"p\"},{href:\"/guides/identity/policies\"}),\"Policies\"),` to learn how to write policies\nto govern the behavior of clients.`))}MDXContent.isMDXComponent=!0;\n","scope":{}},"navData":[{"title":"Getting Started","path":"getting-started","filePath":"content/guides/getting-started.mdx"},{"title":"Vault Operations","routes":[{"title":"Overview","path":"operations","filePath":"content/guides/operations/index.mdx"},{"title":"Reference Architecture","path":"operations/reference-architecture","filePath":"content/guides/operations/reference-architecture.mdx"},{"title":"Vault HA with Consul","path":"operations/vault-ha-consul","filePath":"content/guides/operations/vault-ha-consul.mdx"},{"title":"Production Hardening","path":"operations/production","filePath":"content/guides/operations/production.mdx"},{"title":"Root Token Generation","path":"operations/generate-root","filePath":"content/guides/operations/generate-root.mdx"},{"title":"Rekeying & Rotating","path":"operations/rekeying-and-rotating","filePath":"content/guides/operations/rekeying-and-rotating.mdx"},{"title":"Building Plugin Backends","path":"operations/plugin-backends","filePath":"content/guides/operations/plugin-backends.mdx"},{"divider":true},{"title":"Replication Setup & Guidance","path":"operations/replication","filePath":"content/guides/operations/replication.mdx"},{"title":"Disaster Recovery Setup","path":"operations/disaster-recovery","filePath":"content/guides/operations/disaster-recovery.mdx"},{"title":"Mount Filter","path":"operations/mount-filter","filePath":"content/guides/operations/mount-filter.mdx"},{"title":"Multi-Tenant: Namespaces","path":"operations/multi-tenant","filePath":"content/guides/operations/multi-tenant.mdx"},{"title":"Vault Auto-unseal with AWS KMS","path":"operations/autounseal-aws-kms","filePath":"content/guides/operations/autounseal-aws-kms.mdx"},{"title":"Seal Wrap / FIPS 140-2","path":"operations/seal-wrap","filePath":"content/guides/operations/seal-wrap.mdx"},{"title":"Vault Cluster Monitoring","path":"operations/monitoring","filePath":"content/guides/operations/monitoring.mdx"},{"title":"Vault Deployment Guide","path":"operations/deployment-guide","filePath":"content/guides/operations/deployment-guide.mdx"},{"title":"Performance Standby Nodes","path":"operations/performance-nodes","filePath":"content/guides/operations/performance-nodes.mdx"}]},{"title":"Identity and Access Management","routes":[{"title":"Overview","path":"identity","filePath":"content/guides/identity/index.mdx"},{"title":"Secure Introduction of Vault Clients","path":"identity/secure-intro","filePath":"content/guides/identity/secure-intro.mdx"},{"title":"Policies","path":"identity/policies","filePath":"content/guides/identity/policies.mdx"},{"title":"ACL Policy Path Templating","path":"identity/policy-templating","filePath":"content/guides/identity/policy-templating.mdx"},{"title":"AppRole Pull Authentication","path":"identity/authentication","filePath":"content/guides/identity/authentication.mdx"},{"title":"AppRole with Terraform and Chef","path":"identity/approle-trusted-entities","filePath":"content/guides/identity/approle-trusted-entities.mdx"},{"title":"Tokens and Leases","path":"identity/lease","filePath":"content/guides/identity/lease.mdx"},{"title":"Identity - Entities & Groups","path":"identity/identity","filePath":"content/guides/identity/identity.mdx"},{"divider":true},{"title":"Sentinel Policies","path":"identity/sentinel","filePath":"content/guides/identity/sentinel.mdx"},{"title":"Control Groups","path":"identity/control-groups","filePath":"content/guides/identity/control-groups.mdx"}]},{"title":"Secrets Management","routes":[{"title":"Overview","path":"secret-mgmt","filePath":"content/guides/secret-mgmt/index.mdx"},{"title":"Static Secrets","path":"secret-mgmt/static-secrets","filePath":"content/guides/secret-mgmt/static-secrets.mdx"},{"title":"Versioned KV Secret Engine","path":"secret-mgmt/versioned-kv","filePath":"content/guides/secret-mgmt/versioned-kv.mdx"},{"title":"Secret as a Service","path":"secret-mgmt/dynamic-secrets","filePath":"content/guides/secret-mgmt/dynamic-secrets.mdx"},{"title":"DB Root Credential Rotation","path":"secret-mgmt/db-root-rotation","filePath":"content/guides/secret-mgmt/db-root-rotation.mdx"},{"title":"Cubbyhole Response Wrapping","path":"secret-mgmt/cubbyhole","filePath":"content/guides/secret-mgmt/cubbyhole.mdx"},{"title":"One-Time SSH Password","path":"secret-mgmt/ssh-otp","filePath":"content/guides/secret-mgmt/ssh-otp.mdx"},{"title":"Build Your Own CA","path":"secret-mgmt/pki-engine","filePath":"content/guides/secret-mgmt/pki-engine.mdx"},{"title":"Direct Application Integration","path":"secret-mgmt/app-integration","filePath":"content/guides/secret-mgmt/app-integration.mdx"}]},{"title":"Encryption as a Service","routes":[{"title":"Overview","path":"encryption","filePath":"content/guides/encryption/index.mdx"},{"title":"Encryption as a Service","path":"encryption/transit","filePath":"content/guides/encryption/transit.mdx"},{"title":"Java Application Demo","path":"encryption/spring-demo","filePath":"content/guides/encryption/spring-demo.mdx"},{"title":"Transit Secrets Re-wrapping","path":"encryption/transit-rewrap","filePath":"content/guides/encryption/transit-rewrap.mdx"}]}],"versions":[]},"__N_SSG":true}