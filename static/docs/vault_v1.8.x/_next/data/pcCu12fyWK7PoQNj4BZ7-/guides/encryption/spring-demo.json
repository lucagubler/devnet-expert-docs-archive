{"pageProps":{"currentPath":"encryption/spring-demo","frontMatter":{"layout":"guides","page_title":"Java Application Demo - Guides","description":"This guide discusses the concepts necessary to help users\nunderstand Vault's AppRole authentication pattern and how to use it to\nsecurely introduce a Vault authentication token to a target server,\napplication, container, etc. in a Java environment."},"githubFileUrl":"https://github.com/hashicorp/vault/blob/main/website/content/guides/encryption/spring-demo.mdx","mdxSource":{"compiledSource":"var m=Object.defineProperty;var p=Object.prototype.hasOwnProperty;var r=Object.getOwnPropertySymbols,o=Object.prototype.propertyIsEnumerable;var l=(a,t,n)=>t in a?m(a,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):a[t]=n,e=(a,t)=>{for(var n in t||(t={}))p.call(t,n)&&l(a,n,t[n]);if(r)for(var n of r(t))o.call(t,n)&&l(a,n,t[n]);return a};var i=(a,t)=>{var n={};for(var s in a)p.call(a,s)&&t.indexOf(s)<0&&(n[s]=a[s]);if(a!=null&&r)for(var s of r(a))t.indexOf(s)<0&&o.call(a,s)&&(n[s]=a[s]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var s=n,{components:a}=s,t=i(s,[\"components\"]);return mdx(MDXLayout,e(e(e({},layoutProps),t),{components:a,mdxType:\"MDXLayout\"}),mdx(\"h1\",e({},{className:\"g-type-display-2\"}),mdx(\"a\",e({parentName:\"h1\"},{className:\"__permalink-h\",href:\"#java-sample-app-using-spring-cloud-vault\",\"aria-label\":\"java sample app using spring cloud vault permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h1\"},{className:\"__target-h\",id:\"java-sample-app-using-spring-cloud-vault\",\"aria-hidden\":\"\"})),\"Java Sample App using Spring Cloud Vault\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Once you have learned the fundamentals of Vault, the next step is to start\nintegrating your system with Vault to secure your organization's secrets.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`The purpose of this guide is to go through the working implementation demo\nintroduced in the `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.hashicorp.com/resources/solutions-engineering-webinar-series-episode-2-vault\"}),`Manage secrets, access, and encryption in the public cloud\nwith\nVault`),`\nwebinar.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"https://youtu.be/NxL2-XuZ3kc\"}),mdx(\"img\",e({parentName:\"a\"},{src:\"/img/vault-java-demo-1.png\",alt:\"YouTube\"})))),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The Java application in this demo leverages the \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://cloud.spring.io/spring-cloud-vault/\"}),mdx(\"em\",{parentName:\"a\"},`Spring Cloud\nVault`)),` library which provides\nlightweight client-side support for connecting to Vault in a distributed\nenvironment.`),mdx(\"h2\",e({},{className:\"g-type-display-3\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#reference-material\",\"aria-label\":\"reference material permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h2\"},{className:\"__target-h\",id:\"reference-material\",\"aria-hidden\":\"\"})),\"Reference Material\"),mdx(\"ul\",null,mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{href:\"/guides/encryption/transit\"}),\"Encryption as a Service\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{href:\"https://www.hashicorp.com/resources/solutions-engineering-webinar-series-episode-2-vault\"}),`Manage secrets, access, and encryption in\nthe public cloud with\nVault`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{href:\"https://cloud.spring.io/spring-cloud-vault/\"}),\"Spring Cloud Vault\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{href:\"/docs/secrets/transit\"}),\"Transit Secrets Engine\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{href:\"/guides/secret-mgmt/dynamic-secrets\"}),\"Secrets as a Service: Dynamic Secrets\"))),mdx(\"h2\",e({},{className:\"g-type-display-3\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#estimated-time-to-complete\",\"aria-label\":\"estimated time to complete permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h2\"},{className:\"__target-h\",id:\"estimated-time-to-complete\",\"aria-hidden\":\"\"})),\"Estimated Time to Complete\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"15 minutes\"),mdx(\"h2\",e({},{className:\"g-type-display-3\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#challenge\",\"aria-label\":\"challenge permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h2\"},{className:\"__target-h\",id:\"challenge\",\"aria-hidden\":\"\"})),\"Challenge\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Incidents of data breaches which expose sensitive information make headlines more\noften than we like to hear. It becomes more and more important to protect data\nby encrypting it whether the data is in-transit or at-rest. However, creating\na highly secure and sophisticated solution by yourself requires time and resources\nwhich are in demand when an organization is facing a constant threat.`),mdx(\"h2\",e({},{className:\"g-type-display-3\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#solution\",\"aria-label\":\"solution permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h2\"},{className:\"__target-h\",id:\"solution\",\"aria-hidden\":\"\"})),\"Solution\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Vault centralizes management of cryptographic services used to protect your\ndata. Your system can communicate with Vault easily through the Vault API to\nencrypt and decrypt your data, and the encryption keys never have to leave the\nVault.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"img\",e({parentName:\"p\"},{src:\"/img/vault-eaas.png\",alt:\"Encryption as a Service\"}))),mdx(\"h2\",e({},{className:\"g-type-display-3\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#prerequisites\",\"aria-label\":\"prerequisites permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h2\"},{className:\"__target-h\",id:\"prerequisites\",\"aria-hidden\":\"\"})),\"Prerequisites\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"To perform the tasks described in this guide:\"),mdx(\"ul\",null,mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),\"Install \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://www.vagrantup.com/intro/getting-started/install\"}),\"HashiCorp Vagrant\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),\"Clone or download the demo assets from the \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://github.com/hashicorp/vault-guides/tree/master/secrets/spring-cloud-vault\"}),\"hashicorp/vault-guides\"),`\nGitHub repository`)),mdx(\"h2\",e({},{className:\"g-type-display-3\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#steps\",\"aria-label\":\"steps permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h2\"},{className:\"__target-h\",id:\"steps\",\"aria-hidden\":\"\"})),\"Steps\"),mdx(\"div\",e({},{className:\"alert alert-info g-type-body\",role:\"alert\"}),mdx(\"p\",e({parentName:\"div\"},{className:\"g-type-long-body\"}),`For the purposes of this guide, you are going to provision a Linux machine\nlocally using Vagrant. However, the GitHub repository provides supporting files\nto provision the environment demonstrated in the webinar.`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"After downloading the \",mdx(\"a\",e({parentName:\"p\"},{href:\"#prerequisites\"}),\"demo assets\"),` from the GitHub repository,\nyou should find the following folders:`),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Folder\"),mdx(\"th\",e({parentName:\"tr\"},{align:null}),\"Description\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"aws\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Supporting files to deploy the demo app to AWS\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"kubernetes\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Supporting files to deploy the demo app to Kubernetes\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"nomad\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Supporting files to deploy the demo app to Nomad\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"scripts\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Scripts to setup PostgreSQL and Vault\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"src/main\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Sample app source code\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",e({parentName:\"tr\"},{align:null}),mdx(\"inlineCode\",{parentName:\"td\"},\"vagrant-local\")),mdx(\"td\",e({parentName:\"tr\"},{align:null}),\"Vagrant file to deploy the demo locally\")))),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"In this guide, you will perform the following:\"),mdx(\"ol\",null,mdx(\"li\",e({parentName:\"ol\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{href:\"#step1\"}),\"Review the demo application implementation\")),mdx(\"li\",e({parentName:\"ol\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{href:\"#step2\"}),\"Deploy and review the demo environment\")),mdx(\"li\",e({parentName:\"ol\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{href:\"#step3\"}),\"Run the demo application\")),mdx(\"li\",e({parentName:\"ol\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{href:\"#step4\"}),\"Reload the Static Secrets\"))),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"img\",e({parentName:\"p\"},{src:\"/img/vault-java-demo-10.png\",alt:\"Encryption as a Service\"}))),mdx(\"h3\",e({},{className:\"g-type-display-4\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#step1\",\"aria-label\":\"step 1 review the demo application implementation permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h3\"},{className:\"__target-h __compat\",id:\"step1\",\"aria-hidden\":\"\"})),mdx(\"a\",e({parentName:\"h3\"},{className:\"__target-h\",id:\"step-1-review-the-demo-application-implementation\",\"aria-hidden\":\"\"})),\"Step 1: Review the demo application implementation\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The source code can be found under the \",mdx(\"inlineCode\",{parentName:\"p\"},\"src/main\"),\" directory.\"),mdx(\"pre\",e({},{className:\"language-plaintext\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-plaintext\"}),\"\\u251C\\u2500\\u2500 java\",`\n`,\"\\u2502\\xA0\\xA0 \\u2514\\u2500\\u2500 com\",`\n`,\"\\u2502\\xA0\\xA0     \\u2514\\u2500\\u2500 hashicorp\",`\n`,\"\\u2502\\xA0\\xA0         \\u2514\\u2500\\u2500 vault\",`\n`,\"\\u2502\\xA0\\xA0             \\u2514\\u2500\\u2500 spring\",`\n`,\"\\u2502\\xA0\\xA0                 \\u2514\\u2500\\u2500 demo\",`\n`,\"\\u2502\\xA0\\xA0                     \\u251C\\u2500\\u2500 BeanUtil.java\",`\n`,\"\\u2502\\xA0\\xA0                     \\u251C\\u2500\\u2500 Order.java\",`\n`,\"\\u2502\\xA0\\xA0                     \\u251C\\u2500\\u2500 OrderAPIController.java\",`\n`,\"\\u2502\\xA0\\xA0                     \\u251C\\u2500\\u2500 OrderRepository.java\",`\n`,\"\\u2502\\xA0\\xA0                     \\u251C\\u2500\\u2500 Secret.java\",`\n`,\"\\u2502\\xA0\\xA0                     \\u251C\\u2500\\u2500 SecretController.java\",`\n`,\"\\u2502\\xA0\\xA0                     \\u251C\\u2500\\u2500 TransitConverter.java\",`\n`,\"\\u2502\\xA0\\xA0                     \\u2514\\u2500\\u2500 VaultDemoOrderServiceApplication.java\",`\n`,\"\\u2514\\u2500\\u2500 resources\",`\n`,\"    \\u2514\\u2500\\u2500 application.yaml\",`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`The demo Java application leverages the Spring Cloud Vault library to\ncommunicate with Vault.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"In the \",mdx(\"inlineCode\",{parentName:\"p\"},\"TransitConverter\"),\" class, the \",mdx(\"inlineCode\",{parentName:\"p\"},\"convertToDatabaseColumn\"),` method invokes a\nVault operation to encrypt the `,mdx(\"inlineCode\",{parentName:\"p\"},\"order\"),`. Similarly, the\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"convertToEntityAttribute\"),\" method decrypts the \",mdx(\"inlineCode\",{parentName:\"p\"},\"order\"),\" data.\"),mdx(\"pre\",e({},{className:\"language-plaintext\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-plaintext\"}),\"...\",`\n`,\"    @Override\",`\n`,\"    public String convertToDatabaseColumn(String customer) {\",`\n`,\"        VaultOperations vaultOps = BeanUtil.getBean(VaultOperations.class);\",`\n`,\"        Plaintext plaintext = Plaintext.of(customer);\",`\n`,'        String cipherText = vaultOps.opsForTransit().encrypt(\"order\", plaintext).getCiphertext();',`\n`,\"        return cipherText;\",`\n`,\"    }\",`\n`,`\n`,\"    @Override\",`\n`,\"    public String convertToEntityAttribute(String customer) {\",`\n`,\"        VaultOperations vaultOps = BeanUtil.getBean(VaultOperations.class);\",`\n`,\"        Ciphertext ciphertext = Ciphertext.of(customer);\",`\n`,'        String plaintext = vaultOps.opsForTransit().decrypt(\"order\", ciphertext).asString();',`\n`,\"        return plaintext;\",`\n`,\"...\",`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The \",mdx(\"inlineCode\",{parentName:\"p\"},\"VaultDemoOrderServiceApplication\"),\" class defines the \",mdx(\"inlineCode\",{parentName:\"p\"},\"main\"),\" method.\"),mdx(\"pre\",e({},{className:\"language-plaintext\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-plaintext\"}),\"public class VaultDemoOrderServiceApplication  {\",`\n`,`\n`,\"    private static final Logger logger = LoggerFactory.getLogger(VaultDemoOrderServiceApplication.class);\",`\n`,`\n`,\"    @Autowired\",`\n`,\"        private SessionManager sessionManager;\",`\n`,`\n`,'    @Value(\"${spring.datasource.username}\")',`\n`,\"    private String dbUser;\",`\n`,`\n`,'    @Value(\"${spring.datasource.password}\")',`\n`,\"    private String dbPass;\",`\n`,`\n`,\"    public static void main(String[] args) {\",`\n`,\"        SpringApplication.run(VaultDemoOrderServiceApplication.class, args);\",`\n`,\"    }\",`\n`,`\n`,\"    @PostConstruct\",`\n`,\"    public void initIt() throws Exception {\",`\n`,'        logger.info(\"Got Vault Token: \" + sessionManager.getSessionToken().getToken());',`\n`,'        logger.info(\"Got DB User: \" + dbUser);',`\n`,\"    }\",`\n`,\"}\",`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The \",mdx(\"inlineCode\",{parentName:\"p\"},\"OrderAPIController\"),\" class defines the API endpoint (\",mdx(\"inlineCode\",{parentName:\"p\"},\"api/orders\"),\").\"),mdx(\"h3\",e({},{className:\"g-type-display-4\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#step2\",\"aria-label\":\"step 2 deploy and review the demo environment permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h3\"},{className:\"__target-h __compat\",id:\"step2\",\"aria-hidden\":\"\"})),mdx(\"a\",e({parentName:\"h3\"},{className:\"__target-h\",id:\"step-2-deploy-and-review-the-demo-environment\",\"aria-hidden\":\"\"})),\"Step 2: Deploy and review the demo environment\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Now let's run the demo app and examine how it behaves.\"),mdx(\"div\",e({},{className:\"alert alert-warning g-type-body\",role:\"alert\"}),mdx(\"p\",e({parentName:\"div\"},{className:\"g-type-long-body\"}),`To keep it simple and lightweight, you are going to run a Linux virtual\nmachine locally using Vagrant.`)),mdx(\"h4\",e({},{className:\"g-type-display-5\"}),mdx(\"a\",e({parentName:\"h4\"},{className:\"__permalink-h\",href:\"#task-1-run-vagrant\",\"aria-label\":\"task 1 run vagrant permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h4\"},{className:\"__target-h\",id:\"task-1-run-vagrant\",\"aria-hidden\":\"\"})),\"Task 1: Run Vagrant\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"In the \",mdx(\"strong\",{parentName:\"p\"},mdx(\"inlineCode\",{parentName:\"strong\"},\"vault-guides/secrets/spring-cloud-vault/vagrant-local\")),` folder,\na `,mdx(\"inlineCode\",{parentName:\"p\"},\"Vagrantfile\"),` is provided which spins up a Linux machine where the demo\ncomponents are installed and configured.`),mdx(\"pre\",e({},{className:\"language-shell\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"# Change the working directory to vagrant-local\"),`\n`,\"$ \",mdx(\"span\",e({parentName:\"code\"},{className:\"token builtin class-name\"}),\"cd\"),\" /vault-guides/secrets/spring-cloud-vault/vagrant-local\",`\n`,`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"# Create and configure a Linux machine. This takes about 3 minutes\"),`\n`,\"$ vagrant up\",`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"..\"),\".\",`\n`,\"demo: Success\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"!\"),\" Data written to: database/roles/order\",`\n`,\"demo: Success\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"!\"),\" Enabled the transit secrets engine at: transit/\",`\n`,\"demo: Success\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"!\"),\" Data written to: transit/keys/order\",`\n`,\"demo: Success\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"!\"),\" Data written to: secret/spring-vault-demo\",`\n`,`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"# Verify that the virtual machine was successfully created and running\"),`\n`,\"$ vagrant status\",`\n`,\"Current machine states:\",`\n`,\"demo                      running \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"(\"),\"virtualbox\",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\")\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"..\"),\".\",`\n`,`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"# Connect to the demo machine\"),`\n`,\"$ vagrant \",mdx(\"span\",e({parentName:\"code\"},{className:\"token function\"}),\"ssh\"),\" demo\",`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"There are 3 Docker containers running on the machine: \",mdx(\"inlineCode\",{parentName:\"p\"},\"spring\"),\", \",mdx(\"inlineCode\",{parentName:\"p\"},\"vault\"),\", and \",mdx(\"inlineCode\",{parentName:\"p\"},\"postgres\"),\".\"),mdx(\"pre\",e({},{className:\"language-plaintext\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-plaintext\"}),\"[vagrant@demo ~]$ docker ps\",`\n`,\"CONTAINER ID     IMAGE            COMMAND                  CREATED           STATUS           NAMES\",`\n`,'684d8fb23ae5     spring           \"java -Djava.secur...\"   7 minutes ago     Up 7 minutes     spring',`\n`,'dc6a3454b323     vault:0.10.0     \"docker-entrypoint...\"   7 minutes ago     Up 7 minutes     vault',`\n`,'4093a45c209f     postgres         \"docker-entrypoint...\"   7 minutes ago     Up 7 minutes     postgres',`\n`)),mdx(\"h4\",e({},{className:\"g-type-display-5\"}),mdx(\"a\",e({parentName:\"h4\"},{className:\"__permalink-h\",href:\"#task-2-examine-the-vault-environment\",\"aria-label\":\"task 2 examine the vault environment permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h4\"},{className:\"__target-h\",id:\"task-2-examine-the-vault-environment\",\"aria-hidden\":\"\"})),\"Task 2: Examine the Vault environment\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"During the demo machine provisioning, the \",mdx(\"inlineCode\",{parentName:\"p\"},\"/scripts/vault.sh\"),` script was\nexecuted to perform the following:`),mdx(\"ul\",null,mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),\"Created a policy named, \",mdx(\"strong\",{parentName:\"li\"},mdx(\"inlineCode\",{parentName:\"strong\"},\"order\"))),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),\"Enabled the \",mdx(\"inlineCode\",{parentName:\"li\"},\"transit\"),\" secret engine and created an encryption key named, \",mdx(\"strong\",{parentName:\"li\"},mdx(\"inlineCode\",{parentName:\"strong\"},\"order\"))),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),\"Enabled the \",mdx(\"inlineCode\",{parentName:\"li\"},\"database\"),\" secret engine and created a role named, \",mdx(\"strong\",{parentName:\"li\"},mdx(\"inlineCode\",{parentName:\"strong\"},\"order\")))),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"View the \",mdx(\"inlineCode\",{parentName:\"p\"},\"vault\"),\" log:\"),mdx(\"pre\",e({},{className:\"language-plaintext\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-plaintext\"}),\"[vagrant@demo ~]$  docker logs vault\",`\n`,\"...\",`\n`,\"==> Vault shutdown triggered\",`\n`,\"==> Vault server configuration:\",`\n`,\"             Api Address: http://0.0.0.0:8200\",`\n`,\"                     Cgo: disabled\",`\n`,\"         Cluster Address: https://0.0.0.0:8201\",`\n`,'              Listener 1: tcp (addr: \"0.0.0.0:8200\", cluster address: \"0.0.0.0:8201\", tls: \"disabled\")',`\n`,\"               Log Level: info\",`\n`,\"                   Mlock: supported: true, enabled: false\",`\n`,\"                 Storage: inmem\",`\n`,\"                 Version: Vault v0.10.0\",`\n`,\"             Version Sha: 5dd7f25f5c4b541f2da62d70075b6f82771a650d\",`\n`,\"WARNING! dev mode is enabled! In this mode, Vault runs entirely in-memory\",`\n`,\"and starts unsealed with a single unseal key. The root token is already\",`\n`,\"authenticated to the CLI, so you can immediately begin using Vault.\",`\n`,\"You may need to set the following environment variable:\",`\n`,\"    $ export VAULT_ADDR='http://0.0.0.0:8200'\",`\n`,\"The unseal key and root token are displayed below in case you want to\",`\n`,\"seal/unseal the Vault or re-authenticate.\",`\n`,\"Unseal Key: 2QIPWPDykRG/xWWl0quSHiXq8u+pFg3yEq0sgJPhMbA=\",`\n`,\"Root Token: root\",`\n`,\"...\",`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Notice that the log indicates that the Vault server is running in the \",mdx(\"inlineCode\",{parentName:\"p\"},\"dev\"),`\nmode, and the root token is `,mdx(\"inlineCode\",{parentName:\"p\"},\"root\"),\".\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"You can visit the Vault UI at http://localhost:8200/ui. Enter \",mdx(\"strong\",{parentName:\"p\"},mdx(\"inlineCode\",{parentName:\"strong\"},\"root\")),` and\nclick `,mdx(\"strong\",{parentName:\"p\"},\"Sign In\"),\".\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Select the \",mdx(\"strong\",{parentName:\"p\"},mdx(\"inlineCode\",{parentName:\"strong\"},\"transit/\")),` secrets engine, and you should find an encryption key\nnamed, \"`,mdx(\"inlineCode\",{parentName:\"p\"},\"order\"),'\".'),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"img\",e({parentName:\"p\"},{src:\"/img/vault-java-demo-2.png\",alt:\"Vault UI\"}))),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Under the \",mdx(\"strong\",{parentName:\"p\"},\"Policies\"),\", verify that the \",mdx(\"inlineCode\",{parentName:\"p\"},\"order\"),\" policy exists.\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"img\",e({parentName:\"p\"},{src:\"/img/vault-java-demo-3.png\",alt:\"Vault UI\"}))),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"This \",mdx(\"inlineCode\",{parentName:\"p\"},\"order\"),\" policy is for the application. It permits \",mdx(\"inlineCode\",{parentName:\"p\"},\"read\"),` on the\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"database/creds/order\"),` path so that the demo app can get a dynamically generated\ndatabase credential from Vault. Therefore, the PostgreSQL credentials are not\nhard-coded anywhere.`),mdx(\"pre\",e({},{className:\"language-plaintext\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-plaintext\"}),'path \"database/creds/order\"',`\n`,\"{\",`\n`,'  capabilities = [\"read\"]',`\n`,\"}\",`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"An \",mdx(\"inlineCode\",{parentName:\"p\"},\"update\"),` permission allows the app to request data encryption and decryption\nusing the `,mdx(\"inlineCode\",{parentName:\"p\"},\"order\"),\" encryption key in Vault.\"),mdx(\"pre\",e({},{className:\"language-plaintext\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-plaintext\"}),\"...\",`\n`,'path \"transit/decrypt/order\" {',`\n`,'  capabilities = [\"update\"]',`\n`,\"}\",`\n`,`\n`,'path \"transit/encrypt/order\" {',`\n`,'  capabilities = [\"update\"]',`\n`,\"}\",`\n`,\"...\",`\n`)),mdx(\"h4\",e({},{className:\"g-type-display-5\"}),mdx(\"a\",e({parentName:\"h4\"},{className:\"__permalink-h\",href:\"#task-3-examine-the-spring-container\",\"aria-label\":\"task 3 examine the spring container permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h4\"},{className:\"__target-h\",id:\"task-3-examine-the-spring-container\",\"aria-hidden\":\"\"})),\"Task 3: Examine the Spring container\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Remember that the \",mdx(\"inlineCode\",{parentName:\"p\"},\"VaultDemoOrderServiceApplication\"),` class logs messages during\nthe successful execution of `,mdx(\"inlineCode\",{parentName:\"p\"},\"initIt()\"),\":\"),mdx(\"pre\",e({},{className:\"language-plaintext\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-plaintext\"}),\"...\",`\n`,\"  @PostConstruct\",`\n`,\"    public void initIt() throws Exception {\",`\n`,'        logger.info(\"Got Vault Token: \" + sessionManager.getSessionToken().getToken());',`\n`,'        logger.info(\"Got DB User: \" + dbUser);',`\n`,\"...\",`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Verify that the log indicates that the demo app obtained a database\ncredentials from Vault successfully:`),mdx(\"pre\",e({},{className:\"language-plaintext\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-plaintext\"}),\"[vagrant@demo ~]$  docker logs spring | grep Got\",`\n`,\"...VaultDemoOrderServiceApplication : Got Vault Token: root\",`\n`,\"...VaultDemoOrderServiceApplication : Got DB User: v-token-order-rywqz61432yyx2x27w8r-1524067226\",`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Create a new shell session in the \",mdx(\"inlineCode\",{parentName:\"p\"},\"spring\"),\" container.\"),mdx(\"pre\",e({},{className:\"language-plaintext\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-plaintext\"}),\"[vagrant@demo ~]$  docker exec -it spring sh\",`\n`,\"/ #\",`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Find the \",mdx(\"inlineCode\",{parentName:\"p\"},\"bootstrap.yaml\"),\" file:\"),mdx(\"pre\",e({},{className:\"language-plaintext\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-plaintext\"}),\"/ #  ls -al\",`\n`,\"total 36720\",`\n`,\"drwxr-xr-x    1 root     root            51 Apr 18 16:00 .\",`\n`,\"drwxr-xr-x    1 root     root            51 Apr 18 16:00 ..\",`\n`,\"-rwxr-xr-x    1 root     root             0 Apr 18 16:00 .dockerenv\",`\n`,\"-rwxr--r--    1 root     root      37587245 Apr 18 15:59 app.jar\",`\n`,\"drwxr-xr-x    2 root     root          4096 Jan  9 19:37 bin\",`\n`,\"-rw-r--r--    1 1000     1000           426 Apr 17 17:58 bootstrap.yaml\",`\n`,\"...\",`\n`,`\n`,\"/ # cat bootstrap.yaml\",`\n`,\"spring.application.name: spring-vault-demo\",`\n`,\"spring.cloud.vault:\",`\n`,\"    authentication: TOKEN\",`\n`,\"    token: ${VAULT_TOKEN}\",`\n`,\"    host: localhost\",`\n`,\"    port: 8200\",`\n`,\"    scheme: http\",`\n`,\"    fail-fast: true\",`\n`,\"    config.lifecycle.enabled: true\",`\n`,\"    generic:\",`\n`,\"      enabled: true\",`\n`,\"      backend: secret\",`\n`,\"    database:\",`\n`,\"        enabled: true\",`\n`,\"        role: order\",`\n`,\"        backend: database\",`\n`,\"spring.datasource:\",`\n`,\"  url: jdbc:postgresql://localhost:5432/postgres\",`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The client token was injected into the \",mdx(\"inlineCode\",{parentName:\"p\"},\"spring\"),` container as an environment\nvariable (`,mdx(\"inlineCode\",{parentName:\"p\"},\"VAULT_TOKEN\"),\") by Vagrant.\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Enter \",mdx(\"inlineCode\",{parentName:\"p\"},\"exit\"),\" to close the shell session in the \",mdx(\"inlineCode\",{parentName:\"p\"},\"spring\"),\" container.\"),mdx(\"h4\",e({},{className:\"g-type-display-5\"}),mdx(\"a\",e({parentName:\"h4\"},{className:\"__permalink-h\",href:\"#task-4-examine-the-postgresql-database\",\"aria-label\":\"task 4 examine the postgresql database permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h4\"},{className:\"__target-h\",id:\"task-4-examine-the-postgresql-database\",\"aria-hidden\":\"\"})),\"Task 4: Examine the PostgreSQL database\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Connect to the PostgreSQL database running in the \",mdx(\"inlineCode\",{parentName:\"p\"},\"postgres\"),\" container:\"),mdx(\"pre\",e({},{className:\"language-plaintext\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-plaintext\"}),\"[vagrant@demo ~]$ docker exec -it postgres psql -U postgres -d postgres\",`\n`,\"psql (10.3 (Debian 10.3-1.pgdg90+1))\",`\n`,'Type \"help\" for help.',`\n`,`\n`,`\n`,\"postgres=# \\\\d orders\",`\n`,'                                          Table \"public.orders\"',`\n`,\"    Column     |            Type             | Collation | Nullable |              Default\",`\n`,\"---------------+-----------------------------+-----------+----------+------------------------------------\",`\n`,\" id            | bigint                      |           | not null | nextval('orders_id_seq'::regclass)\",`\n`,\" customer_name | character varying(60)       |           | not null |\",`\n`,\" product_name  | character varying(20)       |           | not null |\",`\n`,\" order_date    | timestamp without time zone |           | not null |\",`\n`,\"Indexes:\",`\n`,'    \"orders_pkey\" PRIMARY KEY, btree (id)',`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Let's list the existing database roles.\"),mdx(\"pre\",e({},{className:\"language-plaintext\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-plaintext\"}),\"postgres-# \\\\du\",`\n`,\"                                                     List of roles\",`\n`,\"                   Role name                   |                         Attributes                         | Member of\",`\n`,\"-----------------------------------------------+------------------------------------------------------------+-----------\",`\n`,\" postgres                                      | Superuser, Create role, Create DB, Replication, Bypass RLS | {}\",`\n`,\" v-token-order-rywqz61432yyx2x27w8r-1524067226 | Password valid until 2018-04-18 20:56:31+00                | {}\",`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Notice that there is a role name starting with \",mdx(\"inlineCode\",{parentName:\"p\"},\"v-token-order-\"),` which was\ndynamically created by the database secret engine.`),mdx(\"div\",e({},{className:\"alert alert-warning g-type-body\",role:\"alert\"}),mdx(\"p\",e({parentName:\"div\"},{className:\"g-type-long-body\"}),\"\",mdx(\"strong\",{parentName:\"p\"},\"NOTE:\"),` To learn more\nabout the database secret engine, read the `,mdx(\"a\",e({parentName:\"p\"},{href:\"/guides/secret-mgmt/dynamic-secrets\"}),`Secrets as a Service: Dynamic\nSecrets`),\" guide.\")),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Enter \",mdx(\"inlineCode\",{parentName:\"p\"},\"\\\\q\"),\" to exit out of the \",mdx(\"inlineCode\",{parentName:\"p\"},\"psql\"),` session, or you can open another terminal\nand SSH into the demo virtual machine.`),mdx(\"h3\",e({},{className:\"g-type-display-4\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#step3\",\"aria-label\":\"step 3 run the demo application permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h3\"},{className:\"__target-h __compat\",id:\"step3\",\"aria-hidden\":\"\"})),mdx(\"a\",e({parentName:\"h3\"},{className:\"__target-h\",id:\"step-3-run-the-demo-application\",\"aria-hidden\":\"\"})),\"Step 3: Run the demo application\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"If everything looked fine in \",mdx(\"a\",e({parentName:\"p\"},{href:\"#step2\"}),\"Step 2\"),\", you are ready to write some data.\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"img\",e({parentName:\"p\"},{src:\"/img/vault-java-demo-9.png\",alt:\"Vault UI\"}))),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"You have \",mdx(\"a\",e({parentName:\"p\"},{href:\"#task-3-examine-the-spring-container\"}),\"verified in the \",mdx(\"inlineCode\",{parentName:\"a\"},\"spring\"),\" log\"),`\nthat the demo app successfully retrieved a database credential from the Vault\nserver during its initialization.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The next step is to send a new order request via the demo app's \",mdx(\"em\",{parentName:\"p\"},\"orders\"),` API\n(http://localhost:8080/api/orders).`),mdx(\"pre\",e({},{className:\"language-shell\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"# Create a new order data\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),\"vagrant@demo ~\",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),\"$ \",mdx(\"span\",e({parentName:\"code\"},{className:\"token function\"}),\"tee\"),\" payload.json\",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"<<\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),\"EOF\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),\"{\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'  \"customerName\": \"John\",'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'  \"productName\": \"Nomad\"'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),\"EOF\"),`\n`,`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"# Send a request using cURL\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),\"vagrant@demo ~\",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),\"$ \",mdx(\"span\",e({parentName:\"code\"},{className:\"token function\"}),\"curl\"),\" --request POST --header \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"Content-Type: application/json\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"\\\\\"),`\n`,\"                       --data @payload.json http://localhost:8080/api/orders \",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"|\"),\" jq\",`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"id\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token builtin class-name\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token number\"}),\"2\"),\",\",`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"customerName\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token builtin class-name\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"John\"'),\",\",`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"productName\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token builtin class-name\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"Nomad\"'),\",\",`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"orderDate\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token builtin class-name\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"2018-04-18T22:07:42.916+0000\"'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"strong\",{parentName:\"p\"},\"NOTE:\"),` Alternatively, you can use tool such as\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.getpostman.com/apps\"}),\"Postman\"),` instead of cURL to invoke the API if\nyou prefer.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"img\",e({parentName:\"p\"},{src:\"/img/vault-java-demo-4.png\",alt:\"Postman\"}))),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`The order data you sent gets encrypted by Vault. The database only sees the\nciphertext. Let's verify that the order information stored in the database\nis encrypted.`),mdx(\"pre\",e({},{className:\"language-plaintext\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-plaintext\"}),\"[vagrant@demo ~]$ docker exec -it postgres psql -U postgres -d postgres\",`\n`,`\n`,\"postgres=# select * from orders;\",`\n`,\" id |                     customer_name                     | product_name |       order_date\",`\n`,\"----+-------------------------------------------------------+--------------+-------------------------\",`\n`,\"  1 | vault:v1:Qj0lx5DSZvwcHeMOX/5UX/ErHTaDPA3mVlSSpaXd1tbM | VE           | 2018-04-18 21:56:37.924\",`\n`,\"  2 | vault:v1:UwL3HnyqTUac5ElS5WYAuNg3NdIMFtd6vvwukL+FaKun | Nomad        | 2018-04-18 22:07:42.916\",`\n`,\"(2 rows)\",`\n`,`\n`,\"postgres=# \\\\q\",`\n`)),mdx(\"blockquote\",null,mdx(\"p\",e({parentName:\"blockquote\"},{className:\"g-type-long-body\"}),`In this demo, Vault encrypts the customer names; therefore, the values in the\n`,mdx(\"strong\",{parentName:\"p\"},mdx(\"inlineCode\",{parentName:\"strong\"},\"customer_name\")),` column do not display the names in a human readable\nmanner (e.g. \"James\" and \"John\").`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Now, retrieve the order data via the orders API:\"),mdx(\"pre\",e({},{className:\"language-plaintext\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-plaintext\"}),'[vagrant@demo ~]$ curl --header \"Content-Type: application/json\" \\\\',`\n`,\"                       http://localhost:8080/api/orders | jq\",`\n`,\"[\",`\n`,\" {\",`\n`,'   \"id\": 1,',`\n`,'   \"customerName\": \"James\",',`\n`,'   \"productName\": \"VE\",',`\n`,'   \"orderDate\": \"2018-04-18T21:56:37.924+0000\"',`\n`,\" },\",`\n`,\" {\",`\n`,'   \"id\": 2,',`\n`,'   \"customerName\": \"John\",',`\n`,'   \"productName\": \"Nomad\",',`\n`,'   \"orderDate\": \"2018-04-18T22:07:42.916+0000\"',`\n`,\" }\",`\n`,\"]\",`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The customer names should be readable. Remember that the \",mdx(\"strong\",{parentName:\"p\"},mdx(\"inlineCode\",{parentName:\"strong\"},\"order\")),` policy\npermits the demo app to encrypt and decrypt data using the `,mdx(\"inlineCode\",{parentName:\"p\"},\"order\"),` encryption\nkey in Vault.`),mdx(\"h4\",e({},{className:\"g-type-display-5\"}),mdx(\"a\",e({parentName:\"h4\"},{className:\"__permalink-h\",href:\"#web-ui\",\"aria-label\":\"web ui permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h4\"},{className:\"__target-h\",id:\"web-ui\",\"aria-hidden\":\"\"})),\"Web UI\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Vault UI makes it easy to decrypt the data.\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"In the \",mdx(\"strong\",{parentName:\"p\"},\"Secrets\"),\" tab, select \",mdx(\"strong\",{parentName:\"p\"},mdx(\"inlineCode\",{parentName:\"strong\"},\"transit/\"),\" > \",mdx(\"inlineCode\",{parentName:\"strong\"},\"orders\")),\", and select \",mdx(\"strong\",{parentName:\"p\"},`Key\nactions`),\".\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"img\",e({parentName:\"p\"},{src:\"/img/vault-java-demo-5.png\",alt:\"Web UI\"}))),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Select \",mdx(\"strong\",{parentName:\"p\"},\"Decrypt\"),` from the transit actions. Now, copy the ciphertext from the\n`,mdx(\"strong\",{parentName:\"p\"},mdx(\"inlineCode\",{parentName:\"strong\"},\"orders\")),\" table and paste it in.\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"img\",e({parentName:\"p\"},{src:\"/img/vault-java-demo-6.png\",alt:\"Web UI\"}))),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Click \",mdx(\"strong\",{parentName:\"p\"},\"Decrypt\"),\".\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"img\",e({parentName:\"p\"},{src:\"/img/vault-java-demo-7.png\",alt:\"Web UI\"}))),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Finally, click \",mdx(\"strong\",{parentName:\"p\"},\"Decode from base64\"),\" to reveal the customer name.\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"img\",e({parentName:\"p\"},{src:\"/img/vault-java-demo-8.png\",alt:\"Web UI\"}))),mdx(\"h3\",e({},{className:\"g-type-display-4\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#step4\",\"aria-label\":\"step 4 reloading the static secrets permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h3\"},{className:\"__target-h __compat\",id:\"step4\",\"aria-hidden\":\"\"})),mdx(\"a\",e({parentName:\"h3\"},{className:\"__target-h\",id:\"step-4-reloading-the-static-secrets\",\"aria-hidden\":\"\"})),\"Step 4: Reloading the Static Secrets\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Now, let's test another API endpoint, \",mdx(\"strong\",{parentName:\"p\"},mdx(\"inlineCode\",{parentName:\"strong\"},\"api/secret\")),` provided by the demo app.\nA plain old Java object, `,mdx(\"inlineCode\",{parentName:\"p\"},\"Secret\"),\" defines a get method for \",mdx(\"inlineCode\",{parentName:\"p\"},\"key\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"value\"),`.\nThe `,mdx(\"inlineCode\",{parentName:\"p\"},\"SecretController.java\"),\" defines an API endpoint, \",mdx(\"strong\",{parentName:\"p\"},mdx(\"inlineCode\",{parentName:\"strong\"},\"api/secret\")),\".\"),mdx(\"pre\",e({},{className:\"language-plaintext\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-plaintext\"}),\"package com.hashicorp.vault.spring.demo;\",`\n`,\"...\",`\n`,`\n`,\"@RefreshScope\",`\n`,\"@RestController\",`\n`,\"public class SecretController {\",`\n`,`\n`,'    @Value(\"${secret:n/a}\")',`\n`,\"    String secret;\",`\n`,`\n`,'    @RequestMapping(\"/api/secret\")',`\n`,\"    public Secret secret() {\",`\n`,'        return new Secret(\"secret\", secret);',`\n`,\"    }\",`\n`,\"}\",`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Remember from \",mdx(\"a\",e({parentName:\"p\"},{href:\"#task-2-examine-the-vault-environment\"}),\"Step 2\"),` that the\n`,mdx(\"strong\",{parentName:\"p\"},mdx(\"inlineCode\",{parentName:\"strong\"},\"order\")),\" policy granted permissions on the \",mdx(\"inlineCode\",{parentName:\"p\"},\"secret/spring-vault-demo\"),\" path.\"),mdx(\"pre\",e({},{className:\"language-plaintext\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-plaintext\"}),'path \"secret/spring-vault-demo\" {',`\n`,'  capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\"]',`\n`,\"}\",`\n`,\"...\",`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The demo app retrieved the secret from \",mdx(\"inlineCode\",{parentName:\"p\"},\"secret/spring-vault-demo\"),` and has a\nlocal copy. If someone (or perhaps another app) updates the secret, it makes the\nsecret held by the demo app to be obsolete.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"img\",e({parentName:\"p\"},{src:\"/img/vault-java-demo-11.png\",alt:\"Static Secret\"}))),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Spring offers \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#production-ready\"}),`Spring Boot\nActuator`),`\nwhich can be used to facilitate the reloading of the static secret.`),mdx(\"h4\",e({},{className:\"g-type-display-5\"}),mdx(\"a\",e({parentName:\"h4\"},{className:\"__permalink-h\",href:\"#task-1-read-the-secret\",\"aria-label\":\"task 1 read the secret permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h4\"},{className:\"__target-h\",id:\"task-1-read-the-secret\",\"aria-hidden\":\"\"})),\"Task 1: Read the secret\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`The initial key-value was set by Vagrant during the provisioning. (See the\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"Vagrantfile\"),\" at line 48.)\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Let's invoke the demo app's secret API (\",mdx(\"strong\",{parentName:\"p\"},mdx(\"inlineCode\",{parentName:\"strong\"},\"api/secret\")),\"):\"),mdx(\"pre\",e({},{className:\"language-shell-session\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token function\"}),\"curl\"),\" -s http://localhost:8080/api/secret \",mdx(\"span\",e({parentName:\"span\"},{className:\"token operator\"}),\"|\"),\" jq\")),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"{\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),'  \"key\": \"secret\",'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),'  \"value\": \"hello-vault\"'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"}\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"This is the secret that the demo app knows about.\"),mdx(\"h4\",e({},{className:\"g-type-display-5\"}),mdx(\"a\",e({parentName:\"h4\"},{className:\"__permalink-h\",href:\"#task-2-update-the-secrets\",\"aria-label\":\"task 2 update the secrets permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h4\"},{className:\"__target-h\",id:\"task-2-update-the-secrets\",\"aria-hidden\":\"\"})),\"Task 2: Update the Secrets\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Now, update the secret stored in Vault using API:\"),mdx(\"pre\",e({},{className:\"language-shell\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"# Update the value via API\"),`\n`,\"$ \",mdx(\"span\",e({parentName:\"code\"},{className:\"token function\"}),\"curl\"),\" --header \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"X-Vault-Token: root\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"\\\\\"),`\n`,\"       --request POST \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"\\\\\"),`\n`,\"       --data \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),`'{ \"secret\": \"my-api-key\" }'`),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"\\\\\"),`\n`,\"       http://127.0.0.1:8200/v1/secret/spring-vault-demo\",`\n`,`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"# Verify that the secret value was updated\"),`\n`,\"$ \",mdx(\"span\",e({parentName:\"code\"},{className:\"token function\"}),\"curl\"),\" --header \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"X-Vault-Token: root\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"\\\\\"),`\n`,\"       http://127.0.0.1:8200/v1/secret/spring-vault-demo \",mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"|\"),\" jq\",`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"request_id\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token builtin class-name\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"514601e4-a790-3dc6-14b0-537d6982a6c6\"'),\",\",`\n`,\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"lease_id\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token builtin class-name\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"\"'),\",\",`\n`,\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"renewable\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token builtin class-name\"}),\":\"),\" false,\",`\n`,\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"lease_duration\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token builtin class-name\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token number\"}),\"2764800\"),\",\",`\n`,\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"data\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token builtin class-name\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"   \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"secret\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token builtin class-name\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"my-api-key\"'),`\n`,\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),\",\",`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"..\"),\".\",`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"h4\",e({},{className:\"g-type-display-5\"}),mdx(\"a\",e({parentName:\"h4\"},{className:\"__permalink-h\",href:\"#task-3-refresh-the-secret-on-demo-app\",\"aria-label\":\"task 3 refresh the secret on demo app permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h4\"},{className:\"__target-h\",id:\"task-3-refresh-the-secret-on-demo-app\",\"aria-hidden\":\"\"})),\"Task 3: Refresh the secret on demo app\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Run the demo app's secret API again:\"),mdx(\"pre\",e({},{className:\"language-shell-session\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token function\"}),\"curl\"),\" -s http://localhost:8080/api/secret \",mdx(\"span\",e({parentName:\"span\"},{className:\"token operator\"}),\"|\"),\" jq\")),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"{\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),'  \"key\": \"secret\",'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),'  \"value\": \"hello-vault\"'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"}\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The current value stored in Vault is now \",mdx(\"inlineCode\",{parentName:\"p\"},\"my-api-key\"),`; however, the demo app\nstill holds `,mdx(\"inlineCode\",{parentName:\"p\"},\"hello-vault\"),\".\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Spring provides an\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#production-ready\"}),\"actuator\"),`\nwhich can be leveraged to refresh the secret value. At line 54 of the\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"vault-guides/secrets/spring-cloud-vault/pom.xml\"),`, you see that the actuator was\nadded to the project.`),mdx(\"pre\",e({},{className:\"language-plaintext\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-plaintext\"}),\"...\",`\n`,\"<dependency>\",`\n`,\"  <groupId>org.springframework.boot</groupId>\",`\n`,\"  <artifactId>spring-boot-starter-actuator</artifactId>\",`\n`,\"</dependency>\",`\n`,\"...\",`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Let's refresh the secret using the actuator:\"),mdx(\"pre\",e({},{className:\"language-shell-session\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token function\"}),\"curl\"),\" -s --request POST http://localhost:8080/actuator/refresh \",mdx(\"span\",e({parentName:\"span\"},{className:\"token operator\"}),\"|\"),\" jq\")),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"[\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),'  \"secret\"'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"]\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Read back the secret from the demo app again:\"),mdx(\"pre\",e({},{className:\"language-shell-session\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token function\"}),\"curl\"),\" -s http://localhost:8080/api/secret \",mdx(\"span\",e({parentName:\"span\"},{className:\"token operator\"}),\"|\"),\" jq\")),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"{\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),'  \"key\": \"secret\",'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),'  \"value\": \"my-api-key\"'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"}\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"It should display the correct value.\"),mdx(\"hr\",null),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`When you are done exploring the demo implementation, you can destroy the virtual\nmachine:`),mdx(\"pre\",e({},{className:\"language-shell-session\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vagrant destroy\")),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"demo: Are you sure you want to destroy the 'demo' VM? [y/N] y\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"==> demo: Forcing shutdown of VM...\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"==> demo: Destroying VM and associated drives...\"),`\n`)),mdx(\"div\",e({},{className:\"alert alert-warning g-type-body\",role:\"alert\"}),mdx(\"p\",e({parentName:\"div\"},{className:\"g-type-long-body\"}),`In the webinar, the demo environment was running in a public cloud, and Nomad\nand Consul were also installed and configured. If you wish to build a similar\nenvironment using Kubernetes, the assets in the `,mdx(\"inlineCode\",{parentName:\"p\"},\"vault-guides/secrets/spring-cloud-vault/kubernetes\"),`\nfolder provides you with some guidance.`)),mdx(\"h2\",e({},{className:\"g-type-display-3\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#next-steps\",\"aria-label\":\"next steps permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h2\"},{className:\"__target-h\",id:\"next-steps\",\"aria-hidden\":\"\"})),\"Next steps\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"/docs/auth/approle\"}),\"AppRole\"),` is an authentication mechanism within Vault\nto allow machines or apps to acquire a token to interact with Vault. Read the\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"/guides/identity/authentication\"}),\"AppRole Pull Authentication\"),` guide\nwhich introduces the steps to generate tokens for machines or apps by enabling\nAppRole auth method.`))}MDXContent.isMDXComponent=!0;\n","scope":{}},"navData":[{"title":"Getting Started","path":"getting-started","filePath":"content/guides/getting-started.mdx"},{"title":"Vault Operations","routes":[{"title":"Overview","path":"operations","filePath":"content/guides/operations/index.mdx"},{"title":"Reference Architecture","path":"operations/reference-architecture","filePath":"content/guides/operations/reference-architecture.mdx"},{"title":"Vault HA with Consul","path":"operations/vault-ha-consul","filePath":"content/guides/operations/vault-ha-consul.mdx"},{"title":"Production Hardening","path":"operations/production","filePath":"content/guides/operations/production.mdx"},{"title":"Root Token Generation","path":"operations/generate-root","filePath":"content/guides/operations/generate-root.mdx"},{"title":"Rekeying & Rotating","path":"operations/rekeying-and-rotating","filePath":"content/guides/operations/rekeying-and-rotating.mdx"},{"title":"Building Plugin Backends","path":"operations/plugin-backends","filePath":"content/guides/operations/plugin-backends.mdx"},{"divider":true},{"title":"Replication Setup & Guidance","path":"operations/replication","filePath":"content/guides/operations/replication.mdx"},{"title":"Disaster Recovery Setup","path":"operations/disaster-recovery","filePath":"content/guides/operations/disaster-recovery.mdx"},{"title":"Mount Filter","path":"operations/mount-filter","filePath":"content/guides/operations/mount-filter.mdx"},{"title":"Multi-Tenant: Namespaces","path":"operations/multi-tenant","filePath":"content/guides/operations/multi-tenant.mdx"},{"title":"Vault Auto-unseal with AWS KMS","path":"operations/autounseal-aws-kms","filePath":"content/guides/operations/autounseal-aws-kms.mdx"},{"title":"Seal Wrap / FIPS 140-2","path":"operations/seal-wrap","filePath":"content/guides/operations/seal-wrap.mdx"},{"title":"Vault Cluster Monitoring","path":"operations/monitoring","filePath":"content/guides/operations/monitoring.mdx"},{"title":"Vault Deployment Guide","path":"operations/deployment-guide","filePath":"content/guides/operations/deployment-guide.mdx"},{"title":"Performance Standby Nodes","path":"operations/performance-nodes","filePath":"content/guides/operations/performance-nodes.mdx"}]},{"title":"Identity and Access Management","routes":[{"title":"Overview","path":"identity","filePath":"content/guides/identity/index.mdx"},{"title":"Secure Introduction of Vault Clients","path":"identity/secure-intro","filePath":"content/guides/identity/secure-intro.mdx"},{"title":"Policies","path":"identity/policies","filePath":"content/guides/identity/policies.mdx"},{"title":"ACL Policy Path Templating","path":"identity/policy-templating","filePath":"content/guides/identity/policy-templating.mdx"},{"title":"AppRole Pull Authentication","path":"identity/authentication","filePath":"content/guides/identity/authentication.mdx"},{"title":"AppRole with Terraform and Chef","path":"identity/approle-trusted-entities","filePath":"content/guides/identity/approle-trusted-entities.mdx"},{"title":"Tokens and Leases","path":"identity/lease","filePath":"content/guides/identity/lease.mdx"},{"title":"Identity - Entities & Groups","path":"identity/identity","filePath":"content/guides/identity/identity.mdx"},{"divider":true},{"title":"Sentinel Policies","path":"identity/sentinel","filePath":"content/guides/identity/sentinel.mdx"},{"title":"Control Groups","path":"identity/control-groups","filePath":"content/guides/identity/control-groups.mdx"}]},{"title":"Secrets Management","routes":[{"title":"Overview","path":"secret-mgmt","filePath":"content/guides/secret-mgmt/index.mdx"},{"title":"Static Secrets","path":"secret-mgmt/static-secrets","filePath":"content/guides/secret-mgmt/static-secrets.mdx"},{"title":"Versioned KV Secret Engine","path":"secret-mgmt/versioned-kv","filePath":"content/guides/secret-mgmt/versioned-kv.mdx"},{"title":"Secret as a Service","path":"secret-mgmt/dynamic-secrets","filePath":"content/guides/secret-mgmt/dynamic-secrets.mdx"},{"title":"DB Root Credential Rotation","path":"secret-mgmt/db-root-rotation","filePath":"content/guides/secret-mgmt/db-root-rotation.mdx"},{"title":"Cubbyhole Response Wrapping","path":"secret-mgmt/cubbyhole","filePath":"content/guides/secret-mgmt/cubbyhole.mdx"},{"title":"One-Time SSH Password","path":"secret-mgmt/ssh-otp","filePath":"content/guides/secret-mgmt/ssh-otp.mdx"},{"title":"Build Your Own CA","path":"secret-mgmt/pki-engine","filePath":"content/guides/secret-mgmt/pki-engine.mdx"},{"title":"Direct Application Integration","path":"secret-mgmt/app-integration","filePath":"content/guides/secret-mgmt/app-integration.mdx"}]},{"title":"Encryption as a Service","routes":[{"title":"Overview","path":"encryption","filePath":"content/guides/encryption/index.mdx"},{"title":"Encryption as a Service","path":"encryption/transit","filePath":"content/guides/encryption/transit.mdx"},{"title":"Java Application Demo","path":"encryption/spring-demo","filePath":"content/guides/encryption/spring-demo.mdx"},{"title":"Transit Secrets Re-wrapping","path":"encryption/transit-rewrap","filePath":"content/guides/encryption/transit-rewrap.mdx"}]}],"versions":[]},"__N_SSG":true}