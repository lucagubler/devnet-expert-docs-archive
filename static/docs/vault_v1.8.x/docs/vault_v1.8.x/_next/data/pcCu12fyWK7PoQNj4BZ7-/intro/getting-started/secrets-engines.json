{"pageProps":{"currentPath":"getting-started/secrets-engines","frontMatter":{"layout":"intro","page_title":"Secrets Engines - Getting Started","description":"secrets engines are what create, read, update, and delete secrets."},"githubFileUrl":"https://github.com/hashicorp/vault/blob/main/website/content/intro/getting-started/secrets-engines.mdx","mdxSource":{"compiledSource":"var m=Object.defineProperty;var l=Object.prototype.hasOwnProperty;var p=Object.getOwnPropertySymbols,o=Object.prototype.propertyIsEnumerable;var r=(a,s,n)=>s in a?m(a,s,{enumerable:!0,configurable:!0,writable:!0,value:n}):a[s]=n,e=(a,s)=>{for(var n in s||(s={}))l.call(s,n)&&r(a,n,s[n]);if(p)for(var n of p(s))o.call(s,n)&&r(a,n,s[n]);return a};var i=(a,s)=>{var n={};for(var t in a)l.call(a,t)&&s.indexOf(t)<0&&(n[t]=a[t]);if(a!=null&&p)for(var t of p(a))s.indexOf(t)<0&&o.call(a,t)&&(n[t]=a[t]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var t=n,{components:a}=t,s=i(t,[\"components\"]);return mdx(MDXLayout,e(e(e({},layoutProps),s),{components:a,mdxType:\"MDXLayout\"}),mdx(\"h1\",e({},{className:\"g-type-display-2\"}),mdx(\"a\",e({parentName:\"h1\"},{className:\"__permalink-h\",href:\"#secrets-engines\",\"aria-label\":\"secrets engines permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h1\"},{className:\"__target-h\",id:\"secrets-engines\",\"aria-hidden\":\"\"})),\"Secrets Engines\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Previously, we saw how to read and write arbitrary secrets to Vault. You may\nhave noticed all requests started with `,mdx(\"inlineCode\",{parentName:\"p\"},\"secret/\"),`. Try using a different prefix -\nVault will return an error:`),mdx(\"pre\",e({},{className:\"language-shell-session\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault \",mdx(\"span\",e({parentName:\"span\"},{className:\"token function\"}),\"write\"),\" foo/bar \",mdx(\"span\",e({parentName:\"span\"},{className:\"token assign-left variable\"}),\"a\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token operator\"}),\"=\"),\"b\")),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"#\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"..\"),\".\")),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"* no handler for route 'foo/bar'\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`The path prefix tells Vault which secrets engine it should route\ntraffic to. When a request comes to Vault, it matches the initial path part using a\nlongest prefix match and then passes the request to the corresponding secrets\nengine enabled at that path.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"By default, Vault enables a secrets engine called \",mdx(\"inlineCode\",{parentName:\"p\"},\"kv\"),\" at the path \",mdx(\"inlineCode\",{parentName:\"p\"},\"secret/\"),`.\nThe kv secrets engine reads and writes raw data to the backend storage.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Vault supports many other secrets engines besides \",mdx(\"inlineCode\",{parentName:\"p\"},\"kv\"),`, and this feature makes\nVault flexible and unique. For example, the `,mdx(\"inlineCode\",{parentName:\"p\"},\"aws\"),` secrets engine generates AWS\nIAM access keys on demand. The `,mdx(\"inlineCode\",{parentName:\"p\"},\"database\"),` secrets engine generates on-demand,\ntime-limited database credentials. These are just a few examples of the many\navailable secrets engines.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`For simplicity and familiarity, Vault presents these secrets engines similar to\na filesystem. A secrets engine is enabled at a path. Vault itself performs\nprefix routing on incoming requests and routes the request to the correct\nsecrets engine based on the path at which they were enabled.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`This page discusses secrets engines and the operations they support. This\ninformation is important to both operators who will configure Vault and users\nwho will interact with Vault.`),mdx(\"h2\",e({},{className:\"g-type-display-3\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#enable-a-secrets-engine\",\"aria-label\":\"enable a secrets engine permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h2\"},{className:\"__target-h\",id:\"enable-a-secrets-engine\",\"aria-hidden\":\"\"})),\"Enable a Secrets Engine\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"To get started, enable another instance of the \",mdx(\"inlineCode\",{parentName:\"p\"},\"kv\"),` secrets engine at a\ndifferent path. Just like a filesystem, Vault can enable a secrets engine at\nmany different paths. Each path is completely isolated and cannot talk to other\npaths. For example, a `,mdx(\"inlineCode\",{parentName:\"p\"},\"kv\"),\" secrets engine enabled at \",mdx(\"inlineCode\",{parentName:\"p\"},\"foo\"),` has no ability to\ncommunicate with a `,mdx(\"inlineCode\",{parentName:\"p\"},\"kv\"),\" secrets engine enabled at \",mdx(\"inlineCode\",{parentName:\"p\"},\"bar\"),\".\"),mdx(\"pre\",e({},{className:\"language-shell-session\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault secrets \",mdx(\"span\",e({parentName:\"span\"},{className:\"token builtin class-name\"}),\"enable\"),\" -path\",mdx(\"span\",e({parentName:\"span\"},{className:\"token operator\"}),\"=\"),\"kv kv\")),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"Success! Enabled the kv secrets engine at: kv/\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The path where the secrets engine is enabled defaults to the name of the secrets engine. Thus, the following commands are actually equivalent:\"),mdx(\"pre\",e({},{className:\"language-shell-session\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault secrets \",mdx(\"span\",e({parentName:\"span\"},{className:\"token builtin class-name\"}),\"enable\"),\" -path\",mdx(\"span\",e({parentName:\"span\"},{className:\"token operator\"}),\"=\"),\"kv kv\")),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault secrets \",mdx(\"span\",e({parentName:\"span\"},{className:\"token builtin class-name\"}),\"enable\"),\" kv\")),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`To verify our success and get more information about the secrets engine, use the\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"vault secrets list\"),\" command:\"),mdx(\"pre\",e({},{className:\"language-shell-session\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault secrets list\")),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"Path          Type         Description\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"----          ----         -----------\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"cubbyhole/    cubbyhole    per-token private secret storage\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"kv/           kv           n/a\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"secret/       kv           key/value secret storage\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"sys/          system       system endpoints used for control, policy and debugging\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`This shows there are 4 enabled secrets engines on this Vault server. You can see\nthe type of the secrets engine, the corresponding path, and an optional\ndescription (or \"n/a\" if none was given).`),mdx(\"div\",e({},{className:\"alert alert-warning g-type-body\",role:\"alert\"}),mdx(\"p\",e({parentName:\"div\"},{className:\"g-type-long-body\"}),\"The \",mdx(\"inlineCode\",{parentName:\"p\"},\"sys/\"),` path corresponds to the system backend. While the system backend\nis not specifically discussed in this guide, there is plentiful documentation on\nthe system backend. Many of these operations interact with Vault's core system\nand is not required for beginners.`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Take a few moments to read and write some data to the new \",mdx(\"inlineCode\",{parentName:\"p\"},\"kv\"),` secrets engine\nenabled at `,mdx(\"inlineCode\",{parentName:\"p\"},\"kv/\"),\". Here are a few ideas to get started:\"),mdx(\"pre\",e({},{className:\"language-shell-session\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault \",mdx(\"span\",e({parentName:\"span\"},{className:\"token function\"}),\"write\"),\" kv/my-secret \",mdx(\"span\",e({parentName:\"span\"},{className:\"token assign-left variable\"}),\"value\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token operator\"}),\"=\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token string\"}),'\"s3c(eT\"'))),`\n`,`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault \",mdx(\"span\",e({parentName:\"span\"},{className:\"token function\"}),\"write\"),\" kv/hello \",mdx(\"span\",e({parentName:\"span\"},{className:\"token assign-left variable\"}),\"target\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token operator\"}),\"=\"),\"world\")),`\n`,`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault \",mdx(\"span\",e({parentName:\"span\"},{className:\"token function\"}),\"write\"),\" kv/airplane \",mdx(\"span\",e({parentName:\"span\"},{className:\"token assign-left variable\"}),\"type\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token operator\"}),\"=\"),\"boeing \",mdx(\"span\",e({parentName:\"span\"},{className:\"token assign-left variable\"}),\"class\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token operator\"}),\"=\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token number\"}),\"787\"))),`\n`,`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault list kv\")),`\n`)),mdx(\"h2\",e({},{className:\"g-type-display-3\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#disable-a-secrets-engine\",\"aria-label\":\"disable a secrets engine permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h2\"},{className:\"__target-h\",id:\"disable-a-secrets-engine\",\"aria-hidden\":\"\"})),\"Disable a Secrets Engine\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`When a secrets engine is no longer needed, it can be disabled. When a secrets\nengine is disabled, all secrets are revoked and the corresponding Vault data and\nconfiguration is removed. Any requests to route data to the original path would\nresult in an error, but another secrets engine could now be enabled at that\npath.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`If, for some reason, Vault is unable to delete the data or revoke the leases,\nthe disabling operation will fail. If this happens, the secrets engine will\nremain enabled and available, but the request will return an error.`),mdx(\"pre\",e({},{className:\"language-shell-session\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault secrets disable kv/\")),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"Success! Disabled the secrets engine (if it existed) at: kv/\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Note that this command takes a PATH to the secrets engine as an argument, not\nthe TYPE of the secrets engine.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`In addition to disabling a secrets engine, it is also possible to \"move\" a\nsecrets engine to a new path. This is still a disruptive command. All\nconfiguration data is retained, but any secrets are revoked, since secrets are\nclosely tied to their engine's paths.`),mdx(\"h2\",e({},{className:\"g-type-display-3\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#what-is-a-secrets-engine\",\"aria-label\":\"what is a secrets engine permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h2\"},{className:\"__target-h\",id:\"what-is-a-secrets-engine\",\"aria-hidden\":\"\"})),\"What is a Secrets Engine?\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Now that you've successfully enabled and disabled a secrets engine... what is\nit? What is the point of a secrets engine?`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"As mentioned above, Vault behaves similarly to a \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://en.wikipedia.org/wiki/Virtual_file_system\"}),\"virtual filesystem\"),`. The\nread/write/delete/list operations are forwarded to the corresponding secrets\nengine, and the secrets engine decides how to react to those operations.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`This abstraction is incredibly powerful. It enables Vault to interface directly\nwith physical systems, databases, HSMs, etc. But in addition to these physical\nsystems, Vault can interact with more unique environments like AWS IAM, dynamic\nSQL user creation, etc. all while using the same read/write interface.`),mdx(\"h2\",e({},{className:\"g-type-display-3\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#next\",\"aria-label\":\"next permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h2\"},{className:\"__target-h\",id:\"next\",\"aria-hidden\":\"\"})),\"Next\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`You now know about secrets engines and how to operate on them. This is important\nknowledge to move forward and learn about other secrets engines.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Next, we'll use the AWS backend to\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"/intro/getting-started/dynamic-secrets\"}),\"generate dynamic secrets\"),\".\"))}MDXContent.isMDXComponent=!0;\n","scope":{}},"navData":[{"title":"Getting Started","routes":[{"title":"Overview","path":"getting-started","filePath":"content/intro/getting-started/index.mdx"},{"title":"Starting the Server","path":"getting-started/dev-server","filePath":"content/intro/getting-started/dev-server.mdx"},{"title":"Your First Secret","path":"getting-started/first-secret","filePath":"content/intro/getting-started/first-secret.mdx"},{"title":"Secrets Engines","path":"getting-started/secrets-engines","filePath":"content/intro/getting-started/secrets-engines.mdx"},{"title":"Dynamic Secrets","path":"getting-started/dynamic-secrets","filePath":"content/intro/getting-started/dynamic-secrets.mdx"},{"title":"Built-in Help","path":"getting-started/help","filePath":"content/intro/getting-started/help.mdx"},{"title":"Authentication","path":"getting-started/authentication","filePath":"content/intro/getting-started/authentication.mdx"},{"title":"Policies","path":"getting-started/policies","filePath":"content/intro/getting-started/policies.mdx"},{"title":"Deploy Vault","path":"getting-started/deploy","filePath":"content/intro/getting-started/deploy.mdx"},{"title":"HTTP API","path":"getting-started/apis","filePath":"content/intro/getting-started/apis.mdx"},{"title":"Next Steps","path":"getting-started/next-steps","filePath":"content/intro/getting-started/next-steps.mdx"}]}],"versions":[]},"__N_SSG":true}