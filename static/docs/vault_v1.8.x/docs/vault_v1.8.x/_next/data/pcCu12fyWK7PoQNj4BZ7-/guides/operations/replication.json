{"pageProps":{"currentPath":"operations/replication","frontMatter":{"layout":"guides","page_title":"Setting up Vault Enterprise Performance Replication - Guides","description":"Learn how to set up and manage Vault Enterprise Performance Replication."},"githubFileUrl":"https://github.com/hashicorp/vault/blob/main/website/content/guides/operations/replication.mdx","mdxSource":{"compiledSource":"var c=Object.defineProperty;var o=Object.prototype.hasOwnProperty;var r=Object.getOwnPropertySymbols,s=Object.prototype.propertyIsEnumerable;var l=(a,t,n)=>t in a?c(a,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):a[t]=n,e=(a,t)=>{for(var n in t||(t={}))o.call(t,n)&&l(a,n,t[n]);if(r)for(var n of r(t))s.call(t,n)&&l(a,n,t[n]);return a};var p=(a,t)=>{var n={};for(var i in a)o.call(a,i)&&t.indexOf(i)<0&&(n[i]=a[i]);if(a!=null&&r)for(var i of r(a))t.indexOf(i)<0&&s.call(a,i)&&(n[i]=a[i]);return n};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var i=n,{components:a}=i,t=p(i,[\"components\"]);return mdx(MDXLayout,e(e(e({},layoutProps),t),{components:a,mdxType:\"MDXLayout\"}),mdx(\"h1\",e({},{className:\"g-type-display-2\"}),mdx(\"a\",e({parentName:\"h1\"},{className:\"__permalink-h\",href:\"#replication-setup-guidance\",\"aria-label\":\"replication setup guidance permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h1\"},{className:\"__target-h\",id:\"replication-setup-guidance\",\"aria-hidden\":\"\"})),\"Replication Setup \",\"&\",\" Guidance\"),mdx(\"div\",e({},{className:\"alert alert-warning g-type-body\",role:\"alert\"}),mdx(\"p\",e({parentName:\"div\"},{className:\"g-type-long-body\"}),\"\",mdx(\"strong\",{parentName:\"p\"},\"Enterprise Only:\"),\" Vault replication feature is a part of \",mdx(\"em\",{parentName:\"p\"},\"Vault Enterprise\"),\".\")),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`If you're unfamiliar with Vault Replication concepts, please first look at the\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"/docs/enterprise/replication\"}),\"general information page\"),`. More\ndetails can be found in the\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"/docs/internals/replication\"}),\"replication internals\"),\" document.\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Vault replication also includes a complete API. For more information, please see\nthe `,mdx(\"a\",e({parentName:\"p\"},{href:\"/api/system/replication\"}),\"Vault Replication API documentation\")),mdx(\"h2\",e({},{className:\"g-type-display-3\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#activating-performance-replication\",\"aria-label\":\"activating performance replication permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h2\"},{className:\"__target-h\",id:\"activating-performance-replication\",\"aria-hidden\":\"\"})),\"Activating Performance Replication\"),mdx(\"h3\",e({},{className:\"g-type-display-4\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#activating-the-primary\",\"aria-label\":\"activating the primary permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h3\"},{className:\"__target-h\",id:\"activating-the-primary\",\"aria-hidden\":\"\"})),\"Activating the Primary\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"To activate the primary, run:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{}),\"$ vault write -f sys/replication/performance/primary/enable\",`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"There is currently one optional argument: \",mdx(\"inlineCode\",{parentName:\"p\"},\"primary_cluster_addr\"),`. This can be\nused to override the cluster address that the primary advertises to the\nsecondary, in case the internal network address/pathing is different between\nmembers of a single cluster and primary/secondary clusters.`),mdx(\"h3\",e({},{className:\"g-type-display-4\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#fetching-a-secondary-token\",\"aria-label\":\"fetching a secondary token permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h3\"},{className:\"__target-h\",id:\"fetching-a-secondary-token\",\"aria-hidden\":\"\"})),\"Fetching a Secondary Token\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"To fetch a secondary bootstrap token, run:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{}),\"$ vault write sys/replication/performance/primary/secondary-token id=<id>\",`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The value for \",mdx(\"inlineCode\",{parentName:\"p\"},\"id\"),` is opaque to Vault and can be any identifying value you want;\nthis can be used later to revoke the secondary and will be listed when you read\nreplication status on the primary. You will get back a normal wrapped response,\nexcept that the token will be JWT-formatted..`),mdx(\"h3\",e({},{className:\"g-type-display-4\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#activating-a-secondary\",\"aria-label\":\"activating a secondary permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h3\"},{className:\"__target-h\",id:\"activating-a-secondary\",\"aria-hidden\":\"\"})),\"Activating a Secondary\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"To activate a secondary using the fetched token, run:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{}),\"$ vault write sys/replication/performance/secondary/enable token=<token>\",`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`You must provide the full token value. Be very careful when running this\ncommand, as it will destroy all data currently stored in the secondary.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`There are a few optional arguments, with the one you'll most likely need being\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"primary_api_addr\"),`, which can be used to override the API address of the\nprimary cluster; otherwise the secondary will use the value embedded in the\nbootstrap token, which is the primary\\u2019s redirect address. If the primary has no\nredirect address (for instance, if it's not in an HA cluster), you'll need to\nset this value at secondary enable time.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Once the secondary is activated and has bootstrapped, it will be ready for\nservice and will maintain state with the primary. It is safe to seal/shutdown\nthe primary and/or secondary; when both are available again, they will\nsynchronize back into a replicated state.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Note: if the secondary is in an HA cluster, you will need to ensure that each\nstandby is sealed/unsealed with the new (primary\\u2019s) unseal keys. If one of the\nstandbys takes over on active duty before this happens it will seal itself to\nremove it from rotation (e.g. if using Consul for service discovery), but if a\nstandby does not attempt taking over it will throw errors. We hope to make this\nworkflow better in a future update.`),mdx(\"h3\",e({},{className:\"g-type-display-4\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#secondary-tokens\",\"aria-label\":\"secondary tokens permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h3\"},{className:\"__target-h\",id:\"secondary-tokens\",\"aria-hidden\":\"\"})),\"Secondary Tokens\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`On a production system, after a secondary is activated, the enabled\nauth methods should be used to get tokens with appropriate policies,\nas policies and auth method configuration are replicated.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`The generate-root command can also be used to generate a root token local to\nthe secondary cluster. After the secondary is activated, it will need to use the unseal or recovery keys from the Primary when generating a new root token or performing other commands that require unseal or recovery keys.`),mdx(\"h4\",e({},{className:\"g-type-display-5\"}),mdx(\"a\",e({parentName:\"h4\"},{className:\"__permalink-h\",href:\"#dev-mode-root-tokens\",\"aria-label\":\"dev mode root tokens permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h4\"},{className:\"__target-h\",id:\"dev-mode-root-tokens\",\"aria-hidden\":\"\"})),\"Dev-Mode Root Tokens\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`To ease development and testing, when both the primary and secondary are\nrunning in development mode, the initial root token created by the primary\n(including those with custom IDs specified with `,mdx(\"inlineCode\",{parentName:\"p\"},\"-dev-root-token-id\"),`) will be\npopulated into the secondary upon activation. This allows a developer to keep a\nconsistent `,mdx(\"inlineCode\",{parentName:\"p\"},\"~/.vault-token\"),\" file or \",mdx(\"inlineCode\",{parentName:\"p\"},\"VAULT_TOKEN\"),` environment variable when\nworking with both clusters.`),mdx(\"h2\",e({},{className:\"g-type-display-3\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#managing-vault-performance-replication\",\"aria-label\":\"managing vault performance replication permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h2\"},{className:\"__target-h\",id:\"managing-vault-performance-replication\",\"aria-hidden\":\"\"})),\"Managing Vault Performance Replication\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Vault\\u2019s performance replication model is intended to allow horizontally scaling Vault\\u2019s\nfunctions rather than to act in a strict Disaster Recovery (DR) capacity. For more information on Vault's disaster recovery replication, look at the\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"/docs/enterprise/replication\"}),\"general information page\"),\".\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`As a result, Vault performance replication acts on static items within Vault, meaning\ninformation that is not part of Vault\\u2019s lease-tracking system. In a practical\nsense, this means that all Vault information is replicated from the primary to\nsecondaries except for tokens and secret leases.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Because token information must be checked and possibly rewritten with each use\n(e.g. to decrement its use count), replicated tokens would require every call\nto be forwarded to the primary, decreasing rather than increasing total Vault\nthroughput.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Secret leases are tracked independently for two reasons: one, because every\nsuch lease is tied to a token and tokens are local to each cluster; and two,\nbecause tracking large numbers of leases is memory-intensive and tracking all\nleases in a replicated fashion could dramatically increase the memory\nrequirements across all Vault nodes.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`We believe that this performance replication model provides significant utility for horizontally scaling Vault\\u2019s functionality. However, it does mean\nthat certain principles must be kept in mind.`),mdx(\"h3\",e({},{className:\"g-type-display-4\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#always-use-the-local-cluster\",\"aria-label\":\"always use the local cluster permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h3\"},{className:\"__target-h\",id:\"always-use-the-local-cluster\",\"aria-hidden\":\"\"})),\"Always Use the Local Cluster\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`First and foremost, when designing systems to take advantage of replicated\nVault, you must ensure that they always use the same Vault cluster for all\noperations, as only that cluster will know about the client\\u2019s Vault token.`),mdx(\"h3\",e({},{className:\"g-type-display-4\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#enabling-a-secondary-wipes-storage\",\"aria-label\":\"enabling a secondary wipes storage permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h3\"},{className:\"__target-h\",id:\"enabling-a-secondary-wipes-storage\",\"aria-hidden\":\"\"})),\"Enabling a Secondary Wipes Storage\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Replication relies on having a shared keyring between primary and secondaries\nand also relies on having a shared understanding of the data store state. As a\nresult, when replication is enabled, all of the secondary\\u2019s existing storage\nwill be wiped. This is irrevocable. Make a backup first if there is a remote\nchance you\\u2019ll need some of this data at some future point.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Generally, activating as a secondary will be the first thing that is done upon\nsetting up a new cluster for replication.`),mdx(\"h3\",e({},{className:\"g-type-display-4\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#replicated-vs-local-backend-mounts\",\"aria-label\":\"replicated vs local backend mounts permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h3\"},{className:\"__target-h\",id:\"replicated-vs-local-backend-mounts\",\"aria-hidden\":\"\"})),\"Replicated vs. Local Backend Mounts\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`All backend mounts (of all types) that can be enabled within Vault default to\nbeing mounted as a replicated mount. This means that mounts cannot be enabled\non a secondary, and mounts enabled on the primary will replicate to\nsecondaries.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Mounts can also be marked local (via the \",mdx(\"inlineCode\",{parentName:\"p\"},\"-local\"),` flag on the Vault CLI or\nsetting the `,mdx(\"inlineCode\",{parentName:\"p\"},\"local\"),\" parameter to \",mdx(\"inlineCode\",{parentName:\"p\"},\"true\"),` in the API). This can only be performed\nat mount time; if a mount is local but should have been replicated, or vice\nversa, you must disable the backend and mount a new instance at that path with\nthe local flag enabled.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Local mounts do not propagate data from the primary to secondaries, and local\nmounts on secondaries do not have their data removed during the syncing\nprocess. The exception is during initial bootstrapping of a secondary from a\nstate where replication is disabled; all data, including local mounts, is\ndeleted at this time (as the encryption keys will have changed so data in local\nmounts would be unable to be read).`),mdx(\"h3\",e({},{className:\"g-type-display-4\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#audit-devices\",\"aria-label\":\"audit devices permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h3\"},{className:\"__target-h\",id:\"audit-devices\",\"aria-hidden\":\"\"})),\"Audit Devices\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`In normal Vault usage, if Vault has at least one audit device configured and\nis unable to successfully log to at least one device, it will block further\nrequests.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Replicated audit mounts must be able to successfully log on all replicated\nclusters. For example, if using the file audit device, the configured path must\nbe able to be written to by all secondaries. It may be useful to use at least\none local audit mount on each cluster to prevent such a scenario.`),mdx(\"h3\",e({},{className:\"g-type-display-4\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#never-have-two-primaries\",\"aria-label\":\"never have two primaries permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h3\"},{className:\"__target-h\",id:\"never-have-two-primaries\",\"aria-hidden\":\"\"})),\"Never Have Two Primaries\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`The replication model is not designed for active-active usage and enabling two\nprimaries should never be done, as it can lead to data loss if they or their\nsecondaries are ever reconnected.`),mdx(\"h3\",e({},{className:\"g-type-display-4\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#disaster-recovery\",\"aria-label\":\"disaster recovery permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h3\"},{className:\"__target-h\",id:\"disaster-recovery\",\"aria-hidden\":\"\"})),\"Disaster Recovery\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Local backend mounts are not replicated and their use will require existing DR\nmechanisms if DR is necessary in your implementation.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`If you need true DR, look at the\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"/docs/enterprise/replication\"}),\"general information page\"),\" for information on Vault's disaster recovery replication.\"))}MDXContent.isMDXComponent=!0;\n","scope":{}},"navData":[{"title":"Getting Started","path":"getting-started","filePath":"content/guides/getting-started.mdx"},{"title":"Vault Operations","routes":[{"title":"Overview","path":"operations","filePath":"content/guides/operations/index.mdx"},{"title":"Reference Architecture","path":"operations/reference-architecture","filePath":"content/guides/operations/reference-architecture.mdx"},{"title":"Vault HA with Consul","path":"operations/vault-ha-consul","filePath":"content/guides/operations/vault-ha-consul.mdx"},{"title":"Production Hardening","path":"operations/production","filePath":"content/guides/operations/production.mdx"},{"title":"Root Token Generation","path":"operations/generate-root","filePath":"content/guides/operations/generate-root.mdx"},{"title":"Rekeying & Rotating","path":"operations/rekeying-and-rotating","filePath":"content/guides/operations/rekeying-and-rotating.mdx"},{"title":"Building Plugin Backends","path":"operations/plugin-backends","filePath":"content/guides/operations/plugin-backends.mdx"},{"divider":true},{"title":"Replication Setup & Guidance","path":"operations/replication","filePath":"content/guides/operations/replication.mdx"},{"title":"Disaster Recovery Setup","path":"operations/disaster-recovery","filePath":"content/guides/operations/disaster-recovery.mdx"},{"title":"Mount Filter","path":"operations/mount-filter","filePath":"content/guides/operations/mount-filter.mdx"},{"title":"Multi-Tenant: Namespaces","path":"operations/multi-tenant","filePath":"content/guides/operations/multi-tenant.mdx"},{"title":"Vault Auto-unseal with AWS KMS","path":"operations/autounseal-aws-kms","filePath":"content/guides/operations/autounseal-aws-kms.mdx"},{"title":"Seal Wrap / FIPS 140-2","path":"operations/seal-wrap","filePath":"content/guides/operations/seal-wrap.mdx"},{"title":"Vault Cluster Monitoring","path":"operations/monitoring","filePath":"content/guides/operations/monitoring.mdx"},{"title":"Vault Deployment Guide","path":"operations/deployment-guide","filePath":"content/guides/operations/deployment-guide.mdx"},{"title":"Performance Standby Nodes","path":"operations/performance-nodes","filePath":"content/guides/operations/performance-nodes.mdx"}]},{"title":"Identity and Access Management","routes":[{"title":"Overview","path":"identity","filePath":"content/guides/identity/index.mdx"},{"title":"Secure Introduction of Vault Clients","path":"identity/secure-intro","filePath":"content/guides/identity/secure-intro.mdx"},{"title":"Policies","path":"identity/policies","filePath":"content/guides/identity/policies.mdx"},{"title":"ACL Policy Path Templating","path":"identity/policy-templating","filePath":"content/guides/identity/policy-templating.mdx"},{"title":"AppRole Pull Authentication","path":"identity/authentication","filePath":"content/guides/identity/authentication.mdx"},{"title":"AppRole with Terraform and Chef","path":"identity/approle-trusted-entities","filePath":"content/guides/identity/approle-trusted-entities.mdx"},{"title":"Tokens and Leases","path":"identity/lease","filePath":"content/guides/identity/lease.mdx"},{"title":"Identity - Entities & Groups","path":"identity/identity","filePath":"content/guides/identity/identity.mdx"},{"divider":true},{"title":"Sentinel Policies","path":"identity/sentinel","filePath":"content/guides/identity/sentinel.mdx"},{"title":"Control Groups","path":"identity/control-groups","filePath":"content/guides/identity/control-groups.mdx"}]},{"title":"Secrets Management","routes":[{"title":"Overview","path":"secret-mgmt","filePath":"content/guides/secret-mgmt/index.mdx"},{"title":"Static Secrets","path":"secret-mgmt/static-secrets","filePath":"content/guides/secret-mgmt/static-secrets.mdx"},{"title":"Versioned KV Secret Engine","path":"secret-mgmt/versioned-kv","filePath":"content/guides/secret-mgmt/versioned-kv.mdx"},{"title":"Secret as a Service","path":"secret-mgmt/dynamic-secrets","filePath":"content/guides/secret-mgmt/dynamic-secrets.mdx"},{"title":"DB Root Credential Rotation","path":"secret-mgmt/db-root-rotation","filePath":"content/guides/secret-mgmt/db-root-rotation.mdx"},{"title":"Cubbyhole Response Wrapping","path":"secret-mgmt/cubbyhole","filePath":"content/guides/secret-mgmt/cubbyhole.mdx"},{"title":"One-Time SSH Password","path":"secret-mgmt/ssh-otp","filePath":"content/guides/secret-mgmt/ssh-otp.mdx"},{"title":"Build Your Own CA","path":"secret-mgmt/pki-engine","filePath":"content/guides/secret-mgmt/pki-engine.mdx"},{"title":"Direct Application Integration","path":"secret-mgmt/app-integration","filePath":"content/guides/secret-mgmt/app-integration.mdx"}]},{"title":"Encryption as a Service","routes":[{"title":"Overview","path":"encryption","filePath":"content/guides/encryption/index.mdx"},{"title":"Encryption as a Service","path":"encryption/transit","filePath":"content/guides/encryption/transit.mdx"},{"title":"Java Application Demo","path":"encryption/spring-demo","filePath":"content/guides/encryption/spring-demo.mdx"},{"title":"Transit Secrets Re-wrapping","path":"encryption/transit-rewrap","filePath":"content/guides/encryption/transit-rewrap.mdx"}]}],"versions":[]},"__N_SSG":true}