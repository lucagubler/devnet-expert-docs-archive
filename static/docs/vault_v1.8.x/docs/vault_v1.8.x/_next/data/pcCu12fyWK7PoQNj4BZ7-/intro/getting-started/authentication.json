{"pageProps":{"currentPath":"getting-started/authentication","frontMatter":{"layout":"intro","page_title":"Authentication - Getting Started","description":"Authentication to Vault gives a user access to use Vault. Vault can authenticate using multiple methods."},"githubFileUrl":"https://github.com/hashicorp/vault/blob/main/website/content/intro/getting-started/authentication.mdx","mdxSource":{"compiledSource":"var r=Object.defineProperty;var p=Object.prototype.hasOwnProperty;var o=Object.getOwnPropertySymbols,l=Object.prototype.propertyIsEnumerable;var i=(e,t,s)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s,a=(e,t)=>{for(var s in t||(t={}))p.call(t,s)&&i(e,s,t[s]);if(o)for(var s of o(t))l.call(t,s)&&i(e,s,t[s]);return e};var m=(e,t)=>{var s={};for(var n in e)p.call(e,n)&&t.indexOf(n)<0&&(s[n]=e[n]);if(e!=null&&o)for(var n of o(e))t.indexOf(n)<0&&l.call(e,n)&&(s[n]=e[n]);return s};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(s){var n=s,{components:e}=n,t=m(n,[\"components\"]);return mdx(MDXLayout,a(a(a({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h1\",a({},{className:\"g-type-display-2\"}),mdx(\"a\",a({parentName:\"h1\"},{className:\"__permalink-h\",href:\"#authentication\",\"aria-label\":\"authentication permalink\"}),\"\\xBB\"),mdx(\"a\",a({parentName:\"h1\"},{className:\"__target-h\",id:\"authentication\",\"aria-hidden\":\"\"})),\"Authentication\"),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`Now that we know how to use the basics of Vault, it is important to understand\nhow to authenticate to Vault itself. Up to this point, we have not \"logged in\"\nto Vault. When starting the Vault server in `,mdx(\"inlineCode\",{parentName:\"p\"},\"dev\"),` mode, it automatically logs\nyou in as the root user with admin permissions. In a non-dev setup, you would\nhave had to authenticate first.`),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`On this page, we'll talk specifically about authentication. On the next page, we\ntalk about `,mdx(\"a\",a({parentName:\"p\"},{href:\"/intro/getting-started/policies\"}),\"authorization\"),`. Authentication\nis the mechanism of assigning an identity to a Vault user. The access control\nand permissions associated with an identity are authorization, and will not be\ncovered on this page.`),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`Vault has pluggable auth methods, making it easy to authenticate with Vault\nusing whatever form works best for your organization. On this page we will use\nthe token auth method and the GitHub auth method.`),mdx(\"h2\",a({},{className:\"g-type-display-3\"}),mdx(\"a\",a({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#background\",\"aria-label\":\"background permalink\"}),\"\\xBB\"),mdx(\"a\",a({parentName:\"h2\"},{className:\"__target-h\",id:\"background\",\"aria-hidden\":\"\"})),\"Background\"),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`Authentication is the process by which user or machine-supplied information is\nverified and converted into a Vault token with matching policies attached. The\neasiest way to think about Vault's authentication is to compare it to a website.`),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`When a user authenticates to a website, they enter their username, password, and\nmaybe 2FA code. That information is verified against external sources (a\ndatabase most likely), and the website responds with a success or failure. On\nsuccess, the website also returns a signed cookie that contains a session id\nwhich uniquely identifies that user for this session. That cookie and session id\nare automatically carried by the browser to future requests so the user is\nauthenticated. Can you imagine how terrible it would be to require a user to\nenter their login credentials on each page?`),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`Vault behaves very similarly, but it is much more flexible and pluggable than a\nstandard website. Vault supports many different authentication mechanisms, but\nthey all funnel into a single \"session token\", which we call the \"Vault token\".`),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`Authentication is simply the process by which a user or machine gets a Vault\ntoken.`),mdx(\"h2\",a({},{className:\"g-type-display-3\"}),mdx(\"a\",a({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#tokens\",\"aria-label\":\"tokens permalink\"}),\"\\xBB\"),mdx(\"a\",a({parentName:\"h2\"},{className:\"__target-h\",id:\"tokens\",\"aria-hidden\":\"\"})),\"Tokens\"),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`Token authentication is enabled by default in Vault and cannot be disabled. When\nyou start a dev server with `,mdx(\"inlineCode\",{parentName:\"p\"},\"vault server -dev\"),\", it outputs your \",mdx(\"em\",{parentName:\"p\"},\"root token\"),`.\nThe root token is the initial access token to configure Vault. It has root\nprivileges, so it can perform any operation within Vault.`),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"You can create more tokens:\"),mdx(\"pre\",a({},{className:\"language-shell-session\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault token create\")),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Key                Value\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"---                -----\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"token              463763ae-0c3b-ff77-e137-af668941465c\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"token_accessor     57b6b540-57c8-64c4-e9c6-0b18ab058144\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"token_duration     \\u221E\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"token_renewable    false\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"token_policies     [root]\"),`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`By default, this will create a child token of your current token that inherits\nall the same policies. The \"child\" concept here is important: tokens always have\na parent, and when that parent token is revoked, children can also be revoked\nall in one operation. This makes it easy when removing access for a user, to\nremove access for all sub-tokens that user created as well.`),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"After a token is created, you can revoke it:\"),mdx(\"pre\",a({},{className:\"language-shell-session\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault token revoke 463763ae-0c3b-ff77-e137-af668941465c\")),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Success! Revoked token (if it existed)\"),`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"In a \",mdx(\"a\",a({parentName:\"p\"},{href:\"/intro/getting-started/dynamic-secrets#revoking-the-secret\"}),\"previous section\"),\", we use the \",mdx(\"inlineCode\",{parentName:\"p\"},\"vault lease revoke\"),` command. This command\nis only used for revoking `,mdx(\"em\",{parentName:\"p\"},\"leases\"),\". For revoking \",mdx(\"em\",{parentName:\"p\"},\"tokens\"),`, use\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"vault token revoke\"),\".\"),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"To authenticate with a token:\"),mdx(\"pre\",a({},{className:\"language-shell-session\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault login a402d075-6d59-6129-1ac7-3718796d4346\")),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Success! You are now authenticated. The token information displayed below\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),'is already stored in the token helper. You do NOT need to run \"vault login\"'),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"again. Future Vault requests will automatically use this token.\"),`\n`,`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Key                Value\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"---                -----\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"token              a402d075-6d59-6129-1ac7-3718796d4346\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"token_accessor     7636b2f8-0cf1-e110-9b18-8f8b5ecf8351\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"token_duration     \\u221E\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"token_renewable    false\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"token_policies     [root]\"),`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`This authenticates with Vault. It will verify your token and let you know what\naccess policies the token is associated with. If you want to test the `,mdx(\"inlineCode\",{parentName:\"p\"},\"vault login\"),\" command, create a new token first.\"),mdx(\"h3\",a({},{className:\"g-type-display-4\"}),mdx(\"a\",a({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#best-practice\",\"aria-label\":\"best practice permalink\"}),\"\\xBB\"),mdx(\"a\",a({parentName:\"h3\"},{className:\"__target-h\",id:\"best-practice\",\"aria-hidden\":\"\"})),\"Best Practice\"),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"In practice, operators should not use the \",mdx(\"inlineCode\",{parentName:\"p\"},\"token create\"),` command to generate\nVault tokens for users or machines. Instead, those users or machines should\nauthenticate to Vault using any of Vault's configured auth methods such as\nGitHub, LDAP, AppRole, etc. For legacy applications which cannot generate their\nown token, operators may need to create a token in advance. Auth methods are\ndiscussed in more detail in the next section.`),mdx(\"h2\",a({},{className:\"g-type-display-3\"}),mdx(\"a\",a({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#auth-methods\",\"aria-label\":\"auth methods permalink\"}),\"\\xBB\"),mdx(\"a\",a({parentName:\"h2\"},{className:\"__target-h\",id:\"auth-methods\",\"aria-hidden\":\"\"})),\"Auth Methods\"),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`Vault supports many auth methods, but they must be enabled before use. Auth\nmethods give you flexibility. Enabling and configuration are typically performed\nby a Vault operator or security team. As an example of a human-focused auth\nmethod, let's authenticate via GitHub.`),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"First, enable the GitHub auth method:\"),mdx(\"pre\",a({},{className:\"language-shell-session\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault auth \",mdx(\"span\",a({parentName:\"span\"},{className:\"token builtin class-name\"}),\"enable\"),\" -path\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"=\"),\"github github\")),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Success! Enabled github auth method at: github/\"),`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`Just like secrets engines, auth methods default to their TYPE as the PATH, so\nthe following commands are equivalent:`),mdx(\"pre\",a({},{className:\"language-shell-session\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault auth \",mdx(\"span\",a({parentName:\"span\"},{className:\"token builtin class-name\"}),\"enable\"),\" -path\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"=\"),\"github github\")),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault auth \",mdx(\"span\",a({parentName:\"span\"},{className:\"token builtin class-name\"}),\"enable\"),\" github\")),`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`Unlike secrets engines which are enabled at the root router, auth methods are\nalways prefixed with `,mdx(\"inlineCode\",{parentName:\"p\"},\"auth/\"),` in their path. So the GitHub auth method we just\nenabled is accessible at `,mdx(\"inlineCode\",{parentName:\"p\"},\"auth/github\"),\". As another example:\"),mdx(\"pre\",a({},{className:\"language-shell-session\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault auth \",mdx(\"span\",a({parentName:\"span\"},{className:\"token builtin class-name\"}),\"enable\"),\" -path\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"=\"),\"my-github github\")),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Success! Enabled github auth method at: my-github/\"),`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"This would make the GitHub auth method accessible at \",mdx(\"inlineCode\",{parentName:\"p\"},\"auth/my-github\"),`. You can\nuse `,mdx(\"inlineCode\",{parentName:\"p\"},\"vault path-help\"),\" to learn more about the paths.\"),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`Next, configure the GitHub auth method. Each auth method has different\nconfiguration options, so please see the documentation for the full details. In\nthis case, the minimal set of configuration is to map teams to policies.`),mdx(\"pre\",a({},{className:\"language-shell-session\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault \",mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"write\"),\" auth/github/config \",mdx(\"span\",a({parentName:\"span\"},{className:\"token assign-left variable\"}),\"organization\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"=\"),\"hashicorp\")),`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`With the GitHub auth method enabled, we first have to configure it. For GitHub,\nwe tell it what organization users must be a part of, and map a team to a\npolicy:`),mdx(\"pre\",a({},{className:\"language-shell-session\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault \",mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"write\"),\" auth/github/config \",mdx(\"span\",a({parentName:\"span\"},{className:\"token assign-left variable\"}),\"organization\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"=\"),\"hashicorp\")),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Success! Data written to: auth/github/config\"),`\n`,`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault \",mdx(\"span\",a({parentName:\"span\"},{className:\"token function\"}),\"write\"),\" auth/github/map/teams/my-team \",mdx(\"span\",a({parentName:\"span\"},{className:\"token assign-left variable\"}),\"value\"),mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"=\"),\"default,my-policy\")),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Success! Data written to: auth/github/map/teams/my-team\"),`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`The first command configures Vault to pull authentication data from the\n\"hashicorp\" organization on GitHub. The next command tells Vault to map any\nusers who are members of the team \"my-team\" (in the hashicorp organization) to\nmap to the policies \"default\" and \"my-policy\". These policies do not have to\nexist in the system yet - Vault will just produce a warning when we login.`),mdx(\"hr\",null),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"As a user, you may want to find which auth methods are enabled and available:\"),mdx(\"pre\",a({},{className:\"language-shell-session\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault auth list\")),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Path       Type      Description\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"----       ----      -----------\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"github/    github    n/a\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"token/     token     token based credentials\"),`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"The \",mdx(\"inlineCode\",{parentName:\"p\"},\"vault auth list\"),` command will list all enabled auth methods. To learn more\nabout how to authenticate to a particular auth method via the CLI, use the\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"vault auth help\"),\" command with the PATH or TYPE of an auth method:\"),mdx(\"pre\",a({},{className:\"language-shell-session\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault auth \",mdx(\"span\",a({parentName:\"span\"},{className:\"token builtin class-name\"}),\"help\"),\" github\")),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Usage: vault login -method=github [CONFIG K=V...]\"),`\n`,`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"  The GitHub auth method allows users to authenticate using a GitHub\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"  personal access token. Users can generate a personal access token from the\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"  settings page on their GitHub account.\"),`\n`,`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"  Authenticate using a GitHub token:\"),`\n`,`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"      $ vault login -method=github token=abcd1234\"),`\n`,`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Configuration:\"),`\n`,`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"  mount=<string>\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"      Path where the GitHub credential method is mounted. This is usually\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),'      provided via the -path flag in the \"vault login\" command, but it can be'),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"      specified here as well. If specified here, it takes precedence over the\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),'      value for -path. The default value is \"github\".'),`\n`,`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"  token=<string>\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"      GitHub personal access token to use for authentication.\"),`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"Similarly, you can ask for help information about any CLI auth method, \",mdx(\"em\",{parentName:\"p\"},`even if\nit is not enabled`),\":\"),mdx(\"pre\",a({},{className:\"language-shell-session\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault auth \",mdx(\"span\",a({parentName:\"span\"},{className:\"token builtin class-name\"}),\"help\"),\" aws\")),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault auth \",mdx(\"span\",a({parentName:\"span\"},{className:\"token builtin class-name\"}),\"help\"),\" userpass\")),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault auth \",mdx(\"span\",a({parentName:\"span\"},{className:\"token builtin class-name\"}),\"help\"),\" token\")),`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"As per the help output, authenticate to GitHub using the \",mdx(\"inlineCode\",{parentName:\"p\"},\"vault login\"),` command.\nEnter your `,mdx(\"a\",a({parentName:\"p\"},{href:\"https://help.github.com/articles/creating-an-access-token-for-command-line-use/\"}),\"GitHub personal access token\"),` and Vault will authenticate\nyou.`),mdx(\"pre\",a({},{className:\"language-shell-session\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault login -method\",mdx(\"span\",a({parentName:\"span\"},{className:\"token operator\"}),\"=\"),\"github\")),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"GitHub Personal Access Token (will be hidden):\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Success! You are now authenticated. The token information displayed below\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),'is already stored in the token helper. You do NOT need to run \"vault login\"'),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"again. Future Vault requests will automatically use this token.\"),`\n`,`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Key                    Value\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"---                    -----\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"token                  7efb3969-8743-880f-e234-afca6e12d790\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"token_accessor         f7bfb6a3-c41e-eb87-5317-88a0aad200ae\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"token_duration         768h\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"token_renewable        true\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"token_policies         [default my-policy]\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"token_meta_org         hashicorp\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"token_meta_username    my-user\"),`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`Success! As the output indicates, Vault has already saved the resulting token in\nits token helper, so you do not need to run `,mdx(\"inlineCode\",{parentName:\"p\"},\"vault login\"),` again. However, this\nnew user we just created does not have many permissions in Vault. To continue,\nre-authenticate as the root token:`),mdx(\"pre\",a({},{className:\"language-shell-session\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault login \")),mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"<initial-root-token>\"),`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"You can revoke any logins from an auth method using \",mdx(\"inlineCode\",{parentName:\"p\"},\"vault token revoke\"),` with\nthe `,mdx(\"inlineCode\",{parentName:\"p\"},\"-mode\"),\" argument. For example:\"),mdx(\"pre\",a({},{className:\"language-shell-session\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault token revoke -mode path auth/github\")),`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"Alternatively, if you want to completely disable the GitHub auth method:\"),mdx(\"pre\",a({},{className:\"language-shell-session\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",a({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",a({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault auth disable github\")),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token output\"}),\"Success! Disabled the auth method (if it existed) at: github/\"),`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"This will also revoke any logins for that auth method.\"),mdx(\"h2\",a({},{className:\"g-type-display-3\"}),mdx(\"a\",a({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#next\",\"aria-label\":\"next permalink\"}),\"\\xBB\"),mdx(\"a\",a({parentName:\"h2\"},{className:\"__target-h\",id:\"next\",\"aria-hidden\":\"\"})),\"Next\"),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`In this page you learned about how Vault authenticates users. You learned about\nthe built-in token system as well as enabling other auth methods. At this point\nyou know how Vault assigns an `,mdx(\"em\",{parentName:\"p\"},\"identity\"),\" to a user.\"),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`The multiple auth methods Vault provides let you choose the most appropriate\nauthentication mechanism for your organization.`),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`In this next section, we'll learn about\n`,mdx(\"a\",a({parentName:\"p\"},{href:\"/intro/getting-started/policies\"}),\"authorization and policies\"),\".\"))}MDXContent.isMDXComponent=!0;\n","scope":{}},"navData":[{"title":"Getting Started","routes":[{"title":"Overview","path":"getting-started","filePath":"content/intro/getting-started/index.mdx"},{"title":"Starting the Server","path":"getting-started/dev-server","filePath":"content/intro/getting-started/dev-server.mdx"},{"title":"Your First Secret","path":"getting-started/first-secret","filePath":"content/intro/getting-started/first-secret.mdx"},{"title":"Secrets Engines","path":"getting-started/secrets-engines","filePath":"content/intro/getting-started/secrets-engines.mdx"},{"title":"Dynamic Secrets","path":"getting-started/dynamic-secrets","filePath":"content/intro/getting-started/dynamic-secrets.mdx"},{"title":"Built-in Help","path":"getting-started/help","filePath":"content/intro/getting-started/help.mdx"},{"title":"Authentication","path":"getting-started/authentication","filePath":"content/intro/getting-started/authentication.mdx"},{"title":"Policies","path":"getting-started/policies","filePath":"content/intro/getting-started/policies.mdx"},{"title":"Deploy Vault","path":"getting-started/deploy","filePath":"content/intro/getting-started/deploy.mdx"},{"title":"HTTP API","path":"getting-started/apis","filePath":"content/intro/getting-started/apis.mdx"},{"title":"Next Steps","path":"getting-started/next-steps","filePath":"content/intro/getting-started/next-steps.mdx"}]}],"versions":[]},"__N_SSG":true}