{"pageProps":{"currentPath":"getting-started/dynamic-secrets","frontMatter":{"layout":"intro","page_title":"Dynamic Secrets - Getting Started","description":"On this page we introduce dynamic secrets by showing you how to create AWS access keys with Vault."},"githubFileUrl":"https://github.com/hashicorp/vault/blob/main/website/content/intro/getting-started/dynamic-secrets.mdx","mdxSource":{"compiledSource":"var i=Object.defineProperty;var p=Object.prototype.hasOwnProperty;var o=Object.getOwnPropertySymbols,r=Object.prototype.propertyIsEnumerable;var l=(a,n,s)=>n in a?i(a,n,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[n]=s,e=(a,n)=>{for(var s in n||(n={}))p.call(n,s)&&l(a,s,n[s]);if(o)for(var s of o(n))r.call(n,s)&&l(a,s,n[s]);return a};var c=(a,n)=>{var s={};for(var t in a)p.call(a,t)&&n.indexOf(t)<0&&(s[t]=a[t]);if(a!=null&&o)for(var t of o(a))n.indexOf(t)<0&&r.call(a,t)&&(s[t]=a[t]);return s};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(s){var t=s,{components:a}=t,n=c(t,[\"components\"]);return mdx(MDXLayout,e(e(e({},layoutProps),n),{components:a,mdxType:\"MDXLayout\"}),mdx(\"h1\",e({},{className:\"g-type-display-2\"}),mdx(\"a\",e({parentName:\"h1\"},{className:\"__permalink-h\",href:\"#dynamic-secrets\",\"aria-label\":\"dynamic secrets permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h1\"},{className:\"__target-h\",id:\"dynamic-secrets\",\"aria-hidden\":\"\"})),\"Dynamic Secrets\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Now that you've experimented with the \",mdx(\"inlineCode\",{parentName:\"p\"},\"kv\"),` secrets engine, it is time to explore\nanother feature of Vault: `,mdx(\"em\",{parentName:\"p\"},\"dynamic secrets\"),\".\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Unlike the \",mdx(\"inlineCode\",{parentName:\"p\"},\"kv\"),` secrets where you had to put data into the store yourself,\ndynamic secrets are generated when they are accessed. Dynamic secrets do not\nexist until they are read, so there is no risk of someone stealing them or\nanother client using the same secrets. Because Vault has built-in revocation\nmechanisms, dynamic secrets can be revoked immediately after use, minimizing the\namount of time the secret existed.`),mdx(\"div\",e({},{className:\"alert alert-info g-type-body\",role:\"alert\"}),mdx(\"p\",e({parentName:\"div\"},{className:\"g-type-long-body\"}),\"\",mdx(\"strong\",{parentName:\"p\"},\"Note:\"),` Before starting this page, please register for an\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"https://aws.amazon.com\"}),\"AWS account\"),`. We won't be using any features that\ncost money, so you shouldn't be charged for anything. However, we are not\nresponsible for any charges you may incur.`)),mdx(\"h2\",e({},{className:\"g-type-display-3\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#enable-the-aws-secrets-engine\",\"aria-label\":\"enable the aws secrets engine permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h2\"},{className:\"__target-h\",id:\"enable-the-aws-secrets-engine\",\"aria-hidden\":\"\"})),\"Enable the AWS Secrets Engine\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Unlike the \",mdx(\"inlineCode\",{parentName:\"p\"},\"kv\"),` secrets engine which is enabled by default, the AWS secrets\nengine must be enabled before use. This step is usually done via configuration\nmanagement.`),mdx(\"pre\",e({},{className:\"language-shell-session\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault secrets \",mdx(\"span\",e({parentName:\"span\"},{className:\"token builtin class-name\"}),\"enable\"),\" -path\",mdx(\"span\",e({parentName:\"span\"},{className:\"token operator\"}),\"=\"),\"aws aws\")),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"Success! Enabled the aws secrets engine at: aws/\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The AWS secrets engine is now enabled at \",mdx(\"inlineCode\",{parentName:\"p\"},\"aws/\"),`. As we covered in the previous\nsections, different secrets engines allow for different behavior. In this case,\nthe AWS secrets engine generates dynamic, on-demand AWS access credentials.`),mdx(\"h2\",e({},{className:\"g-type-display-3\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#configuring-the-aws-secrets-engine\",\"aria-label\":\"configuring the aws secrets engine permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h2\"},{className:\"__target-h\",id:\"configuring-the-aws-secrets-engine\",\"aria-hidden\":\"\"})),\"Configuring the AWS Secrets Engine\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`After enabling the AWS secrets engine, you must configure it to authenticate and\ncommunicate with AWS. This requires privileged account credentials. If you are\nunfamiliar with AWS, use your root account keys.`),mdx(\"div\",e({},{className:\"alert alert-warning g-type-body\",role:\"alert\"}),mdx(\"p\",e({parentName:\"div\"},{className:\"g-type-long-body\"}),`Do not use your root account keys in production. This is a getting started\nguide and is not \"best practices\" for production installations.`)),mdx(\"pre\",e({},{className:\"language-shell-session\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault \",mdx(\"span\",e({parentName:\"span\"},{className:\"token function\"}),\"write\"),\" aws/config/root \")),mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"\\\\\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"    access_key=AKIAI4SGLQPBX6CSENIQ \\\\\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"    secret_key=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\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"Success! Data written to: aws/config/root\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`These credentials are now stored in this AWS secrets engine. The engine will use\nthese credentials when communicating with AWS in future requests.`),mdx(\"h2\",e({},{className:\"g-type-display-3\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#creating-a-role\",\"aria-label\":\"creating a role permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h2\"},{className:\"__target-h\",id:\"creating-a-role\",\"aria-hidden\":\"\"})),\"Creating a Role\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`The next step is to configure a \"role\". A \"role\" in Vault is a human-friendly\nidentifier to an action. Think of it as a symlink.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Vault knows how to create an IAM user via the AWS API, but it does not know what\npermissions, groups, and policies you want to attach to that user. This is where\nroles come in - roles map your configuration options to those API calls.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`For example, here is an IAM policy that enables all actions on EC2. When Vault\ngenerates an access key, it will automatically attach this policy. The generated\naccess key will have full access to EC2 (as dictated by this policy), but not\nIAM or other AWS services. If you are not familiar with AWS' IAM policies, that\nis okay - just use this one for now.`),mdx(\"pre\",e({},{className:\"language-json\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-json\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"Version\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"2012-10-17\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"Statement\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"Effect\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"Allow\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"Action\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"ec2:*\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"Resource\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"*\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`As mentioned above, we need to map this policy document to a named role. To do\nthat, write to `,mdx(\"inlineCode\",{parentName:\"p\"},\"aws/roles/:name\"),\":\"),mdx(\"pre\",e({},{className:\"language-shell-session\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault \",mdx(\"span\",e({parentName:\"span\"},{className:\"token function\"}),\"write\"),\" aws/roles/my-role \")),mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"\\\\\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"    credential_type=iam_user \\\\\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"    policy_document=-<<EOF\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"{\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),'  \"Version\": \"2012-10-17\",'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),'  \"Statement\": ['),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"    {\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),'      \"Effect\": \"Allow\",'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),'      \"Action\": \"ec2:*\",'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),'      \"Resource\": \"*\"'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"    }\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"  ]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"EOF\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"Success! Data written to: aws/roles/my-role\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Again, we're using a special path here \",mdx(\"inlineCode\",{parentName:\"p\"},\"aws/roles/:name\"),` to write an IAM policy\nto Vault. We just told Vault:`),mdx(\"blockquote\",null,mdx(\"p\",e({parentName:\"blockquote\"},{className:\"g-type-long-body\"}),'When I ask for a credential for \"my-role\", create it and attach the IAM policy ',mdx(\"inlineCode\",{parentName:\"p\"},'{ \"Version\": \"2012...\" }'),\".\")),mdx(\"h2\",e({},{className:\"g-type-display-3\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#generating-the-secret\",\"aria-label\":\"generating the secret permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h2\"},{className:\"__target-h\",id:\"generating-the-secret\",\"aria-hidden\":\"\"})),\"Generating the Secret\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Now that the AWS secrets engine is enabled and configured with a role, we can\nask Vault to generate an access key pair for that role by reading from\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"aws/creds/:name\"),\" where \",mdx(\"inlineCode\",{parentName:\"p\"},\":name\"),\" corresponds to the name of an existing role:\"),mdx(\"pre\",e({},{className:\"language-shell-session\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault \",mdx(\"span\",e({parentName:\"span\"},{className:\"token builtin class-name\"}),\"read\"),\" aws/creds/my-role\")),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"Key                Value\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"---                -----\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"lease_id           aws/creds/my-role/0bce0782-32aa-25ec-f61d-c026ff22106e\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"lease_duration     768h\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"lease_renewable    true\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"access_key         AKIAJELUDIANQGRXCTZQ\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"secret_key         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\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"security_token     <nil>\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Success! The access and secret key can now be used to perform any EC2 operations\nwithin AWS. Notice that these keys are new, they are not the keys you entered\nearlier. If you were to run the command a second time, you would get a new\naccess key pair. Each time you read from `,mdx(\"inlineCode\",{parentName:\"p\"},\"aws/creds/:name\"),`, Vault will connect\nto AWS and generate a new IAM user and key pair.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Take careful note of the \",mdx(\"inlineCode\",{parentName:\"p\"},\"lease_id\"),` field in the output. This value is used for\nrenewal, revocation, and inspection. Copy this `,mdx(\"inlineCode\",{parentName:\"p\"},\"lease_id\"),` to your clipboard.\nNote that the `,mdx(\"inlineCode\",{parentName:\"p\"},\"lease_id\"),\" is the \",mdx(\"strong\",{parentName:\"p\"},\"full path\"),\", not just the UUID at the end.\"),mdx(\"h2\",e({},{className:\"g-type-display-3\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#revoking-the-secret\",\"aria-label\":\"revoking the secret permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h2\"},{className:\"__target-h\",id:\"revoking-the-secret\",\"aria-hidden\":\"\"})),\"Revoking the Secret\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Vault will automatically revoke this credential after 768 hours (see\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"lease_duration\"),` in the output), but perhaps we want to revoke it early. Once\nthe secret is revoked, the access keys are no longer valid.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"To revoke the secret, use \",mdx(\"inlineCode\",{parentName:\"p\"},\"vault lease revoke\"),` with the lease ID that was outputted\nfrom `,mdx(\"inlineCode\",{parentName:\"p\"},\"vault read\"),\" when you ran it:\"),mdx(\"pre\",e({},{className:\"language-shell-session\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"vault lease revoke aws/creds/my-role/0bce0782-32aa-25ec-f61d-c026ff22106\")),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token output\"}),\"Success! Revoked lease: aws/creds/my-role/0bce0782-32aa-25ec-f61d-c026ff22106e\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Done! If you login to your AWS account, you will see that no IAM users exist. If\nyou try to use the access keys that were generated, you will find that they no\nlonger work.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`With such easy dynamic creation and revocation, you can hopefully begin to see\nhow easy it is to work with dynamic secrets and ensure they only exist for the\nduration that they are needed.`),mdx(\"h2\",e({},{className:\"g-type-display-3\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#next\",\"aria-label\":\"next permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h2\"},{className:\"__target-h\",id:\"next\",\"aria-hidden\":\"\"})),\"Next\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`On this page we experienced our first dynamic secret, and we also saw the\nrevocation system in action. Dynamic secrets are incredibly powerful. As time\ngoes on, we expect that more systems will support some sort of API to create\naccess credentials, and Vault will be ready to get the most value out of this\npractice.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Before going further, we're going to take a quick detour to learn about the\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"/intro/getting-started/help\"}),\"built-in help system\"),\".\"))}MDXContent.isMDXComponent=!0;\n","scope":{}},"navData":[{"title":"Getting Started","routes":[{"title":"Overview","path":"getting-started","filePath":"content/intro/getting-started/index.mdx"},{"title":"Starting the Server","path":"getting-started/dev-server","filePath":"content/intro/getting-started/dev-server.mdx"},{"title":"Your First Secret","path":"getting-started/first-secret","filePath":"content/intro/getting-started/first-secret.mdx"},{"title":"Secrets Engines","path":"getting-started/secrets-engines","filePath":"content/intro/getting-started/secrets-engines.mdx"},{"title":"Dynamic Secrets","path":"getting-started/dynamic-secrets","filePath":"content/intro/getting-started/dynamic-secrets.mdx"},{"title":"Built-in Help","path":"getting-started/help","filePath":"content/intro/getting-started/help.mdx"},{"title":"Authentication","path":"getting-started/authentication","filePath":"content/intro/getting-started/authentication.mdx"},{"title":"Policies","path":"getting-started/policies","filePath":"content/intro/getting-started/policies.mdx"},{"title":"Deploy Vault","path":"getting-started/deploy","filePath":"content/intro/getting-started/deploy.mdx"},{"title":"HTTP API","path":"getting-started/apis","filePath":"content/intro/getting-started/apis.mdx"},{"title":"Next Steps","path":"getting-started/next-steps","filePath":"content/intro/getting-started/next-steps.mdx"}]}],"versions":[]},"__N_SSG":true}