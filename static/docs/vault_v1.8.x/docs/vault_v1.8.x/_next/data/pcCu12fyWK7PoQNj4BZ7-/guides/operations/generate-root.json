{"pageProps":{"currentPath":"operations/generate-root","frontMatter":{"layout":"guides","page_title":"Generate Root Tokens using Unseal Keys - Guides","description":"Generate a new root token using a threshold of unseal keys."},"githubFileUrl":"https://github.com/hashicorp/vault/blob/main/website/content/guides/operations/generate-root.mdx","mdxSource":{"compiledSource":"var g=Object.defineProperty;var r=Object.prototype.hasOwnProperty;var l=Object.getOwnPropertySymbols,p=Object.prototype.propertyIsEnumerable;var s=(a,t,o)=>t in a?g(a,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):a[t]=o,e=(a,t)=>{for(var o in t||(t={}))r.call(t,o)&&s(a,o,t[o]);if(l)for(var o of l(t))p.call(t,o)&&s(a,o,t[o]);return a};var i=(a,t)=>{var o={};for(var n in a)r.call(a,n)&&t.indexOf(n)<0&&(o[n]=a[n]);if(a!=null&&l)for(var n of l(a))t.indexOf(n)<0&&p.call(a,n)&&(o[n]=a[n]);return o};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(o){var n=o,{components:a}=n,t=i(n,[\"components\"]);return mdx(MDXLayout,e(e(e({},layoutProps),t),{components:a,mdxType:\"MDXLayout\"}),mdx(\"h1\",e({},{className:\"g-type-display-2\"}),mdx(\"a\",e({parentName:\"h1\"},{className:\"__permalink-h\",href:\"#generate-root-tokens-using-unseal-keys\",\"aria-label\":\"generate root tokens using unseal keys permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h1\"},{className:\"__target-h\",id:\"generate-root-tokens-using-unseal-keys\",\"aria-hidden\":\"\"})),\"Generate Root Tokens Using Unseal Keys\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`It is generally considered a best practice to not persist\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"/docs/concepts/tokens#root-tokens\"}),\"root tokens\"),`. Instead a root token should be generated using\nVault's `,mdx(\"inlineCode\",{parentName:\"p\"},\"operator generate-root\"),` command only when absolutely necessary. This\nguide demonstrates regenerating a root token.`),mdx(\"ol\",null,mdx(\"li\",e({parentName:\"ol\"},{className:\"g-type-long-body\"}),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),`Unseal the vault using the existing quorum of unseal keys. You do not need to\nbe authenticated to generate a new root token, but the Vault must be unsealed\nand a quorum of unseal keys must be available.`),mdx(\"pre\",e({parentName:\"li\"},{className:\"language-shell\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell\"}),\"$ vault operator unseal\",`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"# ...\"),`\n`)))),mdx(\"h3\",e({},{className:\"g-type-display-4\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#using-otp\",\"aria-label\":\"using otp permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h3\"},{className:\"__target-h\",id:\"using-otp\",\"aria-hidden\":\"\"})),\"Using OTP\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"In this method, an OTP is XORed with the generated token on final output.\"),mdx(\"ol\",null,mdx(\"li\",e({parentName:\"ol\"},{className:\"g-type-long-body\"}),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"Generate a one-time password (OTP) to use for XORing the resulting token:\"),mdx(\"pre\",e({parentName:\"li\"},{className:\"language-text\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-text\"}),\"$ vault operator generate-root -generate-otp\",`\n`,\"mOXx7iVimjE6LXQ2Zna6NA==\",`\n`)),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"Save this OTP because you will need it to get the decoded final root token.\")),mdx(\"li\",e({parentName:\"ol\"},{className:\"g-type-long-body\"}),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),`Initialize a root token generation, providing the OTP code from the step\nabove:`),mdx(\"pre\",e({parentName:\"li\"},{className:\"language-text\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-text\"}),\"$ vault operator generate-root -init -otp=mOXx7iVimjE6LXQ2Zna6NA==\",`\n`,\"Nonce              f67f4da3-4ae4-68fb-4716-91da6b609c3e\",`\n`,\"Started            true\",`\n`,\"Progress           0/5\",`\n`,\"Complete           false\",`\n`)),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"The nonce value should be distributed to all unseal key holders.\")),mdx(\"li\",e({parentName:\"ol\"},{className:\"g-type-long-body\"}),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"Each unseal key holder provides their unseal key:\"),mdx(\"pre\",e({parentName:\"li\"},{className:\"language-text\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-text\"}),\"$ vault operator generate-root\",`\n`,\"Root generation operation nonce: f67f4da3-4ae4-68fb-4716-91da6b609c3e\",`\n`,\"Unseal Key (will be hidden): ...\",`\n`)),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),`If there is a tty, Vault will prompt for the key and automatically\ncomplete the nonce value. If there is no tty, or if the value is piped\nfrom stdin, the user must specify the nonce value from the `,mdx(\"inlineCode\",{parentName:\"p\"},\"-init\"),`\noperation.`),mdx(\"pre\",e({parentName:\"li\"},{className:\"language-text\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-text\"}),\"$ echo $UNSEAL_KEY | vault operator generate-root -nonce=f67f4da3... -\",`\n`))),mdx(\"li\",e({parentName:\"ol\"},{className:\"g-type-long-body\"}),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),`When the quorum of unseal keys are supplied, the final user will also get\nthe encoded root token.`),mdx(\"pre\",e({parentName:\"li\"},{className:\"language-text\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-text\"}),\"$ vault operator generate-root\",`\n`,\"Root generation operation nonce: f67f4da3-4ae4-68fb-4716-91da6b609c3e\",`\n`,\"Unseal Key (will be hidden):\",`\n`,`\n`,\"Nonce         f67f4da3-4ae4-68fb-4716-91da6b609c3e\",`\n`,\"Started       true\",`\n`,\"Progress      5/5\",`\n`,\"Complete      true\",`\n`,\"Root Token    IxJpyqxn3YafOGhqhvP6cQ==\",`\n`))),mdx(\"li\",e({parentName:\"ol\"},{className:\"g-type-long-body\"}),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"Decode the encoded token using the OTP:\"),mdx(\"pre\",e({parentName:\"li\"},{className:\"language-text\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-text\"}),\"$ vault operator generate-root \\\\\",`\n`,\"    -decode=IxJpyqxn3YafOGhqhvP6cQ== \\\\\",`\n`,\"    -otp=mOXx7iVimjE6LXQ2Zna6NA==\",`\n`,`\n`,\"24bde68f-3df3-e137-cf4d-014fe9ebc43f\",`\n`)))),mdx(\"h3\",e({},{className:\"g-type-display-4\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#using-pgp\",\"aria-label\":\"using pgp permalink\"}),\"\\xBB\"),mdx(\"a\",e({parentName:\"h3\"},{className:\"__target-h\",id:\"using-pgp\",\"aria-hidden\":\"\"})),\"Using PGP\"),mdx(\"ol\",null,mdx(\"li\",e({parentName:\"ol\"},{className:\"g-type-long-body\"}),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),`Initialize a root token generation, providing the path to a GPG public key\nor keybase username of a user to encrypted the resulting token.`),mdx(\"pre\",e({parentName:\"li\"},{className:\"language-text\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-text\"}),\"$ vault operator generate-root -init -pgp-key=keybase:sethvargo\",`\n`,\"Nonce              e24dec5e-f1ea-2dfe-ecce-604022006976\",`\n`,\"Started            true\",`\n`,\"Progress           0/5\",`\n`,\"Complete           false\",`\n`,\"PGP Fingerprint    e2f8e2974623ba2a0e933a59c921994f9c27e0ff\",`\n`)),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"The nonce value should be distributed to all unseal key holders.\")),mdx(\"li\",e({parentName:\"ol\"},{className:\"g-type-long-body\"}),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"Each unseal key holder providers their unseal key:\"),mdx(\"pre\",e({parentName:\"li\"},{className:\"language-text\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-text\"}),\"$ vault operator generate-root\",`\n`,\"Root generation operation nonce: e24dec5e-f1ea-2dfe-ecce-604022006976\",`\n`,\"Unseal Key (will be hidden): ...\",`\n`)),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),`If there is a tty, Vault will prompt for the key and automatically\ncomplete the nonce value. If there is no tty, or if the value is piped\nfrom stdin, the user must specify the nonce value from the `,mdx(\"inlineCode\",{parentName:\"p\"},\"-init\"),`\noperation.`),mdx(\"pre\",e({parentName:\"li\"},{className:\"language-text\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-text\"}),\"$ echo $UNSEAL_KEY | vault operator generate-root -nonce=f67f4da3... -\",`\n`))),mdx(\"li\",e({parentName:\"ol\"},{className:\"g-type-long-body\"}),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),`When the quorum of unseal keys are supplied, the final user will also get\nthe encoded root token.`),mdx(\"pre\",e({parentName:\"li\"},{className:\"language-text\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-text\"}),\"$ vault operator generate-root\",`\n`,\"Root generation operation nonce: e24dec5e-f1ea-2dfe-ecce-604022006976\",`\n`,\"Unseal Key (will be hidden):\",`\n`,`\n`,\"Nonce              e24dec5e-f1ea-2dfe-ecce-604022006976\",`\n`,\"Started            true\",`\n`,\"Progress           1/1\",`\n`,\"Complete           true\",`\n`,\"PGP Fingerprint    e2f8e2974623ba2a0e933a59c921994f9c27e0ff\",`\n`,\"Root Token         wcFMA0RVkFtoqzRlARAAI3Ux8kdSpfgXdF9mg...\",`\n`))),mdx(\"li\",e({parentName:\"ol\"},{className:\"g-type-long-body\"}),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"Decrypt the encrypted token using associated private key:\"),mdx(\"pre\",e({parentName:\"li\"},{className:\"language-text\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-text\"}),'$ echo \"wcFMA0RVkFtoqzRlARAAI3Ux8kdSpfgXdF9mg...\" | base64 --decode | gpg --decrypt',`\n`,`\n`,\"d0f71e9b-ebff-6d8a-50ae-b8859f2e5671\",`\n`)),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"or via keybase:\"),mdx(\"pre\",e({parentName:\"li\"},{className:\"language-text\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-text\"}),'$ echo \"wcFMA0RVkFtoqzRlARAAI3Ux8kdSpfgXdF9mg...\" | base64 --decode | keybase pgp decrypt',`\n`,`\n`,\"d0f71e9b-ebff-6d8a-50ae-b8859f2e5671\",`\n`)))))}MDXContent.isMDXComponent=!0;\n","scope":{}},"navData":[{"title":"Getting Started","path":"getting-started","filePath":"content/guides/getting-started.mdx"},{"title":"Vault Operations","routes":[{"title":"Overview","path":"operations","filePath":"content/guides/operations/index.mdx"},{"title":"Reference Architecture","path":"operations/reference-architecture","filePath":"content/guides/operations/reference-architecture.mdx"},{"title":"Vault HA with Consul","path":"operations/vault-ha-consul","filePath":"content/guides/operations/vault-ha-consul.mdx"},{"title":"Production Hardening","path":"operations/production","filePath":"content/guides/operations/production.mdx"},{"title":"Root Token Generation","path":"operations/generate-root","filePath":"content/guides/operations/generate-root.mdx"},{"title":"Rekeying & Rotating","path":"operations/rekeying-and-rotating","filePath":"content/guides/operations/rekeying-and-rotating.mdx"},{"title":"Building Plugin Backends","path":"operations/plugin-backends","filePath":"content/guides/operations/plugin-backends.mdx"},{"divider":true},{"title":"Replication Setup & Guidance","path":"operations/replication","filePath":"content/guides/operations/replication.mdx"},{"title":"Disaster Recovery Setup","path":"operations/disaster-recovery","filePath":"content/guides/operations/disaster-recovery.mdx"},{"title":"Mount Filter","path":"operations/mount-filter","filePath":"content/guides/operations/mount-filter.mdx"},{"title":"Multi-Tenant: Namespaces","path":"operations/multi-tenant","filePath":"content/guides/operations/multi-tenant.mdx"},{"title":"Vault Auto-unseal with AWS KMS","path":"operations/autounseal-aws-kms","filePath":"content/guides/operations/autounseal-aws-kms.mdx"},{"title":"Seal Wrap / FIPS 140-2","path":"operations/seal-wrap","filePath":"content/guides/operations/seal-wrap.mdx"},{"title":"Vault Cluster Monitoring","path":"operations/monitoring","filePath":"content/guides/operations/monitoring.mdx"},{"title":"Vault Deployment Guide","path":"operations/deployment-guide","filePath":"content/guides/operations/deployment-guide.mdx"},{"title":"Performance Standby Nodes","path":"operations/performance-nodes","filePath":"content/guides/operations/performance-nodes.mdx"}]},{"title":"Identity and Access Management","routes":[{"title":"Overview","path":"identity","filePath":"content/guides/identity/index.mdx"},{"title":"Secure Introduction of Vault Clients","path":"identity/secure-intro","filePath":"content/guides/identity/secure-intro.mdx"},{"title":"Policies","path":"identity/policies","filePath":"content/guides/identity/policies.mdx"},{"title":"ACL Policy Path Templating","path":"identity/policy-templating","filePath":"content/guides/identity/policy-templating.mdx"},{"title":"AppRole Pull Authentication","path":"identity/authentication","filePath":"content/guides/identity/authentication.mdx"},{"title":"AppRole with Terraform and Chef","path":"identity/approle-trusted-entities","filePath":"content/guides/identity/approle-trusted-entities.mdx"},{"title":"Tokens and Leases","path":"identity/lease","filePath":"content/guides/identity/lease.mdx"},{"title":"Identity - Entities & Groups","path":"identity/identity","filePath":"content/guides/identity/identity.mdx"},{"divider":true},{"title":"Sentinel Policies","path":"identity/sentinel","filePath":"content/guides/identity/sentinel.mdx"},{"title":"Control Groups","path":"identity/control-groups","filePath":"content/guides/identity/control-groups.mdx"}]},{"title":"Secrets Management","routes":[{"title":"Overview","path":"secret-mgmt","filePath":"content/guides/secret-mgmt/index.mdx"},{"title":"Static Secrets","path":"secret-mgmt/static-secrets","filePath":"content/guides/secret-mgmt/static-secrets.mdx"},{"title":"Versioned KV Secret Engine","path":"secret-mgmt/versioned-kv","filePath":"content/guides/secret-mgmt/versioned-kv.mdx"},{"title":"Secret as a Service","path":"secret-mgmt/dynamic-secrets","filePath":"content/guides/secret-mgmt/dynamic-secrets.mdx"},{"title":"DB Root Credential Rotation","path":"secret-mgmt/db-root-rotation","filePath":"content/guides/secret-mgmt/db-root-rotation.mdx"},{"title":"Cubbyhole Response Wrapping","path":"secret-mgmt/cubbyhole","filePath":"content/guides/secret-mgmt/cubbyhole.mdx"},{"title":"One-Time SSH Password","path":"secret-mgmt/ssh-otp","filePath":"content/guides/secret-mgmt/ssh-otp.mdx"},{"title":"Build Your Own CA","path":"secret-mgmt/pki-engine","filePath":"content/guides/secret-mgmt/pki-engine.mdx"},{"title":"Direct Application Integration","path":"secret-mgmt/app-integration","filePath":"content/guides/secret-mgmt/app-integration.mdx"}]},{"title":"Encryption as a Service","routes":[{"title":"Overview","path":"encryption","filePath":"content/guides/encryption/index.mdx"},{"title":"Encryption as a Service","path":"encryption/transit","filePath":"content/guides/encryption/transit.mdx"},{"title":"Java Application Demo","path":"encryption/spring-demo","filePath":"content/guides/encryption/spring-demo.mdx"},{"title":"Transit Secrets Re-wrapping","path":"encryption/transit-rewrap","filePath":"content/guides/encryption/transit-rewrap.mdx"}]}],"versions":[]},"__N_SSG":true}