

Dialog Patterns
===============

.. note::

    This document is automatically generated and is intended to document
    the default per-platform patterns used to match CLI dialogs for each
    plugin, and the corresponding action when a pattern is matched.





.
-



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



aireos
------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?User:\s*$``                                                                                      login_handler()             
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ======================================== ==========================
   Pattern                                  Action                    
   ---------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``          sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``          sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``      sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``           syslog_wait_send_return() 
   ``(.*?)Press any key to continue``       send({'key': ' '})        
   ``(.*?)Are you sure.*\([yY]/[nN]\)\s*$`` sendline({'key': 'y'})    
   ``(.?)Press Enter to continue.*``        sendline({'key': ''})     
   ======================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



aireos/ap
---------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



apic
----



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left



   Pattern                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Action                                                                                                           

   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         bad_password_handler()                                                                                           
   ``^.*Login incorrect``incorrect_login_handler()                                                                                        
   ``^.*([Uu]sername|[Ll]ogin): ?$``login_handler()                                                                                                  
   ``^.*User Access Verification``user_access_verification()                                                                                       
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  password_handler()                                                                                               
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``sendline()                                                                                                       
   ``Password OK\s*$``sendline()                                                                                                       
   ``^.*Enter passphrase for key .*?:\s*?``passphrase_handler()                                                                                             
   ``^.*?(Enter|Confirm) enable secret:\s*$``enable_password_handler()                                                                                        
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):``sendline({'key': 'no'})                                                                                          
   ``Would you like to enter basic management setup\? \[yes/no\]:``send({'key': '\x03'})                                                                                            
   ``^.*?Enter your selection( \[2])?:\s*$``sendline({'key': '2'})                                                                                           
   ``Escape character is .*\n``escape_char_callback()                                                                                           
   ``^.*RETURN to get started``wait_and_enter()                                                                                                 
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``ssh_continue_connecting()                                                                                        
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)``connection_refused_handler()                                                                                     
   ``Received disconnect from .*:``connection_failure_handler()                                                                                     
   ``Hit Enter to proceed:``wait_and_enter()                                                                                                 
   ``^(.*?)Press Ctrl\+x to Exit the session``wait_and_enter()                                                                                                 
   ``^(.*?)Connected.``sendline()                                                                                                       
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``syslog_wait_send_return()                                                                                        
   ``^.*?Press any key to continue\.\s*$``sendline({'key': ''})                                                                                            
   ``^.*[Pp]ermission denied``permission_denied_handler()                                                                                      
   ``^(.*?)Enter the fabric name|^(.*?)Enter the fabric ID|^(.*?)Enter the number of active controllers in the fabric|^(.*?)Enter the POD ID|^(.*?)Is this a standby controller|^(.*?)Enter the controller ID|^(.*?)Enter the controller name|^(.*?)Enter address pool for TEP addresses|^(.*?)Enter the VLAN ID for infra network|^(.*?)Enter address pool for BD multicast addresses|^(.*?)Enable IPv6 for Out of Band Mgmt Interface|^(.*?)Enter the IPv4 address \[|^(.*?)Enter the IPv4 address of the default gateway|^(.*?)Enter the interface speed/duplex mode|^(.*?)Enable strong passwords\?|^(.*?)(Enter|Reenter) the password for admin:|^(.*?)Would you like to edit the configuration\?`` update_state({'con': <unicon.plugins.apic.connection.AciApicConnection object at 0x1049568b0>, 'state': 'setup'})



execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



asa
---



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ``^Permission denied, please try again.$``                                                             bad_password_handler()      
   ``Beginning [Cc]onfiguration [Rr]eplication:? (from mate|Sending to mate)``                            sendline()                  
   ``End [Cc]onfiguration [Rr]eplication (to|from) mate``                                                 sendline()                  
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================================================================================================================= ==========================
   Pattern                                                                                                                       Action                    
   ----------------------------------------------------------------------------------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                                                                                               sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                                                                                               sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                                                                                           sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                                                syslog_wait_send_return() 
   ``^(.*?)Would you like to enable anonymous error reporting to help improve the product\? \[Y\]es, \[N\]o, \[A\]sk later\s*$`` sendline({'key': 'A'})    
   ``^(.*?)config has been modified. Save\? \[Y]es\/\[N]o\/\[S]ave all/\[C]ancel:\s*?``                                          sendline({'key': 'S'})    
   ``Beginning [Cc]onfiguration [Rr]eplication:? (from mate|Sending to mate)``                                                   sendline()                
   ``End [Cc]onfiguration [Rr]eplication (to|from) mate``                                                                        sendline()                
   ============================================================================================================================= ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



asa/ASAv
--------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ``^Permission denied, please try again.$``                                                             bad_password_handler()      
   ``Beginning [Cc]onfiguration [Rr]eplication:? (from mate|Sending to mate)``                            sendline()                  
   ``End [Cc]onfiguration [Rr]eplication (to|from) mate``                                                 sendline()                  
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================================================================================================================= ==========================
   Pattern                                                                                                                       Action                    
   ----------------------------------------------------------------------------------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                                                                                               sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                                                                                               sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                                                                                           sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                                                syslog_wait_send_return() 
   ``^(.*?)Would you like to enable anonymous error reporting to help improve the product\? \[Y\]es, \[N\]o, \[A\]sk later\s*$`` sendline({'key': 'A'})    
   ``^(.*?)config has been modified. Save\? \[Y]es\/\[N]o\/\[S]ave all/\[C]ancel:\s*?``                                          sendline({'key': 'S'})    
   ``Beginning [Cc]onfiguration [Rr]eplication:? (from mate|Sending to mate)``                                                   sendline()                
   ``End [Cc]onfiguration [Rr]eplication (to|from) mate``                                                                        sendline()                
   ============================================================================================================================= ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



asa/fp2k
--------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================================== =====================
   Pattern                                        Action               
   ---------------------------------------------- ---------------------
   ``^.*?  +Type \? for list of commands``        flag_ssh_session()   
   ``^.*\x07$``                                   clear_command_line() 
   ``Syntax error: The command is not completed`` clear_command_line() 
   ``^.*--\s?[Mm]ore\s?--.*$``                    more_prompt_handler()
   ============================================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



cheetah/ap
----------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



cimc
----



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ================================================ ==========================
   Pattern                                          Action                    
   ------------------------------------------------ --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                  sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                  sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``              sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                   syslog_wait_send_return() 
   ``^(.*?)Enter 'yes' or 'no' to confirm.*->\s*$`` sendline({'key': 'yes'})  
   ================================================ ==========================



comware
-------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^ *login as: *$``                                                                                    login_handler()             
   ``^.* password: $``                                                                                    password_handler()          
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



confd
-----



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ``^(.*?)connected from .* using console``                                                              console_session()           
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================



confd/csp
---------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*--\s?[Mm]ore\s?--.*$``         more_prompt_handler()     
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   =================================== ==========================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ``^(.*?)connected from .* using console``                                                              console_session()           
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================



confd/esc
---------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ``^(.*?)connected from .* using console``                                                              console_session()           
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================



confd/nfvis
-----------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*--\s?[Mm]ore\s?--.*$``         more_prompt_handler()     
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   =================================== ==========================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ``^(.*?)connected from .* using console``                                                              console_session()           
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================



dnos10
------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



dnos6
-----



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



eos
---



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



fxos
----



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================================== =====================
   Pattern                                        Action               
   ---------------------------------------------- ---------------------
   ``^.*?  +Type \? for list of commands``        flag_ssh_session()   
   ``^.*\x07$``                                   clear_command_line() 
   ``Syntax error: The command is not completed`` clear_command_line() 
   ``^.*--\s?[Mm]ore\s?--.*$``                    more_prompt_handler()
   ============================================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



fxos/fp4k
---------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================================== =====================
   Pattern                                        Action               
   ---------------------------------------------- ---------------------
   ``^.*?  +Type \? for list of commands``        flag_ssh_session()   
   ``^.*\x07$``                                   clear_command_line() 
   ``Syntax error: The command is not completed`` clear_command_line() 
   ``^.*--\s?[Mm]ore\s?--.*$``                    more_prompt_handler()
   ============================================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



fxos/fp9k
---------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================================== =====================
   Pattern                                        Action               
   ---------------------------------------------- ---------------------
   ``^.*?  +Type \? for list of commands``        flag_ssh_session()   
   ``^.*\x07$``                                   clear_command_line() 
   ``Syntax error: The command is not completed`` clear_command_line() 
   ``^.*--\s?[Mm]ore\s?--.*$``                    more_prompt_handler()
   ============================================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



fxos/ftd
--------



connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?  +Type \? for list of commands``                                                                flag_ssh_session()          
   ``Syntax error: The command is not completed``                                                         clear_command_line()        
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



gaia
----



connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



generic
-------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



hvrp
----



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============== ==========
   Pattern        Action    
   -------------- ----------
   ``(\[y\/n\])`` <lambda>()
   ============== ==========


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``Permission denied.*``                                                                                bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*[Ll]ogin:``                                                                                       login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword:``                                                                                    password_handler()          
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



ios
---



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



ios/ap
------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   ``^.*\[confirm\]\s*$``              sendline({'key': ''})     
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



ios/iol
-------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



ios/iosv
--------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================================== ==========================
   Pattern                                             Action                    
   --------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                 sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                      syslog_wait_send_return() 
   ``.*Destination filename \[startup-config\]\?\s*$`` sendline({'key': ''})     
   =================================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



ios/pagent
----------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



iosxe
-----



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ================================================================= ==========================
   Pattern                                                           Action                    
   ----------------------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                                   sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                                   sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                               sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                    syslog_wait_send_return() 
   ``^.*Overwrite the previous NVRAM configuration\?\[confirm\].*$`` sendline({'key': ''})     
   ``^.*Delete filename \[.*\]\?\s*$``                               sendline({'key': ''})     
   ``^.*\[confirm\]\s*$``                                            sendline({'key': ''})     
   ``^.*Do you want to continue\? \[no\]:\s*$``                      sendline({'key': 'yes'})  
   ``^.*Do you want to remove the above files\? \[y\/n]\s*$``        sendline({'key': 'y'})    
   ================================================================= ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================================================== =========================
   Pattern                                                        Action                   
   -------------------------------------------------------------- -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                 syslog_wait_send_return()
   ``^.*Are you sure you want to continue\? \(y\/n\)\[y\]:?\s?$`` sendline({'key': 'y'})   
   ``^.*Do you wish to continue\? \[yes\]:\s*$``                  sendline({'key': 'yes'}) 
   ``^.*\[confirm\]\s*$``                                         sendline({'key': ''})    
   ``^.*Do you want to continue\? \[no\]:\s*$``                   sendline({'key': 'yes'}) 
   ``Are you sure you want to do this\? \[yes/no\]:\s*$``         sendline({'key': 'yes'}) 
   ``^.*Proceed\? \[yes,no\]\s*$``                                sendline({'key': 'yes'}) 
   ============================================================== =========================



iosxe/c9800
-----------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ================================================================= ==========================
   Pattern                                                           Action                    
   ----------------------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                                   sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                                   sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                               sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                    syslog_wait_send_return() 
   ``^.*Overwrite the previous NVRAM configuration\?\[confirm\].*$`` sendline({'key': ''})     
   ``^.*Delete filename \[.*\]\?\s*$``                               sendline({'key': ''})     
   ``^.*\[confirm\]\s*$``                                            sendline({'key': ''})     
   ``^.*Do you want to continue\? \[no\]:\s*$``                      sendline({'key': 'yes'})  
   ``^.*Do you want to remove the above files\? \[y\/n]\s*$``        sendline({'key': 'y'})    
   ================================================================= ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================================================== =========================
   Pattern                                                        Action                   
   -------------------------------------------------------------- -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                 syslog_wait_send_return()
   ``^.*Are you sure you want to continue\? \(y\/n\)\[y\]:?\s?$`` sendline({'key': 'y'})   
   ``^.*Do you wish to continue\? \[yes\]:\s*$``                  sendline({'key': 'yes'}) 
   ``^.*\[confirm\]\s*$``                                         sendline({'key': ''})    
   ``^.*Do you want to continue\? \[no\]:\s*$``                   sendline({'key': 'yes'}) 
   ``Are you sure you want to do this\? \[yes/no\]:\s*$``         sendline({'key': 'yes'}) 
   ``^.*Proceed\? \[yes,no\]\s*$``                                sendline({'key': 'yes'}) 
   ============================================================== =========================



iosxe/c9800
-----------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ================================================================= ==========================
   Pattern                                                           Action                    
   ----------------------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                                   sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                                   sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                               sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                    syslog_wait_send_return() 
   ``^.*Overwrite the previous NVRAM configuration\?\[confirm\].*$`` sendline({'key': ''})     
   ``^.*Delete filename \[.*\]\?\s*$``                               sendline({'key': ''})     
   ``^.*\[confirm\]\s*$``                                            sendline({'key': ''})     
   ``^.*Do you want to continue\? \[no\]:\s*$``                      sendline({'key': 'yes'})  
   ``^.*Do you want to remove the above files\? \[y\/n]\s*$``        sendline({'key': 'y'})    
   ================================================================= ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================================================== =========================
   Pattern                                                        Action                   
   -------------------------------------------------------------- -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                 syslog_wait_send_return()
   ``^.*Are you sure you want to continue\? \(y\/n\)\[y\]:?\s?$`` sendline({'key': 'y'})   
   ``^.*Do you wish to continue\? \[yes\]:\s*$``                  sendline({'key': 'yes'}) 
   ``^.*\[confirm\]\s*$``                                         sendline({'key': ''})    
   ``^.*Do you want to continue\? \[no\]:\s*$``                   sendline({'key': 'yes'}) 
   ``Are you sure you want to do this\? \[yes/no\]:\s*$``         sendline({'key': 'yes'}) 
   ``^.*Proceed\? \[yes,no\]\s*$``                                sendline({'key': 'yes'}) 
   ============================================================== =========================



iosxe/c9800
-----------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ================================================================= ==========================
   Pattern                                                           Action                    
   ----------------------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                                   sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                                   sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                               sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                    syslog_wait_send_return() 
   ``^.*Overwrite the previous NVRAM configuration\?\[confirm\].*$`` sendline({'key': ''})     
   ``^.*Delete filename \[.*\]\?\s*$``                               sendline({'key': ''})     
   ``^.*\[confirm\]\s*$``                                            sendline({'key': ''})     
   ``^.*Do you want to continue\? \[no\]:\s*$``                      sendline({'key': 'yes'})  
   ``^.*Do you want to remove the above files\? \[y\/n]\s*$``        sendline({'key': 'y'})    
   ================================================================= ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================================================== =========================
   Pattern                                                        Action                   
   -------------------------------------------------------------- -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                 syslog_wait_send_return()
   ``^.*Are you sure you want to continue\? \(y\/n\)\[y\]:?\s?$`` sendline({'key': 'y'})   
   ``^.*Do you wish to continue\? \[yes\]:\s*$``                  sendline({'key': 'yes'}) 
   ``^.*\[confirm\]\s*$``                                         sendline({'key': ''})    
   ``^.*Do you want to continue\? \[no\]:\s*$``                   sendline({'key': 'yes'}) 
   ``Are you sure you want to do this\? \[yes/no\]:\s*$``         sendline({'key': 'yes'}) 
   ``^.*Proceed\? \[yes,no\]\s*$``                                sendline({'key': 'yes'}) 
   ============================================================== =========================



iosxe/cat3k
-----------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ================================================================= ==========================
   Pattern                                                           Action                    
   ----------------------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                                   sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                                   sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                               sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                    syslog_wait_send_return() 
   ``^.*Overwrite the previous NVRAM configuration\?\[confirm\].*$`` sendline({'key': ''})     
   ``^.*Delete filename \[.*\]\?\s*$``                               sendline({'key': ''})     
   ``^.*\[confirm\]\s*$``                                            sendline({'key': ''})     
   ``^.*Do you want to continue\? \[no\]:\s*$``                      sendline({'key': 'yes'})  
   ``^.*Do you want to remove the above files\? \[y\/n]\s*$``        sendline({'key': 'y'})    
   ================================================================= ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================================================== =========================
   Pattern                                                        Action                   
   -------------------------------------------------------------- -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                 syslog_wait_send_return()
   ``^.*Are you sure you want to continue\? \(y\/n\)\[y\]:?\s?$`` sendline({'key': 'y'})   
   ``^.*Do you wish to continue\? \[yes\]:\s*$``                  sendline({'key': 'yes'}) 
   ``^.*\[confirm\]\s*$``                                         sendline({'key': ''})    
   ``^.*Do you want to continue\? \[no\]:\s*$``                   sendline({'key': 'yes'}) 
   ``Are you sure you want to do this\? \[yes/no\]:\s*$``         sendline({'key': 'yes'}) 
   ``^.*Proceed\? \[yes,no\]\s*$``                                sendline({'key': 'yes'}) 
   ============================================================== =========================



iosxe/cat3k
-----------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ================================================================= ==========================
   Pattern                                                           Action                    
   ----------------------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                                   sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                                   sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                               sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                    syslog_wait_send_return() 
   ``^.*Overwrite the previous NVRAM configuration\?\[confirm\].*$`` sendline({'key': ''})     
   ``^.*Delete filename \[.*\]\?\s*$``                               sendline({'key': ''})     
   ``^.*\[confirm\]\s*$``                                            sendline({'key': ''})     
   ``^.*Do you want to continue\? \[no\]:\s*$``                      sendline({'key': 'yes'})  
   ``^.*Do you want to remove the above files\? \[y\/n]\s*$``        sendline({'key': 'y'})    
   ================================================================= ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================================================== =========================
   Pattern                                                        Action                   
   -------------------------------------------------------------- -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                 syslog_wait_send_return()
   ``^.*Are you sure you want to continue\? \(y\/n\)\[y\]:?\s?$`` sendline({'key': 'y'})   
   ``^.*Do you wish to continue\? \[yes\]:\s*$``                  sendline({'key': 'yes'}) 
   ``^.*\[confirm\]\s*$``                                         sendline({'key': ''})    
   ``^.*Do you want to continue\? \[no\]:\s*$``                   sendline({'key': 'yes'}) 
   ``Are you sure you want to do this\? \[yes/no\]:\s*$``         sendline({'key': 'yes'}) 
   ``^.*Proceed\? \[yes,no\]\s*$``                                sendline({'key': 'yes'}) 
   ============================================================== =========================



iosxe/cat4k
-----------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ================================================================= ==========================
   Pattern                                                           Action                    
   ----------------------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                                   sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                                   sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                               sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                    syslog_wait_send_return() 
   ``^.*Overwrite the previous NVRAM configuration\?\[confirm\].*$`` sendline({'key': ''})     
   ``^.*Delete filename \[.*\]\?\s*$``                               sendline({'key': ''})     
   ``^.*\[confirm\]\s*$``                                            sendline({'key': ''})     
   ``^.*Do you want to continue\? \[no\]:\s*$``                      sendline({'key': 'yes'})  
   ``^.*Do you want to remove the above files\? \[y\/n]\s*$``        sendline({'key': 'y'})    
   ================================================================= ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================================================== =========================
   Pattern                                                        Action                   
   -------------------------------------------------------------- -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                 syslog_wait_send_return()
   ``^.*Are you sure you want to continue\? \(y\/n\)\[y\]:?\s?$`` sendline({'key': 'y'})   
   ``^.*Do you wish to continue\? \[yes\]:\s*$``                  sendline({'key': 'yes'}) 
   ``^.*\[confirm\]\s*$``                                         sendline({'key': ''})    
   ``^.*Do you want to continue\? \[no\]:\s*$``                   sendline({'key': 'yes'}) 
   ``Are you sure you want to do this\? \[yes/no\]:\s*$``         sendline({'key': 'yes'}) 
   ``^.*Proceed\? \[yes,no\]\s*$``                                sendline({'key': 'yes'}) 
   ============================================================== =========================



iosxe/cat8k
-----------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ================================================================= ==========================
   Pattern                                                           Action                    
   ----------------------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                                   sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                                   sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                               sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                    syslog_wait_send_return() 
   ``^.*Overwrite the previous NVRAM configuration\?\[confirm\].*$`` sendline({'key': ''})     
   ``^.*Delete filename \[.*\]\?\s*$``                               sendline({'key': ''})     
   ``^.*\[confirm\]\s*$``                                            sendline({'key': ''})     
   ``^.*Do you want to continue\? \[no\]:\s*$``                      sendline({'key': 'yes'})  
   ``^.*Do you want to remove the above files\? \[y\/n]\s*$``        sendline({'key': 'y'})    
   ================================================================= ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================================================== =========================
   Pattern                                                        Action                   
   -------------------------------------------------------------- -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                 syslog_wait_send_return()
   ``^.*Are you sure you want to continue\? \(y\/n\)\[y\]:?\s?$`` sendline({'key': 'y'})   
   ``^.*Do you wish to continue\? \[yes\]:\s*$``                  sendline({'key': 'yes'}) 
   ``^.*\[confirm\]\s*$``                                         sendline({'key': ''})    
   ``^.*Do you want to continue\? \[no\]:\s*$``                   sendline({'key': 'yes'}) 
   ``Are you sure you want to do this\? \[yes/no\]:\s*$``         sendline({'key': 'yes'}) 
   ``^.*Proceed\? \[yes,no\]\s*$``                                sendline({'key': 'yes'}) 
   ============================================================== =========================



iosxe/cat9k
-----------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ================================================================= ==========================
   Pattern                                                           Action                    
   ----------------------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                                   sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                                   sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                               sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                    syslog_wait_send_return() 
   ``^.*Overwrite the previous NVRAM configuration\?\[confirm\].*$`` sendline({'key': ''})     
   ``^.*Delete filename \[.*\]\?\s*$``                               sendline({'key': ''})     
   ``^.*\[confirm\]\s*$``                                            sendline({'key': ''})     
   ``^.*Do you want to continue\? \[no\]:\s*$``                      sendline({'key': 'yes'})  
   ``^.*Do you want to remove the above files\? \[y\/n]\s*$``        sendline({'key': 'y'})    
   ================================================================= ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================================================== =========================
   Pattern                                                        Action                   
   -------------------------------------------------------------- -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                 syslog_wait_send_return()
   ``^.*Are you sure you want to continue\? \(y\/n\)\[y\]:?\s?$`` sendline({'key': 'y'})   
   ``^.*Do you wish to continue\? \[yes\]:\s*$``                  sendline({'key': 'yes'}) 
   ``^.*\[confirm\]\s*$``                                         sendline({'key': ''})    
   ``^.*Do you want to continue\? \[no\]:\s*$``                   sendline({'key': 'yes'}) 
   ``Are you sure you want to do this\? \[yes/no\]:\s*$``         sendline({'key': 'yes'}) 
   ``^.*Proceed\? \[yes,no\]\s*$``                                sendline({'key': 'yes'}) 
   ============================================================== =========================



iosxe/csr1000v
--------------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ================================================================= ==========================
   Pattern                                                           Action                    
   ----------------------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                                   sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                                   sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                               sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                    syslog_wait_send_return() 
   ``^.*Overwrite the previous NVRAM configuration\?\[confirm\].*$`` sendline({'key': ''})     
   ``^.*Delete filename \[.*\]\?\s*$``                               sendline({'key': ''})     
   ``^.*\[confirm\]\s*$``                                            sendline({'key': ''})     
   ``^.*Do you want to continue\? \[no\]:\s*$``                      sendline({'key': 'yes'})  
   ``^.*Do you want to remove the above files\? \[y\/n]\s*$``        sendline({'key': 'y'})    
   ================================================================= ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================================================== =========================
   Pattern                                                        Action                   
   -------------------------------------------------------------- -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                 syslog_wait_send_return()
   ``^.*Are you sure you want to continue\? \(y\/n\)\[y\]:?\s?$`` sendline({'key': 'y'})   
   ``^.*Do you wish to continue\? \[yes\]:\s*$``                  sendline({'key': 'yes'}) 
   ``^.*\[confirm\]\s*$``                                         sendline({'key': ''})    
   ``^.*Do you want to continue\? \[no\]:\s*$``                   sendline({'key': 'yes'}) 
   ``Are you sure you want to do this\? \[yes/no\]:\s*$``         sendline({'key': 'yes'}) 
   ``^.*Proceed\? \[yes,no\]\s*$``                                sendline({'key': 'yes'}) 
   ============================================================== =========================



iosxe/csr1000v
--------------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ================================================================= ==========================
   Pattern                                                           Action                    
   ----------------------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                                   sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                                   sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                               sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                    syslog_wait_send_return() 
   ``^.*Overwrite the previous NVRAM configuration\?\[confirm\].*$`` sendline({'key': ''})     
   ``^.*Delete filename \[.*\]\?\s*$``                               sendline({'key': ''})     
   ``^.*\[confirm\]\s*$``                                            sendline({'key': ''})     
   ``^.*Do you want to continue\? \[no\]:\s*$``                      sendline({'key': 'yes'})  
   ``^.*Do you want to remove the above files\? \[y\/n]\s*$``        sendline({'key': 'y'})    
   ================================================================= ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================================================== =========================
   Pattern                                                        Action                   
   -------------------------------------------------------------- -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                 syslog_wait_send_return()
   ``^.*Are you sure you want to continue\? \(y\/n\)\[y\]:?\s?$`` sendline({'key': 'y'})   
   ``^.*Do you wish to continue\? \[yes\]:\s*$``                  sendline({'key': 'yes'}) 
   ``^.*\[confirm\]\s*$``                                         sendline({'key': ''})    
   ``^.*Do you want to continue\? \[no\]:\s*$``                   sendline({'key': 'yes'}) 
   ``Are you sure you want to do this\? \[yes/no\]:\s*$``         sendline({'key': 'yes'}) 
   ``^.*Proceed\? \[yes,no\]\s*$``                                sendline({'key': 'yes'}) 
   ============================================================== =========================



iosxe/iec3400
-------------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== ===========================
   Pattern                     Action                     
   --------------------------- ---------------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()      
   ``\x1b\[6n``                terminal_position_handler()
   =========================== ===========================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ================================================================= ==========================
   Pattern                                                           Action                    
   ----------------------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                                   sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                                   sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                               sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                    syslog_wait_send_return() 
   ``^.*Overwrite the previous NVRAM configuration\?\[confirm\].*$`` sendline({'key': ''})     
   ``^.*Delete filename \[.*\]\?\s*$``                               sendline({'key': ''})     
   ``^.*\[confirm\]\s*$``                                            sendline({'key': ''})     
   ``^.*Do you want to continue\? \[no\]:\s*$``                      sendline({'key': 'yes'})  
   ``^.*Do you want to remove the above files\? \[y\/n]\s*$``        sendline({'key': 'y'})    
   ================================================================= ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================================================== =========================
   Pattern                                                        Action                   
   -------------------------------------------------------------- -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                 syslog_wait_send_return()
   ``^.*Are you sure you want to continue\? \(y\/n\)\[y\]:?\s?$`` sendline({'key': 'y'})   
   ``^.*Do you wish to continue\? \[yes\]:\s*$``                  sendline({'key': 'yes'}) 
   ``^.*\[confirm\]\s*$``                                         sendline({'key': ''})    
   ``^.*Do you want to continue\? \[no\]:\s*$``                   sendline({'key': 'yes'}) 
   ``Are you sure you want to do this\? \[yes/no\]:\s*$``         sendline({'key': 'yes'}) 
   ``^.*Proceed\? \[yes,no\]\s*$``                                sendline({'key': 'yes'}) 
   ============================================================== =========================



iosxe/quad
----------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ================================================================= ==========================
   Pattern                                                           Action                    
   ----------------------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                                   sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                                   sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                               sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                    syslog_wait_send_return() 
   ``^.*Overwrite the previous NVRAM configuration\?\[confirm\].*$`` sendline({'key': ''})     
   ``^.*Delete filename \[.*\]\?\s*$``                               sendline({'key': ''})     
   ``^.*\[confirm\]\s*$``                                            sendline({'key': ''})     
   ``^.*Do you want to continue\? \[no\]:\s*$``                      sendline({'key': 'yes'})  
   ``^.*Do you want to remove the above files\? \[y\/n]\s*$``        sendline({'key': 'y'})    
   ================================================================= ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================================================== =========================
   Pattern                                                        Action                   
   -------------------------------------------------------------- -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                 syslog_wait_send_return()
   ``^.*Are you sure you want to continue\? \(y\/n\)\[y\]:?\s?$`` sendline({'key': 'y'})   
   ``^.*Do you wish to continue\? \[yes\]:\s*$``                  sendline({'key': 'yes'}) 
   ``^.*\[confirm\]\s*$``                                         sendline({'key': ''})    
   ``^.*Do you want to continue\? \[no\]:\s*$``                   sendline({'key': 'yes'}) 
   ``Are you sure you want to do this\? \[yes/no\]:\s*$``         sendline({'key': 'yes'}) 
   ``^.*Proceed\? \[yes,no\]\s*$``                                sendline({'key': 'yes'}) 
   ============================================================== =========================



iosxe/sdwan
-----------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ================================================================= ==========================
   Pattern                                                           Action                    
   ----------------------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                                   sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                                   sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                               sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                    syslog_wait_send_return() 
   ``^.*Overwrite the previous NVRAM configuration\?\[confirm\].*$`` sendline({'key': ''})     
   ``^.*Delete filename \[.*\]\?\s*$``                               sendline({'key': ''})     
   ``^.*\[confirm\]\s*$``                                            sendline({'key': ''})     
   ``^.*Do you want to continue\? \[no\]:\s*$``                      sendline({'key': 'yes'})  
   ``^.*Do you want to remove the above files\? \[y\/n]\s*$``        sendline({'key': 'y'})    
   ================================================================= ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================================================== =========================
   Pattern                                                        Action                   
   -------------------------------------------------------------- -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                 syslog_wait_send_return()
   ``^.*Are you sure you want to continue\? \(y\/n\)\[y\]:?\s?$`` sendline({'key': 'y'})   
   ``^.*Do you wish to continue\? \[yes\]:\s*$``                  sendline({'key': 'yes'}) 
   ``^.*\[confirm\]\s*$``                                         sendline({'key': ''})    
   ``^.*Do you want to continue\? \[no\]:\s*$``                   sendline({'key': 'yes'}) 
   ``Are you sure you want to do this\? \[yes/no\]:\s*$``         sendline({'key': 'yes'}) 
   ``^.*Proceed\? \[yes,no\]\s*$``                                sendline({'key': 'yes'}) 
   ============================================================== =========================



iosxe/stack
-----------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ================================================================= ==========================
   Pattern                                                           Action                    
   ----------------------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                                   sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                                   sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                               sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                    syslog_wait_send_return() 
   ``^.*Overwrite the previous NVRAM configuration\?\[confirm\].*$`` sendline({'key': ''})     
   ``^.*Delete filename \[.*\]\?\s*$``                               sendline({'key': ''})     
   ``^.*\[confirm\]\s*$``                                            sendline({'key': ''})     
   ``^.*Do you want to continue\? \[no\]:\s*$``                      sendline({'key': 'yes'})  
   ``^.*Do you want to remove the above files\? \[y\/n]\s*$``        sendline({'key': 'y'})    
   ================================================================= ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================================================== =========================
   Pattern                                                        Action                   
   -------------------------------------------------------------- -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                 syslog_wait_send_return()
   ``^.*Are you sure you want to continue\? \(y\/n\)\[y\]:?\s?$`` sendline({'key': 'y'})   
   ``^.*Do you wish to continue\? \[yes\]:\s*$``                  sendline({'key': 'yes'}) 
   ``^.*\[confirm\]\s*$``                                         sendline({'key': ''})    
   ``^.*Do you want to continue\? \[no\]:\s*$``                   sendline({'key': 'yes'}) 
   ``Are you sure you want to do this\? \[yes/no\]:\s*$``         sendline({'key': 'yes'}) 
   ``^.*Proceed\? \[yes,no\]\s*$``                                sendline({'key': 'yes'}) 
   ============================================================== =========================



iosxr
-----



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^.*Enter secret(\sagain)?:\s?$``                                                                     password_handler()          
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ==================================================== ==========================
   Pattern                                              Action                    
   ---------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                      sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                      sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                  sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                       syslog_wait_send_return() 
   ``Do you wish to proceed?.*$``                       sendline({'key': 'yes'})  
   ``\[confirm( with only 'y' or 'n')?\]\s*\[y/n\].*$`` sendline({'key': 'y'})    
   ==================================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



iosxr/asr9k
-----------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^.*Enter secret(\sagain)?:\s?$``                                                                     password_handler()          
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ==================================================== ==========================
   Pattern                                              Action                    
   ---------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                      sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                      sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                  sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                       syslog_wait_send_return() 
   ``Do you wish to proceed?.*$``                       sendline({'key': 'yes'})  
   ``\[confirm( with only 'y' or 'n')?\]\s*\[y/n\].*$`` sendline({'key': 'y'})    
   ==================================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



iosxr/iosxrv
------------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^.*Enter secret(\sagain)?:\s?$``                                                                     password_handler()          
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ==================================================== ==========================
   Pattern                                              Action                    
   ---------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                      sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                      sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                  sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                       syslog_wait_send_return() 
   ``Do you wish to proceed?.*$``                       sendline({'key': 'yes'})  
   ``\[confirm( with only 'y' or 'n')?\]\s*\[y/n\].*$`` sendline({'key': 'y'})    
   ==================================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



iosxr/iosxrv9k
--------------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^.*Enter secret(\sagain)?:\s?$``                                                                     password_handler()          
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ==================================================== ==========================
   Pattern                                              Action                    
   ---------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                      sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                      sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                  sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                       syslog_wait_send_return() 
   ``Do you wish to proceed?.*$``                       sendline({'key': 'yes'})  
   ``\[confirm( with only 'y' or 'n')?\]\s*\[y/n\].*$`` sendline({'key': 'y'})    
   ==================================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



iosxr/moonshine
---------------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^.*Enter secret(\sagain)?:\s?$``                                                                     password_handler()          
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ==================================================== ==========================
   Pattern                                              Action                    
   ---------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                      sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                      sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                  sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                       syslog_wait_send_return() 
   ``Do you wish to proceed?.*$``                       sendline({'key': 'yes'})  
   ``\[confirm( with only 'y' or 'n')?\]\s*\[y/n\].*$`` sendline({'key': 'y'})    
   ==================================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



iosxr/ncs5k
-----------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^.*Enter secret(\sagain)?:\s?$``                                                                     password_handler()          
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ==================================================== ==========================
   Pattern                                              Action                    
   ---------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                      sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                      sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                  sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                       syslog_wait_send_return() 
   ``Do you wish to proceed?.*$``                       sendline({'key': 'yes'})  
   ``\[confirm( with only 'y' or 'n')?\]\s*\[y/n\].*$`` sendline({'key': 'y'})    
   ==================================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



iosxr/spitfire
--------------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ====================================================
   Pattern                                                                                                Action                                              
   ------------------------------------------------------------------------------------------------------ ----------------------------------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()                              
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()                           
   ``^(.*?)spitfire-arm login:\s*?$``                                                                     bmc_login_handler()                                 
   ``^.*([Uu]sername|[Ll]ogin):\s*?$``                                                                    xr_login_handler()                                  
   ``^.*User Access Verification``                                                                        user_access_verification()                          
   ``^.*[Pp]assword:\s*?$``                                                                               password_handler()                                  
   ``^.*Enter secret(\sagain)?:\s?$``                                                                     password_handler({'reuse_current_credential': True})
   ``Escape character is .*\n``                                                                           escape_char_callback()                              
   ``^.*RETURN to get started``                                                                           wait_and_enter()                                    
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()                           
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()                        
   ``Received disconnect from .*:``                                                                       connection_failure_handler()                        
   ``Hit Enter to proceed:``                                                                              wait_and_enter()                                    
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()                                    
   ``^(.*?)Connected.``                                                                                   sendline()                                          
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()                           
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})                               
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler()                         
   ====================================================================================================== ====================================================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



ironware
--------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



ise
---



connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ====================
   Pattern                                                                                                Action              
   ------------------------------------------------------------------------------------------------------ --------------------
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         wait_and_send_yes() 
   ``^.*[Pp]ermission denied``                                                                            permission_denied() 
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      username_handler()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()  
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused()
   ``Enter session number to resume or press <Enter> to start a new one:``                                send_enter()        
   ``^.*--More--.*``                                                                                      more_handler()      
   ``Press <Enter> to continue``                                                                          send_enter()        
   ``Escape character is``                                                                                send_enter()        
   ====================================================================================================== ====================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



junos
-----



connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*[Ll]ogin: ?$``                                                                                    login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword: ?$``                                                                                 password_handler()          
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



junos/vsrx
----------



connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*[Ll]ogin: ?$``                                                                                    login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword: ?$``                                                                                 password_handler()          
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



linux
-----



connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      username_handler()          
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^.*Enter passphrase for key .*?:\s*?``                                                               password_handler()          
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ===================================== ==========================
   Pattern                               Action                    
   ------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``       sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``       sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``   sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``        syslog_wait_send_return() 
   ``^.*\[sudo\] password for .*?:\s*?`` sudo_password_handler()   
   ===================================== ==========================



nd
--



connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      username_handler()          
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^.*Enter passphrase for key .*?:\s*?``                                                               password_handler()          
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ===================================== ==========================
   Pattern                               Action                    
   ------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``       sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``       sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``   sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``        syslog_wait_send_return() 
   ``^.*\[sudo\] password for .*?:\s*?`` sudo_password_handler()   
   ===================================== ==========================



nso
---



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ``^(.*?)connected from .* using console``                                                              console_session()           
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================



nxos
----



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ==================================
   Pattern                                                                                                Action                            
   ------------------------------------------------------------------------------------------------------ ----------------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()            
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()         
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()                   
   ``^.*User Access Verification``                                                                        user_access_verification()        
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()                
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                        
   ``Password OK\s*$``                                                                                    sendline()                        
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()              
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()         
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})           
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})             
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})            
   ``Escape character is .*\n``                                                                           escape_char_callback()            
   ``^.*RETURN to get started``                                                                           wait_and_enter()                  
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()         
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()      
   ``Received disconnect from .*:``                                                                       connection_failure_handler()      
   ``Hit Enter to proceed:``                                                                              wait_and_enter()                  
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()                  
   ``^(.*?)Connected.``                                                                                   sendline()                        
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()         
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})             
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler()       
   ``Do you want to enable admin vdc\s?\(yes\/no\)\s?\[n\]\:``                                            send_response({'response': 'no'}) 
   ``^.*Boot up system with default vdc \(yes\/no\) \[y\]\:``                                             send_response({'response': 'yes'})
   ``^.*Enable the SNMP port\? \(yes\/no\) \[y\]:``                                                       send_response({'response': ''})   
   ``^.*(Enter|Confirm) the password for .*admin``                                                        admin_password_handler()          
   ``^.*Do you want to enforce secure password standard \(yes\/no\) \[y\]\:``                             send_response({'response': 'n'})  
   ``Abort( Power On)? Auto Provisioning .*:``                                                            send_response({'response': 'y'})  
   ====================================================================================================== ==================================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ======================================================== ==========================
   Pattern                                                  Action                    
   -------------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                          sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                          sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                      sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                           syslog_wait_send_return() 
   ``This command will reload module \S+ Proceed\[y\/n]\?`` sendline({'key': 'y'})    
   ======================================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



nxos/aci
--------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



nxos/mds
--------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ==================================
   Pattern                                                                                                Action                            
   ------------------------------------------------------------------------------------------------------ ----------------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()            
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()         
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()                   
   ``^.*User Access Verification``                                                                        user_access_verification()        
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()                
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                        
   ``Password OK\s*$``                                                                                    sendline()                        
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()              
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()         
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})           
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})             
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})            
   ``Escape character is .*\n``                                                                           escape_char_callback()            
   ``^.*RETURN to get started``                                                                           wait_and_enter()                  
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()         
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()      
   ``Received disconnect from .*:``                                                                       connection_failure_handler()      
   ``Hit Enter to proceed:``                                                                              wait_and_enter()                  
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()                  
   ``^(.*?)Connected.``                                                                                   sendline()                        
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()         
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})             
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler()       
   ``Do you want to enable admin vdc\s?\(yes\/no\)\s?\[n\]\:``                                            send_response({'response': 'no'}) 
   ``^.*Boot up system with default vdc \(yes\/no\) \[y\]\:``                                             send_response({'response': 'yes'})
   ``^.*Enable the SNMP port\? \(yes\/no\) \[y\]:``                                                       send_response({'response': ''})   
   ``^.*(Enter|Confirm) the password for .*admin``                                                        admin_password_handler()          
   ``^.*Do you want to enforce secure password standard \(yes\/no\) \[y\]\:``                             send_response({'response': 'n'})  
   ``Abort( Power On)? Auto Provisioning .*:``                                                            send_response({'response': 'y'})  
   ====================================================================================================== ==================================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ======================================================== ==========================
   Pattern                                                  Action                    
   -------------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                          sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                          sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                      sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                           syslog_wait_send_return() 
   ``This command will reload module \S+ Proceed\[y\/n]\?`` sendline({'key': 'y'})    
   ======================================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



nxos/n5k
--------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ==================================
   Pattern                                                                                                Action                            
   ------------------------------------------------------------------------------------------------------ ----------------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()            
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()         
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()                   
   ``^.*User Access Verification``                                                                        user_access_verification()        
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()                
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                        
   ``Password OK\s*$``                                                                                    sendline()                        
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()              
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()         
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})           
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})             
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})            
   ``Escape character is .*\n``                                                                           escape_char_callback()            
   ``^.*RETURN to get started``                                                                           wait_and_enter()                  
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()         
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()      
   ``Received disconnect from .*:``                                                                       connection_failure_handler()      
   ``Hit Enter to proceed:``                                                                              wait_and_enter()                  
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()                  
   ``^(.*?)Connected.``                                                                                   sendline()                        
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()         
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})             
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler()       
   ``Do you want to enable admin vdc\s?\(yes\/no\)\s?\[n\]\:``                                            send_response({'response': 'no'}) 
   ``^.*Boot up system with default vdc \(yes\/no\) \[y\]\:``                                             send_response({'response': 'yes'})
   ``^.*Enable the SNMP port\? \(yes\/no\) \[y\]:``                                                       send_response({'response': ''})   
   ``^.*(Enter|Confirm) the password for .*admin``                                                        admin_password_handler()          
   ``^.*Do you want to enforce secure password standard \(yes\/no\) \[y\]\:``                             send_response({'response': 'n'})  
   ``Abort( Power On)? Auto Provisioning .*:``                                                            send_response({'response': 'y'})  
   ====================================================================================================== ==================================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ======================================================== ==========================
   Pattern                                                  Action                    
   -------------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                          sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                          sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                      sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                           syslog_wait_send_return() 
   ``This command will reload module \S+ Proceed\[y\/n]\?`` sendline({'key': 'y'})    
   ======================================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



nxos/n7k
--------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ==================================
   Pattern                                                                                                Action                            
   ------------------------------------------------------------------------------------------------------ ----------------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()            
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()         
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()                   
   ``^.*User Access Verification``                                                                        user_access_verification()        
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()                
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                        
   ``Password OK\s*$``                                                                                    sendline()                        
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()              
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()         
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})           
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})             
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})            
   ``Escape character is .*\n``                                                                           escape_char_callback()            
   ``^.*RETURN to get started``                                                                           wait_and_enter()                  
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()         
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()      
   ``Received disconnect from .*:``                                                                       connection_failure_handler()      
   ``Hit Enter to proceed:``                                                                              wait_and_enter()                  
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()                  
   ``^(.*?)Connected.``                                                                                   sendline()                        
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()         
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})             
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler()       
   ``Do you want to enable admin vdc\s?\(yes\/no\)\s?\[n\]\:``                                            send_response({'response': 'no'}) 
   ``^.*Boot up system with default vdc \(yes\/no\) \[y\]\:``                                             send_response({'response': 'yes'})
   ``^.*Enable the SNMP port\? \(yes\/no\) \[y\]:``                                                       send_response({'response': ''})   
   ``^.*(Enter|Confirm) the password for .*admin``                                                        admin_password_handler()          
   ``^.*Do you want to enforce secure password standard \(yes\/no\) \[y\]\:``                             send_response({'response': 'n'})  
   ``Abort( Power On)? Auto Provisioning .*:``                                                            send_response({'response': 'y'})  
   ====================================================================================================== ==================================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ======================================================== ==========================
   Pattern                                                  Action                    
   -------------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                          sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                          sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                      sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                           syslog_wait_send_return() 
   ``This command will reload module \S+ Proceed\[y\/n]\?`` sendline({'key': 'y'})    
   ======================================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



nxos/n9k
--------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ==================================
   Pattern                                                                                                Action                            
   ------------------------------------------------------------------------------------------------------ ----------------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()            
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()         
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()                   
   ``^.*User Access Verification``                                                                        user_access_verification()        
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()                
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                        
   ``Password OK\s*$``                                                                                    sendline()                        
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()              
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()         
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})           
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})             
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})            
   ``Escape character is .*\n``                                                                           escape_char_callback()            
   ``^.*RETURN to get started``                                                                           wait_and_enter()                  
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()         
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()      
   ``Received disconnect from .*:``                                                                       connection_failure_handler()      
   ``Hit Enter to proceed:``                                                                              wait_and_enter()                  
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()                  
   ``^(.*?)Connected.``                                                                                   sendline()                        
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()         
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})             
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler()       
   ``Do you want to enable admin vdc\s?\(yes\/no\)\s?\[n\]\:``                                            send_response({'response': 'no'}) 
   ``^.*Boot up system with default vdc \(yes\/no\) \[y\]\:``                                             send_response({'response': 'yes'})
   ``^.*Enable the SNMP port\? \(yes\/no\) \[y\]:``                                                       send_response({'response': ''})   
   ``^.*(Enter|Confirm) the password for .*admin``                                                        admin_password_handler()          
   ``^.*Do you want to enforce secure password standard \(yes\/no\) \[y\]\:``                             send_response({'response': 'n'})  
   ``Abort( Power On)? Auto Provisioning .*:``                                                            send_response({'response': 'y'})  
   ====================================================================================================== ==================================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ======================================================== ==========================
   Pattern                                                  Action                    
   -------------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                          sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                          sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                      sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                           syslog_wait_send_return() 
   ``This command will reload module \S+ Proceed\[y\/n]\?`` sendline({'key': 'y'})    
   ======================================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



nxos/nxosv
----------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ==================================
   Pattern                                                                                                Action                            
   ------------------------------------------------------------------------------------------------------ ----------------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()            
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()         
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()                   
   ``^.*User Access Verification``                                                                        user_access_verification()        
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()                
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                        
   ``Password OK\s*$``                                                                                    sendline()                        
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()              
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()         
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})           
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})             
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})            
   ``Escape character is .*\n``                                                                           escape_char_callback()            
   ``^.*RETURN to get started``                                                                           wait_and_enter()                  
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()         
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()      
   ``Received disconnect from .*:``                                                                       connection_failure_handler()      
   ``Hit Enter to proceed:``                                                                              wait_and_enter()                  
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()                  
   ``^(.*?)Connected.``                                                                                   sendline()                        
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()         
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})             
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler()       
   ``Do you want to enable admin vdc\s?\(yes\/no\)\s?\[n\]\:``                                            send_response({'response': 'no'}) 
   ``^.*Boot up system with default vdc \(yes\/no\) \[y\]\:``                                             send_response({'response': 'yes'})
   ``^.*Enable the SNMP port\? \(yes\/no\) \[y\]:``                                                       send_response({'response': ''})   
   ``^.*(Enter|Confirm) the password for .*admin``                                                        admin_password_handler()          
   ``^.*Do you want to enforce secure password standard \(yes\/no\) \[y\]\:``                             send_response({'response': 'n'})  
   ``Abort( Power On)? Auto Provisioning .*:``                                                            send_response({'response': 'y'})  
   ``^.*([Uu]sername|[Ll]ogin): ?``                                                                       login_handler()                   
   ``^.*[Pp]assword: ?``                                                                                  password_handler()                
   ====================================================================================================== ==================================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ======================================================== ==========================
   Pattern                                                  Action                    
   -------------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                          sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                          sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                      sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                           syslog_wait_send_return() 
   ``This command will reload module \S+ Proceed\[y\/n]\?`` sendline({'key': 'y'})    
   ======================================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



sdwan
-----



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



sdwan/iosxe
-----------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =========================== =====================
   Pattern                     Action               
   --------------------------- ---------------------
   ``^.*--\s?[Mm]ore\s?--.*$`` more_prompt_handler()
   =========================== =====================


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ================================================================= ==========================
   Pattern                                                           Action                    
   ----------------------------------------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``                                   sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``                                   sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$``                               sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                    syslog_wait_send_return() 
   ``^.*Overwrite the previous NVRAM configuration\?\[confirm\].*$`` sendline({'key': ''})     
   ``^.*Delete filename \[.*\]\?\s*$``                               sendline({'key': ''})     
   ``^.*\[confirm\]\s*$``                                            sendline({'key': ''})     
   ``^.*Do you want to continue\? \[no\]:\s*$``                      sendline({'key': 'yes'})  
   ``^.*Do you want to remove the above files\? \[y\/n]\s*$``        sendline({'key': 'y'})    
   ================================================================= ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================================================== =========================
   Pattern                                                        Action                   
   -------------------------------------------------------------- -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                 syslog_wait_send_return()
   ``^.*Are you sure you want to continue\? \(y\/n\)\[y\]:?\s?$`` sendline({'key': 'y'})   
   ``^.*Do you wish to continue\? \[yes\]:\s*$``                  sendline({'key': 'yes'}) 
   ``^.*\[confirm\]\s*$``                                         sendline({'key': ''})    
   ``^.*Do you want to continue\? \[no\]:\s*$``                   sendline({'key': 'yes'}) 
   ``Are you sure you want to do this\? \[yes/no\]:\s*$``         sendline({'key': 'yes'}) 
   ``^.*Proceed\? \[yes,no\]\s*$``                                sendline({'key': 'yes'}) 
   ============================================================== =========================



sdwan/viptela
-------------



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*--\s?[Mm]ore\s?--.*$``         more_prompt_handler()     
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   =================================== ==========================


connect
~~~~~~~

.. warning:: Duplicate statement [pattern='^(.*?)connected from .* using console', action=console_session, args=None, loop_continue=True, continue_timer=False, trim_buffer=True]

.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ``^(.*?)connected from .* using console``                                                              console_session()           
   ``^(.*?)connected from .* using console``                                                              console_session()           
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================



slxos
-----



connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*[Ll]ogin:\s*$``                                                                                   login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword:\s*$``                                                                                password_handler()          
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================



sros
----



connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ``^Permission denied, please try again\.\s?$``                                                         permission_denied()         
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      username_handler()          
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ====================================================================================================== ============================



staros
------



connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================



vos
---



default
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =============================================================================================================== =============
   Pattern                                                                                                         Action       
   --------------------------------------------------------------------------------------------------------------- -------------
   ``^.*?\x1b\[1mPress <enter> for 1 line, <space> for one page, or <q> to quit\x1b\[0m``                          press_space()
   ``^.*?\x1b\[1m\r\noptions: q=quit, n=next, p=prev, b=begin, e=end \(lines (\d+) - (\d+) of (\d+)\) : \x1b\[0m`` paginate()   
   =============================================================================================================== =============


connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   ``.*Continue \(y/n\)\?``            sendline({'key': 'y'})    
   =================================== ==========================



windows
-------



connect
~~~~~~~


.. table::
   :widths: auto
   :align: left


   ====================================================================================================== ============================
   Pattern                                                                                                Action                      
   ------------------------------------------------------------------------------------------------------ ----------------------------
   ``^.*?% (Bad passwords|Access denied|Authentication failed)``                                          bad_password_handler()      
   ``^.*Login incorrect``                                                                                 incorrect_login_handler()   
   ``^.*([Uu]sername|[Ll]ogin): ?$``                                                                      login_handler()             
   ``^.*User Access Verification``                                                                        user_access_verification()  
   ``^.*[Pp]assword( for )?(\S+)?: ?$``                                                                   password_handler()          
   ``^(.*)Kerberos:\s*No default realm defined for Kerberos!``                                            sendline()                  
   ``Password OK\s*$``                                                                                    sendline()                  
   ``^.*Enter passphrase for key .*?:\s*?``                                                               passphrase_handler()        
   ``^.*?(Enter|Confirm) enable secret:\s*$``                                                             enable_password_handler()   
   ``^.*(initial|basic) configuration dialog\s?\??\s*((\[yes.*\])|(\(yes/no\))|(\(yes/no\)\s*(\[y\]))):`` sendline({'key': 'no'})     
   ``Would you like to enter basic management setup\? \[yes/no\]:``                                       send({'key': '\x03'})       
   ``^.*?Enter your selection( \[2])?:\s*$``                                                              sendline({'key': '2'})      
   ``Escape character is .*\n``                                                                           escape_char_callback()      
   ``^.*RETURN to get started``                                                                           wait_and_enter()            
   ``Are you sure you want to continue connecting \(yes/no(/\[fingerprint\])?\)``                         ssh_continue_connecting()   
   ``^.*(Connection refused|Connection reset by peer|Broken pipe|Network is down|closed by remote host)`` connection_refused_handler()
   ``Received disconnect from .*:``                                                                       connection_failure_handler()
   ``Hit Enter to proceed:``                                                                              wait_and_enter()            
   ``^(.*?)Press Ctrl\+x to Exit the session``                                                            wait_and_enter()            
   ``^(.*?)Connected.``                                                                                   sendline()                  
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``                                                                         syslog_wait_send_return()   
   ``^.*?Press any key to continue\.\s*$``                                                                sendline({'key': ''})       
   ``^.*[Pp]ermission denied``                                                                            permission_denied_handler() 
   ====================================================================================================== ============================


execute
~~~~~~~


.. table::
   :widths: auto
   :align: left


   =================================== ==========================
   Pattern                             Action                    
   ----------------------------------- --------------------------
   ``^.*\[confirm\]\s*\[y/n\].*$``     sendline({'key': 'y'})    
   ``^.*\[confirm(\(y/n\))?\].*$``     sendline()                
   ``^.*\[yes[/,][Nn][Oo]\]\s?:?\s*$`` sendline({'command': 'y'})
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$``      syslog_wait_send_return() 
   =================================== ==========================


configure
~~~~~~~~~


.. table::
   :widths: auto
   :align: left


   ============================== =========================
   Pattern                        Action                   
   ------------------------------ -------------------------
   ``^.*?%\w+(-\S+)?-\d+-\w+.*$`` syslog_wait_send_return()
   ============================== =========================
